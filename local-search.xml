<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mysql-集群(贰)</title>
    <link href="/posts/7b686047/"/>
    <url>/posts/7b686047/</url>
    
    <content type="html"><![CDATA[<blockquote><p>中间件：一种提供在不同技术、不同的软件之间共享资源的程序，更大化了利用了数据库的性能，可以无限扩展（真实环境中并非如此）</p><p>数据库的中间件：</p><ul><li><code>mysql proxy</code>（官方版本）性能低，需要 <code>lua</code> 脚本</li><li><code>atlas</code> 性能低，响应时间长</li><li><code>amoeba</code> 陈思儒研发    </li></ul><p>主服务器 <code>test</code> （<code>10.4.7.103</code>）</p><p>从服务器 <code>test2</code> （<code>10.4.7.104</code>）</p><p>中间件 <code>b</code> （<code>10.4.7.102</code>）</p></blockquote><h1 id="一、先搭建一个主从关系的服务器"><a href="#一、先搭建一个主从关系的服务器" class="headerlink" title="一、先搭建一个主从关系的服务器"></a>一、先搭建一个主从关系的服务器</h1><blockquote><p>在主、从服务器上安装 <code>mysql</code>、<code>mysql-server</code></p></blockquote><h2 id="1-主服务器-test-配置"><a href="#1-主服务器-test-配置" class="headerlink" title="1. 主服务器 test 配置"></a>1. 主服务器 <code>test</code> 配置</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test ~]# yum -y install mysql mysql-server<br># 开启二进制日志<br>[root@test ~]# vi /etc/my.cnf<br><br><span class="hljs-meta">[mysqld]</span><br>log_bin=mysql-bin<br>server-id=103<br><br># 主服务器授权<br>[root@test ~]# mysql -uroot -p123456<br>mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.104&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000001 |      328 |              |                  |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>1 row in set (0.05 sec)<br><br># 测试<br>mysql&gt; create database butatree;<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; use butatree<br>Database changed<br>mysql&gt; create table b(id int,name char(50),age int);<br>Query OK, 0 rows affected (0.07 sec)<br><br>mysql&gt; insert into b values (1,<span class="hljs-emphasis">&#x27;xiaoming&#x27;</span>,20),(2,<span class="hljs-emphasis">&#x27;xioalong&#x27;</span>,21);<br>Query OK, 2 rows affected (0.08 sec)<br>Records: 2  Duplicates: 0  Warnings: 0<br><br>mysql&gt; select * from butatree.b;<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>| id   | name     | age  |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>|    1 | xiaoming |   20 |<br>|    2 | xioalong |   21 |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>2 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><h2 id="2-从服务器-test2-配置"><a href="#2-从服务器-test2-配置" class="headerlink" title="2. 从服务器 test2 配置"></a>2. 从服务器 <code>test2</code> 配置</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test2 ~]# yum -y install mysql mysql-server<br>[root@test2 ~]# vi /etc/my.cnf<br><br><span class="hljs-meta">[mysqld]</span><br>log_bin=mysql-bin<br>server-id=104<br><br># 从服务器保存授权信息<br>mysql&gt; change master to<br><span class="hljs-code">    -&gt; master_user=&#x27;slave&#x27;,</span><br><span class="hljs-code">    -&gt; master_password=&#x27;123456&#x27;,</span><br><span class="hljs-code">    -&gt; master_host=&#x27;10.4.7.103&#x27;,</span><br><span class="hljs-code">    -&gt; master_log_file=&#x27;mysql-bin.000001&#x27;,</span><br><span class="hljs-code">    -&gt; master_log_pos=328;</span><br>Query OK, 0 rows affected, 2 warnings (0.08 sec)<br><br>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.06 sec)<br><br>mysql&gt; show slave status\G;<br><span class="hljs-bullet">*************************** </span>1. row <span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span><span class="hljs-strong">*****</span>**<br><span class="hljs-code">               Slave_IO_State: Waiting for master to send event</span><br><span class="hljs-code">                  Master_Host: 10.4.7.103</span><br><span class="hljs-code">                  Master_User: slave</span><br><span class="hljs-code">                  Master_Port: 3306</span><br><span class="hljs-code">                Connect_Retry: 60</span><br><span class="hljs-code">              Master_Log_File: mysql-bin.000001</span><br><span class="hljs-code">          Read_Master_Log_Pos: 328</span><br><span class="hljs-code">               Relay_Log_File: mysqld-relay-bin.000002</span><br><span class="hljs-code">                Relay_Log_Pos: 283</span><br><span class="hljs-code">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="hljs-code">             Slave_IO_Running: Yes</span><br><span class="hljs-code">            Slave_SQL_Running: Yes</span><br><span class="hljs-code">            ...</span><br># 测试<br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| butatree           |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br><br>mysql&gt; use butatree;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>mysql&gt; select * from b;<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>| id   | name     | age  |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>|    1 | xiaoming |   20 |<br>|    2 | xioalong |   21 |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="3-关闭-test-从服务器线程"><a href="#3-关闭-test-从服务器线程" class="headerlink" title="3. 关闭 test 从服务器线程"></a>3. 关闭 <code>test</code> 从服务器线程</h2><p><strong>关闭从服务器线程，为了做读写分离时，测试有明显的实验效果（实际生产环境中不能停掉</strong>）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">stop</span> <span class="hljs-string">slave;</span><br><span class="hljs-string">Query</span> <span class="hljs-string">OK,</span> <span class="hljs-number">0</span> <span class="hljs-string">rows</span> <span class="hljs-string">affected</span> <span class="hljs-string">(0.25</span> <span class="hljs-string">sec)</span><br><br><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">show</span> <span class="hljs-string">slave</span> <span class="hljs-string">status\G;</span><br><span class="hljs-string">***************************</span> <span class="hljs-number">1</span><span class="hljs-string">.</span> <span class="hljs-string">row</span> <span class="hljs-string">***************************</span><br>               <span class="hljs-attr">Slave_IO_State:</span> <br>                  <span class="hljs-attr">Master_Host:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span><br>                  <span class="hljs-attr">Master_User:</span> <span class="hljs-string">slave</span><br>                  <span class="hljs-attr">Master_Port:</span> <span class="hljs-number">3306</span><br>                <span class="hljs-attr">Connect_Retry:</span> <span class="hljs-number">60</span><br>              <span class="hljs-attr">Master_Log_File:</span> <span class="hljs-string">mysql-bin.000001</span><br>          <span class="hljs-attr">Read_Master_Log_Pos:</span> <span class="hljs-number">328</span><br>               <span class="hljs-attr">Relay_Log_File:</span> <span class="hljs-string">mysqld-relay-bin.000003</span><br>                <span class="hljs-attr">Relay_Log_Pos:</span> <span class="hljs-number">283</span><br>        <span class="hljs-attr">Relay_Master_Log_File:</span> <span class="hljs-string">mysql-bin.000001</span><br>             <span class="hljs-attr">Slave_IO_Running:</span> <span class="hljs-literal">No</span><br>            <span class="hljs-attr">Slave_SQL_Running:</span> <span class="hljs-literal">No</span><br>            <span class="hljs-string">...</span><br><span class="hljs-comment"># 在从服务器上插入一条数据，这时主服务器上肯定没有插入的第三条数据，因为我们关闭了 slave</span><br><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">insert</span> <span class="hljs-string">into</span> <span class="hljs-string">butatree.b</span> <span class="hljs-string">values</span> <span class="hljs-string">(3,&#x27;xiaoji&#x27;,22);</span><br><span class="hljs-string">Query</span> <span class="hljs-string">OK,</span> <span class="hljs-number">1</span> <span class="hljs-string">row</span> <span class="hljs-string">affected</span> <span class="hljs-string">(0.06</span> <span class="hljs-string">sec)</span><br></code></pre></td></tr></table></figure><h2 id="4-查看-test-主服务器数据库字段"><a href="#4-查看-test-主服务器数据库字段" class="headerlink" title="4. 查看 test 主服务器数据库字段"></a>4. 查看 <code>test</code> 主服务器数据库字段</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; select * from butatree.b;<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>| id   | name     | age  |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>|    1 | xiaoming |   20 |<br>|    2 | xioalong |   21 |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><hr><h1 id="二、配置读写分离"><a href="#二、配置读写分离" class="headerlink" title="二、配置读写分离"></a>二、配置读写分离</h1><blockquote><p>在 <code>b</code> 服务器上进行操作</p><p>软件：</p><ul><li><code>amoeba-mysql-1.3.1-BETA.zip</code></li><li><code>jdk-7u80-linux-x64.tar.gz</code></li></ul></blockquote><h2 id="1-安装-gcc-环境-（amoeba-需要源码安装）"><a href="#1-安装-gcc-环境-（amoeba-需要源码安装）" class="headerlink" title="1. 安装 gcc 环境 （amoeba 需要源码安装）"></a>1. 安装 <code>gcc</code> 环境 （<code>amoeba</code> 需要源码安装）</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@b</span> ~]<span class="hljs-meta"># yum -y install gcc*</span><br></code></pre></td></tr></table></figure><h2 id="2-创建目录并拷贝amoeba"><a href="#2-创建目录并拷贝amoeba" class="headerlink" title="2. 创建目录并拷贝amoeba"></a>2. 创建目录并拷贝<code>amoeba</code></h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@<span class="hljs-keyword">b </span>~]<span class="hljs-comment"># mkdir /amoeba</span><br>[root@<span class="hljs-keyword">b </span>~]<span class="hljs-comment"># ls</span><br>amoeba-mysql<span class="hljs-number">-1</span>.<span class="hljs-number">3</span>.<span class="hljs-number">1</span>-<span class="hljs-keyword">BETA.zip </span> <span class="hljs-keyword">jdk-7u80-linux-x64.tar.gz</span><br></code></pre></td></tr></table></figure><h2 id="3-先安装-jdk-，配置环境变量并测试"><a href="#3-先安装-jdk-，配置环境变量并测试" class="headerlink" title="3. 先安装 jdk ，配置环境变量并测试"></a>3. 先安装 <code>jdk</code> ，配置环境变量并测试</h2><blockquote><p><code>amoeba</code> 是 <code>java</code> 语言编写的，所以先安装 <code>jdk</code> </p></blockquote><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@<span class="hljs-keyword">b </span>amoeba]<span class="hljs-comment"># tar -xf jdk-7u80-linux-x64.tar.gz </span><br>[root@<span class="hljs-keyword">b </span>amoeba]<span class="hljs-comment"># mv jdk1.7.0_80/ /amoeba/jdk</span><br><br>[root@<span class="hljs-keyword">b </span>~]<span class="hljs-comment"># vim /etc/profile</span><br>export <span class="hljs-keyword">JAVA_HOME=/amoeba/jdk</span><br><span class="hljs-keyword">export </span>PATH=$<span class="hljs-keyword">JAVA_HOME/bin:$PATH</span><br><span class="hljs-keyword">export </span>CLASSPATH=.:$<span class="hljs-keyword">JAVA_HOME/bin/tools.jar:$JAVA_HOME/lib/dt.jar:$CLASSPATH</span><br><span class="hljs-keyword">[root@b </span>~]<span class="hljs-comment"># . /etc/profile</span><br><br>[root@<span class="hljs-keyword">b </span>~]<span class="hljs-comment"># java -version</span><br><span class="hljs-keyword">java </span>version <span class="hljs-string">&quot;1.7.0_80&quot;</span><br><span class="hljs-keyword">Java(TM) </span>SE Runtime Environment (<span class="hljs-keyword">build </span><span class="hljs-number">1</span>.<span class="hljs-number">7</span>.<span class="hljs-number">0</span>_80-<span class="hljs-keyword">b15)</span><br><span class="hljs-keyword">Java </span>HotSpot(TM) <span class="hljs-number">64</span>-<span class="hljs-keyword">Bit </span>Server VM (<span class="hljs-keyword">build </span><span class="hljs-number">24</span>.<span class="hljs-number">80</span>-<span class="hljs-keyword">b11, </span>mixed mode)<br></code></pre></td></tr></table></figure><h2 id="4-安装-amoeba-并设置权限"><a href="#4-安装-amoeba-并设置权限" class="headerlink" title="4. 安装 amoeba 并设置权限"></a>4. 安装 <code>amoeba</code> 并设置权限</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@<span class="hljs-keyword">b </span>~]<span class="hljs-comment"># unzip amoeba-mysql-1.3.1-BETA.zip -d /usr/local/amoeba</span><br>[root@<span class="hljs-keyword">b </span>amoeba]<span class="hljs-comment"># ls</span><br><span class="hljs-keyword">bin </span> <span class="hljs-keyword">build.properties </span> <span class="hljs-keyword">build.xml </span> conf  doc  lib  LICENSE.txt  README.html  src<br><br><span class="hljs-comment"># 为了amoeba程序下的命令正常执行，给予权限</span><br>[root@<span class="hljs-keyword">b </span>amoeba]<span class="hljs-comment"># chmod -R +x /usr/local/amoeba/bin/*</span><br></code></pre></td></tr></table></figure><h2 id="5-修改-amoeba-配置文件"><a href="#5-修改-amoeba-配置文件" class="headerlink" title="5. 修改 amoeba 配置文件"></a>5. 修改 <code>amoeba</code> 配置文件</h2><blockquote><p><strong>配置解析：</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dts">amoeba<br><span class="hljs-params">&lt;Server&gt;</span><br><span class="hljs-symbol">IP:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.102</span><br><span class="hljs-symbol">Port:</span><span class="hljs-number">8066</span><br><span class="hljs-symbol">User:</span>amoeba<br><span class="hljs-symbol">Password:</span><span class="hljs-number">123456</span><br><span class="hljs-params">&lt;/Server&gt;</span><br><span class="hljs-params">&lt;dbServerList&gt;</span><br><span class="hljs-params">&lt;dbServer name=serverN&gt;</span><br><span class="hljs-params">&lt;/dbServer&gt;</span> <span class="hljs-meta"># ×2 :主从，我们所配置的就两台主从机器的IP地址端口等信息</span><br><span class="hljs-params">&lt;dbServer&gt;</span>  <span class="hljs-meta"># 进行读写分类</span><br><span class="hljs-params">&lt;poll&gt;</span><br>ServerN<br><span class="hljs-params">&lt;/poll&gt;</span><br><span class="hljs-params">&lt;/dbServer&gt;</span><br><span class="hljs-params">&lt;/dbServerList&gt;</span><br></code></pre></td></tr></table></figure></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@b amoeba]<span class="hljs-comment"># cat /usr/local/amoeba/conf/amoeba.xml </span><br>&lt;?xml <span class="hljs-built_in">version</span>=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;gbk&quot;</span>?&gt;<br><br>&lt;!DOCTYPE amoeba:configuration SYSTEM <span class="hljs-string">&quot;amoeba.dtd&quot;</span>&gt;<br>&lt;amoeba:configuration xmlns:amoeba=<span class="hljs-string">&quot;http://amoeba.meidusa.com/&quot;</span>&gt;<br><br><span class="hljs-comment"># 配置server区域，其他机器连接时配置的参数</span><br><br>     &lt;server&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;port&quot;</span>&gt;<span class="hljs-number">8066</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ipAddress&quot;</span>&gt;<span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.102</span>&lt;/<span class="hljs-keyword">property</span>&gt;  <span class="hljs-comment"># 取消注释并设置为amoeba本地IP地址</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;readThreadPoolSize&quot;</span>&gt;<span class="hljs-number">20</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;clientSideThreadPoolSize&quot;</span>&gt;<span class="hljs-number">30</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;serverSideThreadPoolSize&quot;</span>&gt;<span class="hljs-number">30</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;netBufferSize&quot;</span>&gt;<span class="hljs-number">128</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;tcpNoDelay&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;amoeba&lt;/<span class="hljs-keyword">property</span>&gt;             <span class="hljs-comment"># root更改其他用户为amoeba</span><br>                &lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;<span class="hljs-number">123456</span>&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 取消注释并设置密码</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;queryTimeout&quot;</span>&gt;<span class="hljs-number">60</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/server&gt;<br><br>&lt;connectionManagerList&gt;<br>&lt;connectionManager <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;defaultManager&quot;</span> <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.net.MultiConnectionManagerWrapper&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;subManagerClassName&quot;</span>&gt;com.meidusa.amoeba.net.AuthingableConnectionManager&lt;/<span class="hljs-keyword">property</span>&gt;<br><br>&lt;!<span class="hljs-comment">-- </span><br>  default value <span class="hljs-keyword">is</span> avaliable Processors <br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;processors&quot;</span>&gt;<span class="hljs-number">5</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br> <span class="hljs-comment">--&gt;</span><br>&lt;/connectionManager&gt;<br>&lt;/connectionManagerList&gt;<br><br><span class="hljs-comment"># 配置dbserverlist区域，amoeba连接其他主从数据库所用的参数</span><br><br>&lt;dbServerList&gt;<br>&lt;dbServer <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;server1&quot;</span>&gt; <span class="hljs-comment"># 服务器1名字</span><br>&lt;factoryConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;manager&quot;</span>&gt;defaultManager&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;port&quot;</span>&gt;<span class="hljs-number">3306</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ipAddress&quot;</span>&gt;<span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span>&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 主数据库IP</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;schema&quot;</span>&gt;butatree&lt;/<span class="hljs-keyword">property</span>&gt;      <span class="hljs-comment"># 哪个数据库</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;abc&lt;/<span class="hljs-keyword">property</span>&gt;    <span class="hljs-comment"># 使用的用户名（这里是在主服务器上授权的那个用户）</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;<span class="hljs-number">123456</span>&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 使用的密码</span><br>&lt;/factoryConfig&gt;<br>&lt;poolConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.net.poolable.PoolableObjectPool&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;maxActive&quot;</span>&gt;<span class="hljs-number">200</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;maxIdle&quot;</span>&gt;<span class="hljs-number">200</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;minIdle&quot;</span>&gt;<span class="hljs-number">10</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;minEvictableIdleTimeMillis&quot;</span>&gt;<span class="hljs-number">600000</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;timeBetweenEvictionRunsMillis&quot;</span>&gt;<span class="hljs-number">600000</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;testOnBorrow&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;testWhileIdle&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/poolConfig&gt;<br>&lt;/dbServer&gt;<br><br>&lt;dbServer <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;server2&quot;</span>&gt; <span class="hljs-comment"># 服务器2名字</span><br>&lt;factoryConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;manager&quot;</span>&gt;defaultManager&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;port&quot;</span>&gt;<span class="hljs-number">3306</span>&lt;/<span class="hljs-keyword">property</span>&gt;   <span class="hljs-comment"># 端口不变</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ipAddress&quot;</span>&gt;<span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.104</span>&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 第二台服务器的IP，即从服务器</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;schema&quot;</span>&gt;butatree&lt;/<span class="hljs-keyword">property</span>&gt;      <span class="hljs-comment"># 代表同步的库</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;abc&lt;/<span class="hljs-keyword">property</span>&gt;      <span class="hljs-comment"># 在从服务器上授权的那个用户</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;<span class="hljs-number">123456</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/factoryConfig&gt;<br>&lt;poolConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.net.poolable.PoolableObjectPool&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;maxActive&quot;</span>&gt;<span class="hljs-number">200</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;maxIdle&quot;</span>&gt;<span class="hljs-number">200</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;minIdle&quot;</span>&gt;<span class="hljs-number">10</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;minEvictableIdleTimeMillis&quot;</span>&gt;<span class="hljs-number">600000</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;timeBetweenEvictionRunsMillis&quot;</span>&gt;<span class="hljs-number">600000</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;testOnBorrow&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;testWhileIdle&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/poolConfig&gt;<br>&lt;/dbServer&gt;<br><br>&lt;dbServer <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;write&quot;</span> virtual=<span class="hljs-string">&quot;true&quot;</span>&gt; <span class="hljs-comment"># 池的名字，主的，提供写</span><br>&lt;poolConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.server.MultipleServerPool&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;loadbalance&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;poolNames&quot;</span>&gt;server1&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/poolConfig&gt;<br>&lt;/dbServer&gt;<br><br>&lt;dbServer <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;read&quot;</span> virtual=<span class="hljs-string">&quot;true&quot;</span>&gt;  <span class="hljs-comment"># 池的名字，提供读</span><br>&lt;poolConfig <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.server.MultipleServerPool&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;loadbalance&quot;</span>&gt;<span class="hljs-number">1</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;poolNames&quot;</span>&gt;server1,server2&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 读从server1 server2</span><br>&lt;/poolConfig&gt;<br>&lt;/dbServer&gt;<br><br>&lt;/dbServerList&gt;<br><br>&lt;queryRouter <span class="hljs-built_in">class</span>=<span class="hljs-string">&quot;com.meidusa.amoeba.mysql.parser.MysqlQueryRouter&quot;</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ruleConfig&quot;</span>&gt;$&#123;amoeba.home&#125;/conf/rule.xml&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;functionConfig&quot;</span>&gt;$&#123;amoeba.home&#125;/conf/functionMap.xml&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;ruleFunctionConfig&quot;</span>&gt;$&#123;amoeba.home&#125;/conf/ruleFunctionMap.xml&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;LRUMapSize&quot;</span>&gt;<span class="hljs-number">1500</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;defaultPool&quot;</span>&gt;<span class="hljs-built_in">write</span>&lt;/<span class="hljs-keyword">property</span>&gt; <span class="hljs-comment"># 默认访问池</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;writePool&quot;</span>&gt;<span class="hljs-built_in">write</span>&lt;/<span class="hljs-keyword">property</span>&gt;   <span class="hljs-comment"># 写入池</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;readPool&quot;</span>&gt;<span class="hljs-built_in">read</span>&lt;/<span class="hljs-keyword">property</span>&gt;     <span class="hljs-comment"># 读取池</span><br>&lt;<span class="hljs-keyword">property</span> <span class="hljs-built_in">name</span>=<span class="hljs-string">&quot;needParse&quot;</span>&gt;<span class="hljs-literal">true</span>&lt;/<span class="hljs-keyword">property</span>&gt;<br>&lt;/queryRouter&gt;<br>&lt;/amoeba:configuration&gt;<br></code></pre></td></tr></table></figure><h2 id="6-修改启动脚本"><a href="#6-修改启动脚本" class="headerlink" title="6. 修改启动脚本"></a>6. 修改启动脚本</h2><p><strong>启动 <code>amoeba</code>，修改一下启动脚本：<code>/usr/local/amoeba/bin/amoeba</code></strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@b amoeba]# vi <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/amoeba/</span>bin/amoeba<br>将：DEFAULT_OPTS=<span class="hljs-string">&quot;-server -Xms256m -Xmx256m -Xss128k&quot;</span> <br>改为：DEFAULT_OPTS=<span class="hljs-string">&quot;-server -Xms256m -Xmx256m -Xss256k&quot;</span><br></code></pre></td></tr></table></figure><h2 id="7-主从服务器上指定用户授权并查询"><a href="#7-主从服务器上指定用户授权并查询" class="headerlink" title="7. 主从服务器上指定用户授权并查询"></a>7. 主从服务器上指定用户授权并查询</h2><p><strong>主从服务器上指定用户授权，授权的目的为了让 <code>amoeba</code> 能连接到主服务器进行查询</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 主服务器</span><br><span class="hljs-attribute">mysql</span>&gt; grant <span class="hljs-literal">all</span> <span class="hljs-literal">on</span> butatree.* to abc@&#x27;<span class="hljs-number">10.4.7.102</span>&#x27; identified by &#x27;<span class="hljs-number">123456</span>&#x27;;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">01</span> sec)<br><br><span class="hljs-comment"># 从服务器</span><br><span class="hljs-attribute">mysql</span>&gt; grant <span class="hljs-literal">all</span> <span class="hljs-literal">on</span> butatree.* to abc@&#x27;<span class="hljs-number">10.4.7.102</span>&#x27; identified by &#x27;<span class="hljs-number">123456</span>&#x27;;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">06</span> sec)<br></code></pre></td></tr></table></figure><p><strong><code>amoeba</code> 服务器测试</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@b amoeba]# mysql -uabc -p123456 -h <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span><br><span class="hljs-built_in">Warning</span>: <span class="hljs-keyword">Using</span> a <span class="hljs-keyword">password</span> <span class="hljs-keyword">on</span> the command <span class="hljs-type">line</span> interface can be insecure.<br>Welcome <span class="hljs-keyword">to</span> the MySQL monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MySQL <span class="hljs-keyword">connection</span> id <span class="hljs-keyword">is</span> <span class="hljs-number">92</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">5.6</span><span class="hljs-number">.51</span>-<span class="hljs-keyword">log</span> MySQL Community <span class="hljs-keyword">Server</span> (GPL)<br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2021</span>, Oracle <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its affiliates. <span class="hljs-keyword">All</span> rights reserved.<br><br>Oracle <span class="hljs-keyword">is</span> a registered trademark <span class="hljs-keyword">of</span> Oracle Corporation <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its<br>affiliates. Other names may be trademarks <span class="hljs-keyword">of</span> their respective<br>owners.<br><br><span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. <span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">statement</span>.<br><br>mysql&gt; <span class="hljs-keyword">show</span> databases;<br>+<span class="hljs-comment">--------------------+</span><br>| <span class="hljs-keyword">Database</span>           |<br>+<span class="hljs-comment">--------------------+</span><br>| information_schema |<br>| butatree           |<br>+<span class="hljs-comment">--------------------+</span><br><span class="hljs-number">2</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.06</span> sec)<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><h2 id="8-运行-amoeba-并查看运行程序"><a href="#8-运行-amoeba-并查看运行程序" class="headerlink" title="8. 运行 amoeba 并查看运行程序"></a>8. 运行 <code>amoeba</code> 并查看运行程序</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@b ~]# nohup bash -x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/amoeba/</span>bin/amoeba &amp;<br>[<span class="hljs-number">1</span>] <span class="hljs-number">5122</span><br>[root@b ~]# nohup: ignoring input and appending output to ‘nohup.out’<br><br>[root@b ~]# ps aux | <span class="hljs-keyword">grep</span> amoeba<br>root       <span class="hljs-number">5122</span>  <span class="hljs-number">4.7</span>  <span class="hljs-number">4.2</span> <span class="hljs-number">1080320</span> <span class="hljs-number">42468</span> pts<span class="hljs-regexp">/3   Sl   05:37   0:01 /</span>amoeba<span class="hljs-regexp">/jdk/</span>bin<span class="hljs-regexp">/java -server -Xms256m -Xmx256m -Xss256k -Damoeba.home=/u</span>sr<span class="hljs-regexp">/local/</span>amoeba -Dclassworlds.conf=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/amoeba/</span>bin<span class="hljs-regexp">/amoeba.classworlds -classpath /u</span>sr<span class="hljs-regexp">/local/</span>amoeba<span class="hljs-regexp">/lib/</span>classworlds-<span class="hljs-number">1.0</span>.jar org.codehaus.classworlds.Launcher<br>root       <span class="hljs-number">5152</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.0</span> <span class="hljs-number">112712</span>   <span class="hljs-number">964</span> pts/<span class="hljs-number">3</span>    S+   <span class="hljs-number">05</span>:<span class="hljs-number">37</span>   <span class="hljs-number">0</span>:<span class="hljs-number">00</span> <span class="hljs-keyword">grep</span> --color=auto amoeba<br></code></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@b ~]# mysql -uamoeba -p123456 -P8066 -h10.4.7.102<br>Warning: Using a password on the command line interface can be insecure.<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 2022967056<br>Server version: 5.1.45-mysql-amoeba-proxy-1.3.1-BETA MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type <span class="hljs-emphasis">&#x27;help;&#x27;</span> or <span class="hljs-emphasis">&#x27;\h&#x27;</span> for help. Type <span class="hljs-emphasis">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>mysql&gt; select * from butatree.b;<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>| id   | name     | age  |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>|    1 | xiaoming |   20 |<br>|    2 | xioalong |   21 |<br>|    3 | xiaoji   |   22 |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>3 rows in set (0.06 sec)<br><br>mysql&gt; select * from butatree.b;<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>| id   | name     | age  |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>|    1 | xiaoming |   20 |<br>|    2 | xioalong |   21 |<br><span class="hljs-code">+------+</span>----------<span class="hljs-code">+------+</span><br>2 rows in set (0.00 sec)<br><br>#查询的结果不一样，因为查询的时候 server1 server2各查询一次<br></code></pre></td></tr></table></figure><p><strong>在实际生产中，主从开启，主服务器上写入的数据也会同步到从服务器中</strong></p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>MySQL-集群</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql-集群(壹)</title>
    <link href="/posts/41a9b626/"/>
    <url>/posts/41a9b626/</url>
    
    <content type="html"><![CDATA[<h1 id="一、MySQL-主从备份"><a href="#一、MySQL-主从备份" class="headerlink" title="一、MySQL 主从备份"></a>一、<code>MySQL</code> 主从备份</h1><blockquote><p>前提条件：主从安装了 <code>mysql</code> ，开启了二进制日志</p><p>主从备份解析：开启主服务器的 <code>bin-log</code> 日志记录功能，将主服务器的 <code>bin-log</code> 日志传到从服务器，从服务器根据日志内容将数据还原到本地。L</p><p>主从服务器好处：</p><ul><li>从服务器主动把主服务器上的数据同步到本地（备份）</li><li>从服务器分摊主服务器的查询压力（负载均衡）</li></ul><p>主服务器 <code>test</code>（<code>10.4.7.103</code>）</p><p>从服务器 <code>test2</code> （<code>10.4.7.104</code>）</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@test ~]</span><span class="hljs-comment"># vim /etc/my.cnf</span><br><span class="hljs-attr">log_bin</span>=mysql-bin<br><span class="hljs-attr">server-id</span>=<span class="hljs-number">103</span>             <span class="hljs-comment">#我这里用IP结尾作为ID号</span><br><span class="hljs-section">[root@test ~]</span><span class="hljs-comment"># systemctl restart mysqld</span><br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@test2 ~]</span><span class="hljs-comment"># vim /etc/my.cnf</span><br><span class="hljs-attr">log_bin</span>=mysql-bin<br><span class="hljs-attr">server-id</span>=<span class="hljs-number">104</span><br><span class="hljs-section">[root@test2 ~]</span><span class="hljs-comment"># systemctl restart mysqld</span><br></code></pre></td></tr></table></figure><h2 id="1-在主服务器上授权，从服务器保存授权信息"><a href="#1-在主服务器上授权，从服务器保存授权信息" class="headerlink" title="1. 在主服务器上授权，从服务器保存授权信息"></a>1. 在主服务器上授权，从服务器保存授权信息</h2><p><strong>主服务器授权：</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test mysql]# mysql -uroot -p123456<br># replication slave: 让他授权以从服的身份运行<br># <span class="hljs-strong">*.*</span> 所有库所有表<br>mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.104&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br># 查看binlog日志文件<br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000001 |      328 |              |                  |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br></code></pre></td></tr></table></figure><p><strong>从服务器保存授权：</strong></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@test2 ~]<span class="hljs-comment"># mysql -uroot -p123456</span><br>mysql&gt; change master <span class="hljs-keyword">to</span><br>    -&gt; master_user=<span class="hljs-string">&#x27;slave&#x27;</span>,                 <span class="hljs-comment"># 授权用户</span><br>    -&gt; master_password=<span class="hljs-string">&#x27;123456&#x27;</span>,            <span class="hljs-comment"># 密码</span><br>    -&gt; master_host=<span class="hljs-string">&#x27;10.4.7.103&#x27;</span>,            <span class="hljs-comment"># 主服务器地址</span><br>    -&gt; master_log_file=<span class="hljs-string">&#x27;mysql-bin.000001&#x27;</span>,  <span class="hljs-comment"># 主服务器使用的二进制日志</span><br>    -&gt; master_log_pos=<span class="hljs-number">328</span>;                  <span class="hljs-comment"># 当前日志的大小，即是主服务器上面的position大小</span><br>Query OK, <span class="hljs-number">0</span> rows affected, <span class="hljs-number">2</span> warnings (<span class="hljs-number">0.02</span> sec)<br></code></pre></td></tr></table></figure><h2 id="2-从服务器会产生授权信息文件"><a href="#2-从服务器会产生授权信息文件" class="headerlink" title="2. 从服务器会产生授权信息文件"></a>2. 从服务器会产生授权信息文件</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test2</span> ~]<span class="hljs-meta"># cd /var/lib/mysql</span><br>[root<span class="hljs-symbol">@test2</span> mysql]<span class="hljs-meta"># ll master.info  # 授权信息</span><br>-rw-rw---- <span class="hljs-number">1</span> mysql mysql <span class="hljs-number">88</span> <span class="hljs-number">4</span>月   <span class="hljs-number">4</span> <span class="hljs-number">15</span>:<span class="hljs-number">04</span> master.info<br>[root<span class="hljs-symbol">@test2</span> mysql]<span class="hljs-meta"># cat master.info </span><br><span class="hljs-number">23</span><br>mysql-bin<span class="hljs-number">.000001</span><br><span class="hljs-number">328</span><br><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span><br>slave<br><span class="hljs-number">123456</span><br><span class="hljs-number">3306</span><br><span class="hljs-number">60</span><br><span class="hljs-number">0</span><br><br><br><br><br><br><span class="hljs-number">0</span><br><span class="hljs-number">1800.000</span><br><br><span class="hljs-number">0</span><br><br><span class="hljs-number">86400</span><br><br><br><span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><h2 id="3-开启从服务器-start-slave-，并查看"><a href="#3-开启从服务器-start-slave-，并查看" class="headerlink" title="3. 开启从服务器 start slave ，并查看"></a>3. 开启从服务器 <code>start slave</code> ，并查看</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">SET</span> <span class="hljs-string">GLOBAL</span> <span class="hljs-string">SQL_SLAVE_SKIP_COUNTER=1;</span><br><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">start</span> <span class="hljs-string">slave;</span>          <span class="hljs-comment"># 开启从服务器</span><br><span class="hljs-string">Query</span> <span class="hljs-string">OK,</span> <span class="hljs-number">0</span> <span class="hljs-string">rows</span> <span class="hljs-string">affected</span> <span class="hljs-string">(0.00</span> <span class="hljs-string">sec)</span>    <br><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">show</span> <span class="hljs-string">slave</span> <span class="hljs-string">status\G;</span>  <span class="hljs-comment"># 查看从服务器的内容</span><br><span class="hljs-string">***************************</span> <span class="hljs-number">1</span><span class="hljs-string">.</span> <span class="hljs-string">row</span> <span class="hljs-string">***************************</span><br>               <span class="hljs-attr">Slave_IO_State:</span> <span class="hljs-string">Waiting</span> <span class="hljs-string">for</span> <span class="hljs-string">master</span> <span class="hljs-string">to</span> <span class="hljs-string">send</span> <span class="hljs-string">event</span><br>                  <span class="hljs-attr">Master_Host:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span><br>                  <span class="hljs-attr">Master_User:</span> <span class="hljs-string">slave</span><br>                  <span class="hljs-attr">Master_Port:</span> <span class="hljs-number">3306</span><br>                <span class="hljs-attr">Connect_Retry:</span> <span class="hljs-number">60</span><br>              <span class="hljs-attr">Master_Log_File:</span> <span class="hljs-string">mysql-bin.000001</span><br>          <span class="hljs-attr">Read_Master_Log_Pos:</span> <span class="hljs-number">328</span><br>               <span class="hljs-attr">Relay_Log_File:</span> <span class="hljs-string">mysqld-relay-bin.000002</span><br>                <span class="hljs-attr">Relay_Log_Pos:</span> <span class="hljs-number">283</span><br>        <span class="hljs-attr">Relay_Master_Log_File:</span> <span class="hljs-string">mysql-bin.000001</span><br>             <span class="hljs-attr">Slave_IO_Running:</span> <span class="hljs-literal">Yes</span>     <span class="hljs-comment"># 主服务器向从服务器传输文件成能够功</span><br>            <span class="hljs-attr">Slave_SQL_Running:</span> <span class="hljs-literal">Yes</span>     <span class="hljs-comment"># 解析传输进来的文件的语法</span><br><span class="hljs-string">...</span><br></code></pre></td></tr></table></figure><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"># 主服务器创建数据库<br>mysql&gt; create database butatree;<br>Query OK, 1 row affected (0.05 sec)<br><br>#从服务器查看<br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| butatree           |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"># 主服务器删除数据库<br>mysql&gt; drop database butatree;<br>Query OK, 0 rows affected (0.06 sec)<br><br># 从服务器查看<br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><hr><h1 id="二、MySQL-主主备份"><a href="#二、MySQL-主主备份" class="headerlink" title="二、MySQL 主主备份"></a>二、<code>MySQL</code> 主主备份</h1><h2 id="1-配置-test-服务器-my-cnf"><a href="#1-配置-test-服务器-my-cnf" class="headerlink" title="1. 配置 test 服务器 my.cnf"></a>1. 配置 <code>test</code> 服务器 <code>my.cnf</code></h2><blockquote><p>主主服务器的好处：</p><ul><li>均摊写压力</li></ul><p>主服务器 <code>test</code>（<code>10.4.7.103</code>）从服务器 <code>test2</code>（<code>10.4.7.104</code>）</p><p>主服务器 <code>test2</code>（<code>10.4.7.104</code>）从服务器 <code>test</code>（<code>10.4.7.103</code>）</p></blockquote><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nix">[root@test mysql]<span class="hljs-comment"># vi /etc/my.cnf</span><br><br>[mysqld]<br><span class="hljs-attr">log_bin=mysql-bin</span>      <span class="hljs-comment"># 开启二进制日志</span><br><span class="hljs-attr">server-id=103</span>          <span class="hljs-comment"># 设置ServerId</span><br><br><span class="hljs-attr">replicate-do-db=test</span>   <span class="hljs-comment"># 提高效率，将不必要的资源不写入二进制文件</span><br><span class="hljs-attr">binlog-ignore-db=mysql</span> <span class="hljs-comment"># 忽略mysql的同步</span><br><span class="hljs-attr">binlog-ignore-db=information_schema</span> <span class="hljs-comment"># 忽略information_schema的同步</span><br><br><span class="hljs-attr">auto-increment-increment=2</span>   <span class="hljs-comment"># 防止主键冲突，数据的ID号从1开始，每次+2 </span><br><span class="hljs-attr">auto-increment-offset=1</span>      <span class="hljs-comment"># 即1,3,5,7...</span><br>...<br></code></pre></td></tr></table></figure><h2 id="2-配置-test2-服务器-my-cnf"><a href="#2-配置-test2-服务器-my-cnf" class="headerlink" title="2. 配置 test2 服务器 my.cnf"></a>2. 配置 <code>test2</code> 服务器 <code>my.cnf</code></h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nix">[root@test2 mysql]<span class="hljs-comment"># vi /etc/my.cnf</span><br><br>[mysqld]<br><span class="hljs-attr">log_bin=mysql-bin</span>      <span class="hljs-comment"># 开启二进制日志</span><br><span class="hljs-attr">server-id=104</span>          <span class="hljs-comment"># 设置ServerId</span><br><br><span class="hljs-attr">replicate-do-db=test</span>   <span class="hljs-comment"># 提高效率，将不必要的资源不写入二进制文件</span><br><span class="hljs-attr">binlog-ignore-db=mysql</span> <span class="hljs-comment"># 忽略mysql的同步</span><br><span class="hljs-attr">binlog-ignore-db=information_schema</span> <span class="hljs-comment"># 忽略information_schema的同步</span><br><br><span class="hljs-attr">auto-increment-increment=2</span>   <span class="hljs-comment"># 防止主键冲突，数据的ID号从2开始，每次+2 </span><br><span class="hljs-attr">auto-increment-offset=2</span>      <span class="hljs-comment"># 即2,4,6,8...</span><br>...<br></code></pre></td></tr></table></figure><blockquote><p>配置主主备份，主（<code>test</code>）从备份，上面已经做好了，再反过来做另一个主（<code>test2</code>）从备份，这样就是主主备份了。</p></blockquote><h2 id="3-在-test2-服务器上授权，test-服务器保存授权信息"><a href="#3-在-test2-服务器上授权，test-服务器保存授权信息" class="headerlink" title="3. 在 test2 服务器上授权，test 服务器保存授权信息"></a>3. 在 <code>test2</code> 服务器上授权，<code>test</code> 服务器保存授权信息</h2><p><strong><code>test2</code> 授权</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test2 ~]# mysql -uroot -p123456<br>mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.103&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>--------------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB         | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>--------------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000011 |      333 |              | mysql,information_schema |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>--------------------------<span class="hljs-code">+-------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong><code>test</code> 保存授权信息</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@test mysql]# mysql -uroot -p123456<br>mysql&gt; change master <span class="hljs-keyword">to</span><br>    -&gt; <span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;slave&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_host</span>=<span class="hljs-string">&#x27;10.4.7.104&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mysql-bin.000011&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_pos</span>=333;<br>Query OK, 0 rows affected, 2 warnings (0.02 sec)<br></code></pre></td></tr></table></figure><h2 id="4-test-服务器会产生授权信息文件"><a href="#4-test-服务器会产生授权信息文件" class="headerlink" title="4. test 服务器会产生授权信息文件"></a>4. <code>test</code> 服务器会产生授权信息文件</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@test mysql]<span class="hljs-comment"># ll master.info </span><br>-rw-rw----<span class="hljs-number"> 1 </span>mysql mysql<span class="hljs-number"> 88 </span>4月  <span class="hljs-number"> 4 </span>16:06 master.info<br></code></pre></td></tr></table></figure><h2 id="5-开启-test-服务器-start-slave-，并查看"><a href="#5-开启-test-服务器-start-slave-，并查看" class="headerlink" title="5. 开启 test 服务器 start slave ，并查看"></a>5. 开启 <code>test</code> 服务器 <code>start slave</code> ，并查看</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">start</span> <span class="hljs-string">slave;</span><br><span class="hljs-string">Query</span> <span class="hljs-string">OK,</span> <span class="hljs-number">0</span> <span class="hljs-string">rows</span> <span class="hljs-string">affected</span> <span class="hljs-string">(0.01</span> <span class="hljs-string">sec)</span><br><span class="hljs-string">mysql&gt;</span> <span class="hljs-string">show</span> <span class="hljs-string">slave</span> <span class="hljs-string">status\G;</span><br><span class="hljs-string">***************************</span> <span class="hljs-number">1</span><span class="hljs-string">.</span> <span class="hljs-string">row</span> <span class="hljs-string">***************************</span><br>               <span class="hljs-attr">Slave_IO_State:</span> <span class="hljs-string">Waiting</span> <span class="hljs-string">for</span> <span class="hljs-string">master</span> <span class="hljs-string">to</span> <span class="hljs-string">send</span> <span class="hljs-string">event</span><br>                  <span class="hljs-attr">Master_Host:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.104</span><br>                  <span class="hljs-attr">Master_User:</span> <span class="hljs-string">slave</span><br>                  <span class="hljs-attr">Master_Port:</span> <span class="hljs-number">3306</span><br>                <span class="hljs-attr">Connect_Retry:</span> <span class="hljs-number">60</span><br>              <span class="hljs-attr">Master_Log_File:</span> <span class="hljs-string">mysql-bin.000011</span><br>          <span class="hljs-attr">Read_Master_Log_Pos:</span> <span class="hljs-number">333</span><br>               <span class="hljs-attr">Relay_Log_File:</span> <span class="hljs-string">mysqld-relay-bin.000002</span><br>                <span class="hljs-attr">Relay_Log_Pos:</span> <span class="hljs-number">283</span><br>        <span class="hljs-attr">Relay_Master_Log_File:</span> <span class="hljs-string">mysql-bin.000011</span><br>             <span class="hljs-attr">Slave_IO_Running:</span> <span class="hljs-literal">Yes</span> <span class="hljs-comment"># ←</span><br>            <span class="hljs-attr">Slave_SQL_Running:</span> <span class="hljs-literal">Yes</span> <span class="hljs-comment"># ←</span><br></code></pre></td></tr></table></figure><blockquote><h6>Slave_SQL_Running: NO 错误 </h6><p><font color=red><strong>注意</strong></font>：另一主机不显示某一个数据库文件时，记得查看 <code>show slave status\G;</code> 查看解析 <code>SQL</code> 文件是否为 <code>NO</code> 。就说明解析错误，通过以下方法解决：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 查看slave状态</span><br>mysql&gt; show <span class="hljs-literal">slave</span> status\G;<br>...<br>Slave_SQL_Running: NO<br>...<br><br><span class="hljs-comment"># 先停止slave</span><br>mysql&gt; <span class="hljs-literal">stop</span> <span class="hljs-literal">slave</span>;<br>mysql&gt; SET GLOBAL <span class="hljs-attr">SQL_SLAVE_SKIP_COUNTER=</span><span class="hljs-number">1</span>;<br>mysql&gt; <span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br><br><span class="hljs-comment"># 再次查看slave状态</span><br>mysql&gt; show <span class="hljs-literal">slave</span> status\G;<br>...<br>Slave_SQL_Running: YES<br>...<br></code></pre></td></tr></table></figure><h6>Slave_IO_Running: NO 错误</h6><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 查看slave状态</span><br>mysql&gt; show <span class="hljs-literal">slave</span> status\G;<br><span class="hljs-comment"># 发现 Master_Log_Running 没有反应</span><br>mysql&gt; show <span class="hljs-keyword">master</span> <span class="hljs-title">status</span>;<br>mysql&gt; <span class="hljs-literal">stop</span> <span class="hljs-literal">slave</span>;                 <br>mysql&gt; CHANGE <span class="hljs-keyword">MASTER</span> <span class="hljs-title">TO</span> <span class="hljs-attr">MASTER_LOG_FILE=</span>&#x27;mysql-bin.<span class="hljs-number">000026</span>&#x27;, <span class="hljs-attr">MASTER_LOG_POS=</span><span class="hljs-number">0</span>;   <span class="hljs-comment">#更改mysql-bin文件即可</span><br>mysql&gt;  <span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;                               <br>mysql&gt;  show <span class="hljs-literal">slave</span> status\G <br></code></pre></td></tr></table></figure></blockquote><h2 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h2><p><strong>在 <code>test</code> 创建数据库 <code>test</code></strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; create database test;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">1</span> row affected (<span class="hljs-number">0</span>.<span class="hljs-number">02</span> sec)<br></code></pre></td></tr></table></figure><p><strong>在 <code>test2</code> 创建数据库 <code>test2</code> 并查看</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; create database test2;<br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| test               |<br>| test2              |<br><span class="hljs-code">+--------------------+</span><br>5 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>在 <code>test2</code> 删除 <code>test</code> 并查看</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; drop database test;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">00</span> sec)<br></code></pre></td></tr></table></figure><p><img src="http://butatree.site:8888/images/2021/04/04/MySQL_MM1.png" alt="测试"><img src="http://butatree.site:8888/images/2021/04/04/MySQL_MM2.png" alt="测试"></p><hr><h1 id="三、MySQL-一主多从"><a href="#三、MySQL-一主多从" class="headerlink" title="三、MySQL 一主多从"></a>三、<code>MySQL</code> 一主多从</h1><blockquote><p>在主主备份的基础上，关闭 <code>test</code> 的 <code>slave</code> ，这样 <code>test</code> 就是主了。</p><p>主服务器 <code>test</code> （<code>10.4.7.103</code>）</p><p>从服务器 <code>test2</code>（<code>10.4.7.104</code>）</p><p>从服务器 <code>a</code>（<code>10.4.7.100</code>）</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; stop slave;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">01</span> sec)<br></code></pre></td></tr></table></figure><blockquote><p>在加入一台 <code>MySQL</code> 服务器，用来做从。</p><p><strong>配置 <code>a</code> 的 <code>my.cnf</code> 文件</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@a ~]</span><span class="hljs-comment"># vi /etc/my.cnf</span><br><span class="hljs-section">[mysqld]</span><br><br><span class="hljs-attr">log_bin</span>=mysql-bin<br><span class="hljs-attr">server-id</span>=<span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><p><strong>重启</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> ~]<span class="hljs-meta"># systemctl restart mariadb</span><br></code></pre></td></tr></table></figure><p><strong>在 <code>test</code> 上授权</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test ~]# mysql -uroot -p123456<br>mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.100&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000001 |     2025 |              | mysql            |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong><code>a</code> 接收授权</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">MariaDB [(none)]&gt; change master <span class="hljs-keyword">to</span><br>    -&gt; <span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;slave&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_host</span>=<span class="hljs-string">&#x27;10.4.7.103&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mysql-bin.000001&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_pos</span>=2025;<br>Query OK, 0 rows affected (0.01 sec)<br><br>MariaDB [(none)]&gt; start slave;<br>Query OK, 0 rows affected (0.00 sec)<br></code></pre></td></tr></table></figure></blockquote><h2 id="1-测试："><a href="#1-测试：" class="headerlink" title="1. 测试："></a>1. 测试：</h2><p><strong>主 <code>test</code> 创建</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; create database a;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">1</span> row affected (<span class="hljs-number">0</span>.<span class="hljs-number">00</span> sec)<br></code></pre></td></tr></table></figure><p><strong>从 <code>test2</code> 查看</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| a                  |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>从 <code>a</code> 查看</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">MariaDB [(none)]&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| a                  |<br>| extmail            |<br>| mysql              |<br>| performance_schema |<br>| test               |<br><span class="hljs-code">+--------------------+</span><br>6 rows in set (0.04 sec)<br></code></pre></td></tr></table></figure><hr><h1 id="四、MySQL-多主一从"><a href="#四、MySQL-多主一从" class="headerlink" title="四、MySQL 多主一从"></a>四、<code>MySQL</code> 多主一从</h1><blockquote><p>主服务器配置</p><p>开启二进制日志，启动服务</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">vi /etc/<span class="hljs-keyword">my</span>.cnf<br><span class="hljs-built_in">log</span>-bin=mysql-bin<br>server-<span class="hljs-built_in">id</span>=<span class="hljs-number">103</span>、<span class="hljs-number">104</span>、<span class="hljs-number">102</span><span class="hljs-comment">#各自ID</span><br></code></pre></td></tr></table></figure><p>主服务器 <code>test</code>（<code>10.4.7.103</code>）</p><p>主服务器 <code>test2</code>（<code>10.4.7.104</code>）</p><p>从服务器 <code>b</code> （<code>10.4.7.102</code>）</p></blockquote><h2 id="1-主服务器授权"><a href="#1-主服务器授权" class="headerlink" title="1. 主服务器授权"></a>1. 主服务器授权</h2><p><strong>主服务器 <code>test</code> 授权</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test ~]# mysql -uroot -p123456<br>mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.102&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.01 sec)<br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000002 |      120 |              |                  |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>主服务器 <code>test2</code> 授权</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; grant replication slave on <span class="hljs-strong">*.*</span> to slave@<span class="hljs-emphasis">&#x27;10.4.7.102&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; show master status;<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>| mysql-bin.000006 |      120 |              |                  |                   |<br><span class="hljs-code">+------------------+</span>----------<span class="hljs-code">+--------------+</span>------------------<span class="hljs-code">+-------------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="2-修改从服务器配置文件"><a href="#2-修改从服务器配置文件" class="headerlink" title="2. 修改从服务器配置文件"></a>2. 修改从服务器配置文件</h2><p><strong>修改 <code>my.cnf</code> 配置文件</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># M-M-S</span><br><br><span class="hljs-section">[mysqld_multi]</span><br><span class="hljs-attr">mysqld</span>=/usr/bin/mysqld_safe<br><span class="hljs-attr">mysqladmin</span>=/usr/bin/mysqladmin<br><span class="hljs-attr">log</span>=/tmp/multi.log<br><br><span class="hljs-section">[mysqld103]</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3307</span><br><span class="hljs-attr">datadir</span>=/var/lib/mysqltest/<br><span class="hljs-attr">pid-file</span>=/var/lib/mysqltest/mysqld.pid<br><span class="hljs-attr">socket</span>=/var/lib/mysqltest/mysql.sock<br><span class="hljs-attr">user</span>=mysql<br><span class="hljs-attr">server-id</span>=<span class="hljs-number">102</span><br><br><span class="hljs-section">[mysqld104]</span><br><span class="hljs-attr">port</span>=<span class="hljs-number">3308</span><br><span class="hljs-attr">datadir</span>=/var/lib/mysqltest2/<br><span class="hljs-attr">pid-file</span>=/var/lib/mysqltest2/mysqld.pid<br><span class="hljs-attr">socket</span>=/var/lib/mysqltest2/mysql.sock<br><span class="hljs-attr">user</span>=mysql<br><span class="hljs-attr">server-id</span>=<span class="hljs-number">102</span><br></code></pre></td></tr></table></figure><h2 id="3-test-test2机器都重启一下"><a href="#3-test-test2机器都重启一下" class="headerlink" title="3. test test2机器都重启一下"></a>3. <code>test</code> <code>test2</code>机器都重启一下</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># systemctl restart mysqld</span><br>[root<span class="hljs-symbol">@test2</span> ~]<span class="hljs-meta"># systemctl restart mysql</span><br></code></pre></td></tr></table></figure><h2 id="4-从服务器初始化数据库"><a href="#4-从服务器初始化数据库" class="headerlink" title="4. 从服务器初始化数据库"></a>4. 从服务器初始化数据库</h2><p><strong>从服务器初始化数据库，生成目录 <code>mysqltest</code>、<code>mysqltest2</code></strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@b mysqltest]# mysql_install_db <span class="hljs-attribute">--datadir</span>=/var/lib/mysqltest <span class="hljs-attribute">--user</span>=mysql<br>[root@b mysqltest]# mysql_install_db <span class="hljs-attribute">--datadir</span>=/var/lib/mysqltest2 <span class="hljs-attribute">--user</span>=mysql<br></code></pre></td></tr></table></figure><h2 id="5-设置目录的属组权限"><a href="#5-设置目录的属组权限" class="headerlink" title="5. 设置目录的属组权限"></a>5. 设置目录的属组权限</h2><p><strong>设置 <code>mysqltest</code>、<code>mysqltest2</code> 目录及以下文件的属主为 <code>mysql</code> （防止出现权限问题）</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@b lib]# chown -R mysql <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mysqltest/</span><br>[root@b lib]# chown -R mysql <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mysqltest2/</span><br></code></pre></td></tr></table></figure><h2 id="6-启动从服务器线程"><a href="#6-启动从服务器线程" class="headerlink" title="6. 启动从服务器线程"></a>6. 启动从服务器线程</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># <span class="hljs-number">103</span>: [mysqld103]<br># --defaults-<span class="hljs-keyword">file</span>: 指定配置文件<br>[root@b ~]# mysqld_multi --defaults-<span class="hljs-keyword">file</span>=<span class="hljs-regexp">/etc/my</span>.cnf start <span class="hljs-number">103</span><br>[root@b ~]# mysqld_multi --defaults-<span class="hljs-keyword">file</span>=<span class="hljs-regexp">/etc/my</span>.cnf start <span class="hljs-number">104</span><br></code></pre></td></tr></table></figure><p><img src="http://butatree.site:8888/images/2021/04/04/Mysql_MMS1.png" alt="查看端口信息"></p><h2 id="7-登录并保存授权信息"><a href="#7-登录并保存授权信息" class="headerlink" title="7. 登录并保存授权信息"></a>7. 登录并保存授权信息</h2><p><strong><code>mysql103</code></strong> </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@b ~]# mysql -P 3306 -S /var/lib/mysqltest/mysql.sock<br>mysql&gt; change master <span class="hljs-keyword">to</span><br>    -&gt; <span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;slave&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_host</span>=<span class="hljs-string">&#x27;10.4.7.103&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mysql-bin.000002&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_pos</span>=120;<br>Query OK, 0 rows affected, 2 warnings (0.01 sec)<br><br>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; show slave status\G;<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master <span class="hljs-keyword">to</span> send event<br>                  Master_Host: 10.4.7.103<br>                  Master_User: slave<br>                  Master_Port: 3306<br>                Connect_Retry: 60<br>              Master_Log_File: mysql-bin.000002<br>          Read_Master_Log_Pos: 120<br>               Relay_Log_File: mysqld-relay-bin.000002<br>                Relay_Log_Pos: 283<br>        Relay_Master_Log_File: mysql-bin.000002<br>             Slave_IO_Running: <span class="hljs-literal">Yes</span><br>            Slave_SQL_Running: <span class="hljs-literal">Yes</span><br><span class="hljs-built_in">..</span>.<br></code></pre></td></tr></table></figure><p>**<code>mysql104</code> **</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@b ~]# mysql -P 3308 -S /var/lib/mysqltest2/mysql.sock<br>mysql&gt; change master <span class="hljs-keyword">to</span><br>    -&gt; <span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;slave&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_host</span>=<span class="hljs-string">&#x27;10.4.7.104&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mysql-bin.000006&#x27;</span>,<br>    -&gt; <span class="hljs-attribute">master_log_pos</span>=120;<br>Query OK, 0 rows affected, 2 warnings (0.00 sec)<br><br>mysql&gt; start slave;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; show slave status\G;<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master <span class="hljs-keyword">to</span> send event<br>                  Master_Host: 10.4.7.104<br>                  Master_User: slave<br>                  Master_Port: 3306<br>                Connect_Retry: 60<br>              Master_Log_File: mysql-bin.000006<br>          Read_Master_Log_Pos: 120<br>               Relay_Log_File: mysqld-relay-bin.000002<br>                Relay_Log_Pos: 283<br>        Relay_Master_Log_File: mysql-bin.000006<br>             Slave_IO_Running: <span class="hljs-literal">Yes</span><br>            Slave_SQL_Running: <span class="hljs-literal">Yes</span><br><span class="hljs-built_in">..</span>.<br></code></pre></td></tr></table></figure><h2 id="8-测试"><a href="#8-测试" class="headerlink" title="8. 测试"></a>8. 测试</h2><p><strong>在 <code>test</code> 新建 <code>master103</code> 数据库文件</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; create database master103;<br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| master103          |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>在 <code>test2</code> 新建 <code>master104</code> 数据库文件</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; create database master104;<br>Query OK, 1 row affected (0.02 sec)<br><br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| master104          |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><p><strong><code>3007</code> 端口查看</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| master103          |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong><code>3008</code> 端口查看</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| master104          |<br>| mysql              |<br>| performance_schema |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>MySQL-集群</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql-数据库-操作基础</title>
    <link href="/posts/1a2b3f6a/"/>
    <url>/posts/1a2b3f6a/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.mysql.com/"><code>MySQL</code>官网</a></p></blockquote><center><h1>MySQL数据类型</center></h1><p>​    在 <code>MySQL</code> 中，有三种主要的类型：文本、数字和日期/时间类型。</p><p><strong><code>Text</code> 类型：</strong></p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td><code>CHAR(size)</code></td><td>保存固定的长度的字符串。在括号中指定字符串的长度。最多 <code>255</code> 个字符。</td></tr><tr><td><code>VARCHAR(size)</code></td><td>保存可变长度的字符串。在括号中指定字符串的最大长度。最多 <code>255</code> 个字符。注释：如果值的长度大于 <code>255</code> ，则被转换为 <code>TEXT</code> 类型。</td></tr><tr><td><code>TINYTEXT</code></td><td>存放最大长度为 <code>255</code> 个字符的字符串。</td></tr><tr><td><code>TEXT</code></td><td>存放最大长度为 <code>65,535</code> 个字符的字符串。</td></tr><tr><td><code>BLOB</code></td><td>用于 <code>BLOBs(Binary Large Objects)</code>。存放最多 <code>65,535</code> 字节的数据。</td></tr><tr><td><code>MEDIUMTEXT</code></td><td>存放最大长度为 <code>16,777,215</code> 个字符的字符串。</td></tr><tr><td><code>LONGTEXT</code></td><td>存放最大长度为 <code>4,294,967,295</code> 个字符的字符串。</td></tr><tr><td><code>LONGTEXT</code></td><td>用于 <code>BLOBs(Binary Large Objects)</code>。存放最多<code>4,294,967,295</code>字节的数据。</td></tr><tr><td><code>ENUM(x,y,z,etc.)</code></td><td>允许你输入可能值的列表。可以在 <code>ENUM</code> 列表中列出最大 <code>65535</code> 个值。如果列表中不存在插入的值，则插入空值。注释：这些值是按照你输入的顺序存储的。可以按照此格式输入可能的值：<code>ENUM(&#39;X&#39;,&#39;Y&#39;,&#39;Z&#39;)</code>。</td></tr><tr><td><code>SET</code></td><td>与 <code>ENUM</code> 类似，<code>SET</code> 最多只能包含 <code>64</code> 个列表项，不过 <code>SET</code> 可存储一个以上的值。</td></tr></tbody></table><p><strong><code>Number</code> 类型：</strong></p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td><code>TINYINT(size)</code></td><td><code>-128 ~ 127</code> 常规。<code>0 ~ 255</code> 无符号 <code>*</code> 。在括号中规定最大位数。</td></tr><tr><td><code>SMALLINT(size)</code></td><td><code>-32768 ~ 32767</code> 常规。<code>0 ~ 65535</code> 无符号 <code>*</code> 。在括号中规定最大位数。</td></tr><tr><td><code>MEDIUMINT(size)</code></td><td><code>-83886908 ~ 83886907</code> 普通。<code>0 ~ 16777215</code> 无符号 <code>*</code> 。在括号中规定最大位数。</td></tr><tr><td><code>INT(size)</code></td><td><code>-2147483648 ~ 2147483647</code> 常规。<code>0 ~ 4294967295</code> 无符号 <code>*</code> 。在括号中规定最大位数。</td></tr><tr><td><code>BIGINT(size)</code></td><td><code>-9223372036854775808 ~ 9223372036854775807</code> 常规。<code>0 ~ 184467440737095516115</code> 无符号 <code>*</code> 。在括号中规定最大位数。</td></tr><tr><td><code>FLOAT(size,d)</code></td><td>带浮动小数点的小数字。在括号中规定最大位数。在 <code>d</code> 参数中规定小数点右侧的最大位数。</td></tr><tr><td><code>DOUBLE(size,d)</code></td><td>带浮动小数点的大数字。在括号中规定最大位数。在 <code>d</code> 参数中规定小数点右侧的最大位数。</td></tr><tr><td><code>DECIMAL(size,d)</code></td><td>作为字符串存储的 <code>DOUBLE</code> 类型，允许固定的小数点。</td></tr></tbody></table><blockquote><p>这些整数类型拥有额外的选项  <code>UNSIGNED</code> 。通常，整数可以是负数或正数。如果添加 <code>UNSIGNED</code> 属性，那么范围将从 <code>0</code> 开始，而不是某个负数。</p></blockquote><p><strong><code>Date</code> 类型：</strong></p><table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td><code>DATE()</code></td><td>日期。格式：<code>YYYY-MM-DD</code><br />注释：支持的范围是从 <code>1000-01-01 - 9999-12-31</code></td></tr><tr><td><code>DATETIME()</code></td><td>日期和时间的组合。格式：<code>YYYY-MM-DD HH:MM:SS</code><br />注释：支持的范围是从 <code>1000-01-01 00:00:00 - 9999-12-31 23:59:59</code></td></tr><tr><td><code>TIMESTAMP()</code></td><td>时间戳。<code>TIMESTAMP</code> 值使用 <code>Unix</code> 纪元（<code>1970-01-01 00:00:00 UTC</code>）至今的描述来存储。格式：<code>YYYY-MM-DD HH:MM:SS</code><br />注释：支持的范围是从 <code>1970-01-01 00:00:01 UTC - 2038-01-09 03:14:07 UTC</code></td></tr><tr><td><code>TIME()</code></td><td>时间。格式：<code>HH:MM:SS</code> 注释：支持的范围是从 <code>-838:59:59 - 838:59:59</code></td></tr><tr><td><code>YEAR()</code></td><td><code>2</code> 位或 <code>4</code> 位格式的年。<br />注释：<code>4</code> 位格式所允许的值：<code>1901 - 2155</code>。<code>2</code> 位格式所允许的值：<code>70</code> 到 <code>69</code> ，表示从 <code>1970 - 2069</code></td></tr></tbody></table><hr><h1 id="一、MySQL-常见版本"><a href="#一、MySQL-常见版本" class="headerlink" title="一、MySQL 常见版本"></a>一、<code>MySQL</code> 常见版本</h1><ul><li><code>MySQL Community Server</code> 社区版本，开源免费，但不提供官方技术支持。</li><li><code>MySQL Enterprise Edition</code> 企业版本，需付费，试用 <code>30</code> 天。</li><li><code>MySQL Cluster</code> 集群版，开源免费。可将几个 <code>MySQL Server</code> 封装成一个 <code>Server</code>。</li><li><code>MySQL Cluster CGE</code> 高级集群版，需付费。</li></ul><h1 id="二、MySQL-安装部署"><a href="#二、MySQL-安装部署" class="headerlink" title="二、MySQL 安装部署"></a>二、<code>MySQL</code> 安装部署</h1><p><code>MySQL</code> ：<code>MySQL</code> 客户端程序</p><p><code>MySQL-Server</code> ：<code>MySQL</code> 服务器端程序</p><p><strong>源码编译安装：</strong></p><p>​    编译工具：<code>configure</code>、<code>cmake</code> 、<code>make</code></p><p>​    数据库常用的配置选项：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">-DCMAKE_INSTALL_PREFIX</span>=/PREFIX        <span class="hljs-comment">#指定安装的路径（默认的就是 /usr/local/mysql）</span><br><span class="hljs-attr">-DMYSQL_DATADIR</span>=/data/mysql  <span class="hljs-comment">#mysql 的数据文件路径</span><br><span class="hljs-attr">-DSYSCONFDIR</span>=/etc  <span class="hljs-comment">#配置文件路径</span><br><span class="hljs-attr">-DWITH_INNOBASE_STORAGE_ENGINE</span>=<span class="hljs-number">1</span>  <span class="hljs-comment">#使用 INNOBASE 存储引擎</span><br><span class="hljs-attr">-DWITH_READLINE</span>=<span class="hljs-number">1</span>  <span class="hljs-comment">#支持批量导入 mysql 数据</span><br><span class="hljs-attr">-DWITH_SSL</span>=system  <span class="hljs-comment">#mysql 支持ssl</span><br><span class="hljs-attr">-DWITH_ZLIB</span>=system  <span class="hljs-comment">#支持压缩存储</span><br><span class="hljs-attr">-DMYSQL_TCP_PORT</span>=<span class="hljs-number">3306</span>  <span class="hljs-comment">#默认端口 3306</span><br><span class="hljs-attr">-DENABLED_LOCAL_INFILE</span>=<span class="hljs-number">1</span>     <span class="hljs-comment">#启用加载本地数据</span><br><span class="hljs-attr">-DMYSQL_USER</span>=mysql  <span class="hljs-comment">#指定 mysql 运行用户</span><br><span class="hljs-attr">-DMYSQL_UNIX_ADDR</span>=/tmp/mysql.sock     <span class="hljs-comment">#默认套接字文件路径</span><br><span class="hljs-attr">-DEXTRA_CHARSETS</span>=all                  <span class="hljs-comment">#是否支持额外的字符集</span><br><span class="hljs-attr">-DDEFAULT_CHARSET</span>=UTF8                <span class="hljs-comment">#默认编码机制</span><br><span class="hljs-attr">-DWITH_DEBUG</span>=<span class="hljs-number">0</span>   <span class="hljs-comment">#DEBUG功能设置</span><br></code></pre></td></tr></table></figure><p><strong>常见资料：</strong></p><ul><li><p>服务：<code>mysqld</code>                 </p></li><li><p>端口：<code>3306</code></p></li><li><p>主配置文件：<code>/etc/my.cf</code></p></li><li><p>初始化脚本：<code>mysql_install-db</code></p></li><li><p>启动命令：<code>mysqld_safe</code> </p></li><li><p>数据目录：<code>/var/lib/mysql</code></p></li><li><p>套接字文件：<code>/var/lib/mysql/mysql.sock</code></p></li><li><p>进程文件：<code>/var/run/mysqld/mysqld.pid</code></p><blockquote><p>当意外关闭数据库时，再开启时假如开启不了，找到这个，删除再启动</p></blockquote></li></ul><p><strong><code>MySQL</code> 登录及退出命令：</strong></p><ul><li><p>设置密码：<code>mysqladmin -uroot password &#39;123456&#39;</code></p></li><li><p>登录：<code>mysql -u 用户名 -p 密码 -P 端口 -S 套接字文件</code></p><p>​    <code>-p</code>：用户密码</p><p>​    <code>-h</code>：登录位置（主机名或 <code>ip</code> 地址）</p><p>​    <code>-P</code>：端口号</p><p>​    <code>-S</code>：套接字文件</p><p>​    退出命令：<code>exit</code> 或 <code>ctrl+d</code></p></li></ul><hr><h1 id="三、MySQL-管理命令"><a href="#三、MySQL-管理命令" class="headerlink" title="三、MySQL 管理命令"></a>三、<code>MySQL</code> 管理命令</h1><h2 id="1-yum-安装-MySQL-并启动"><a href="#1-yum-安装-MySQL-并启动" class="headerlink" title="1. yum 安装 MySQL 并启动"></a>1. <code>yum</code> 安装 <code>MySQL</code> 并启动</h2><blockquote><p><code>CentOS7</code> 没有 <code>mysql-server</code> 文件</p><p>解决：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 手动获取rpm文件</span><br><span class="hljs-attribute">wget</span> http://repo.mysql.com/mysql-community-release-el<span class="hljs-number">7</span>-<span class="hljs-number">5</span>.noarch.rpm<br><br><span class="hljs-comment"># 安装rpm文件</span><br><span class="hljs-attribute">rpm</span> -ivh mysql-community-release-el<span class="hljs-number">7</span>-<span class="hljs-number">5</span>.noarch.rpm<br><br><span class="hljs-comment"># 安装 mysql-server</span><br><span class="hljs-attribute">yum</span> -y install mysql-server<br></code></pre></td></tr></table></figure></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test</span> opt]<span class="hljs-meta"># yum -y install mysql-server mysql</span><br>[root<span class="hljs-symbol">@test</span> opt]<span class="hljs-meta"># systemctl enable mysqld</span><br>[root<span class="hljs-symbol">@test</span> opt]<span class="hljs-meta"># systemctl start mysqld</span><br></code></pre></td></tr></table></figure><blockquote><p><a id="demo"><code>root</code> 用户找回自己的密码并修改</a></p><p>报错：<code>mysqladmin: connect to server at &#39;localhost&#39; failed error: &#39;Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: NO)&#39;</code></p><ol><li><strong>安装完 <code>MySQL</code> 设置 <code>root</code> 密码报错</strong></li></ol><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@test ~]# mysqladmin -u root password 123456<br>mysqladmin: connect to server at &#x27;localhost&#x27; failed<br><span class="hljs-keyword">error: </span>&#x27;Access denied for user &#x27;root&#x27;@&#x27;localhost&#x27; (using password: NO)&#x27;<br></code></pre></td></tr></table></figure><ol start="2"><li><strong>停止 <code>MySQL</code> 服务</strong></li></ol><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># systemctl stop mysqld.service</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>安全模式启用</strong></li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@test ~</span>]<span class="hljs-meta"># mysqld_safe --skip-grant-tables &amp;</span><br>[<span class="hljs-meta">1</span>] <span class="hljs-number">2628</span><br>[<span class="hljs-meta">root@test ~</span>]<span class="hljs-meta"># 210403 14:49:33 mysqld_safe Logging to &#x27;/var/log/mysqld.log&#x27;.</span><br><span class="hljs-number">210403</span> <span class="hljs-number">14</span>:<span class="hljs-number">49</span>:<span class="hljs-number">33</span> mysqld_safe Starting mysqld daemon <span class="hljs-keyword">with</span> databases <span class="hljs-keyword">from</span> /<span class="hljs-keyword">var</span>/lib/mysql<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>无密码 <code>root</code> 账号登陆</strong></li></ol><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs smali">[root@test etc]<span class="hljs-comment"># mysql -uroot -p</span><br>Enter password: <br>Welcome to the MySQ<span class="hljs-class">L monitor.  Commands end with ;</span><span class="hljs-built_in"> or </span>\g.<br>Your MySQL connection id is 1<br>Server version: 5.6.51 MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2021, Oracle<span class="hljs-built_in"> and/or </span>its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation<span class="hljs-built_in"> and/or </span>its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27;<span class="hljs-built_in"> or </span>&#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><br>mysql&gt; <br>mysql&gt; use mysql;<br>Reading table information for completion of table<span class="hljs-built_in"> and </span>column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br></code></pre></td></tr></table></figure><ol start="5"><li>手动 <code>update</code> 修改密码</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(&quot;123456&quot;) <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">&#x27;localhost&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><span class="hljs-keyword">Rows</span> matched: <span class="hljs-number">1</span>  Changed: <span class="hljs-number">0</span>  Warnings: <span class="hljs-number">0</span><br><br>mysql&gt; flush <span class="hljs-keyword">privileges</span>;<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; quit<br>Bye<br></code></pre></td></tr></table></figure><ol start="6"><li><strong>重新使用密码登录</strong></li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@test ~]# mysql -uroot -p123456<br><span class="hljs-built_in">Warning</span>: <span class="hljs-keyword">Using</span> a <span class="hljs-keyword">password</span> <span class="hljs-keyword">on</span> the command <span class="hljs-type">line</span> interface can be insecure.<br>Welcome <span class="hljs-keyword">to</span> the MySQL monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MySQL <span class="hljs-keyword">connection</span> id <span class="hljs-keyword">is</span> <span class="hljs-number">2</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">5.6</span><span class="hljs-number">.51</span> MySQL Community <span class="hljs-keyword">Server</span> (GPL)<br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2021</span>, Oracle <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its affiliates. <span class="hljs-keyword">All</span> rights reserved.<br><br>Oracle <span class="hljs-keyword">is</span> a registered trademark <span class="hljs-keyword">of</span> Oracle Corporation <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> its<br>affiliates. Other names may be trademarks <span class="hljs-keyword">of</span> their respective<br>owners.<br><br><span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. <span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">statement</span>.<br><br>mysql&gt; <br></code></pre></td></tr></table></figure><ol start="7"><li><strong>重新启动 <code>mysql</code></strong></li></ol><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># systemctl restart mysqld</span><br></code></pre></td></tr></table></figure><ol start="8"><li><strong>查看端口号</strong></li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@test</span> ~]<span class="hljs-comment"># netstat -tunlp | grep 3306</span><br>tcp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">3306</span>                 ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">1868</span>/mysqld<br></code></pre></td></tr></table></figure></blockquote><h2 id="2-创建登录用户"><a href="#2-创建登录用户" class="headerlink" title="2. 创建登录用户"></a>2. 创建登录用户</h2><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mel">mysql&gt; create user zhangsan@&#x27;%&#x27; identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, <span class="hljs-number">0</span> rows affected (<span class="hljs-number">0.00</span> sec)<br>@: 分隔符<br>%: 指任意的远程终端，可以是 localhost，也可以是一个IP（<span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.104</span>）或者网段（<span class="hljs-number">10.4</span><span class="hljs-number">.7</span>.%）<br></code></pre></td></tr></table></figure><h2 id="3-测试用户登录"><a href="#3-测试用户登录" class="headerlink" title="3. 测试用户登录"></a>3. 测试用户登录</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@test2 ~]# yum -y install mysql<br>[root@test2 ~]# mysql -u zhangsan -p123456 -h <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.103</span><br>Welcome <span class="hljs-keyword">to</span> the MariaDB monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MySQL <span class="hljs-keyword">connection</span> id <span class="hljs-keyword">is</span> <span class="hljs-number">3</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">5.6</span><span class="hljs-number">.51</span> MySQL Community <span class="hljs-keyword">Server</span> (GPL)<br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2018</span>, Oracle, MariaDB Corporation Ab <span class="hljs-keyword">and</span> others.<br><br><span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. <span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">statement</span>.<br><br>MySQL [(<span class="hljs-keyword">none</span>)]&gt; <br></code></pre></td></tr></table></figure><h2 id="3-用户为自己更改密码"><a href="#3-用户为自己更改密码" class="headerlink" title="3. 用户为自己更改密码"></a>3. 用户为自己更改密码</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">MySQL [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;1234567&#x27;</span>);<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><h2 id="4-root-用户为其他用户找回密码"><a href="#4-root-用户为其他用户找回密码" class="headerlink" title="4. root 用户为其他用户找回密码"></a>4. <code>root</code> 用户为其他用户找回密码</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> zhangsan@<span class="hljs-string">&#x27;%&#x27;</span> =<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;123456&#x27;</span>);<br>Query OK, <span class="hljs-number">0</span> <span class="hljs-keyword">rows</span> affected (<span class="hljs-number">0.01</span> sec)<br></code></pre></td></tr></table></figure><h2 id="5-root-找回自己的密码并修改"><a href="#5-root-找回自己的密码并修改" class="headerlink" title="5. root 找回自己的密码并修改"></a>5. <code>root</code> 找回自己的密码并修改</h2><p><a href="#demo">点击跳转</a></p><h2 id="6-创建查询数据库"><a href="#6-创建查询数据库" class="headerlink" title="6. 创建查询数据库"></a>6. 创建查询数据库</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; create database web;<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| web                |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="7-创建数据表"><a href="#7-创建数据表" class="headerlink" title="7. 创建数据表"></a>7. 创建数据表</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; use web;<br>Database changed                                #选择要使用的数据库<br>mysql&gt; create table a1(id int , name char(30)); #创建a1表，并添加id和name字段以及类型<br>Query OK, 0 rows affected (0.07 sec)<br><br>mysql&gt; describe a1;                             #查看表结构（字段）<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>| Field | Type     | Null | Key | Default | Extra |<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>| id    | int(11)  | YES  |     | NULL    |       |<br>| name  | char(30) | YES  |     | NULL    |       |<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p><strong>复杂一点的</strong></p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; create table a2 (<br>    -&gt; id int unsigned not null auto_increment,   <span class="hljs-comment">#字段要求为正数、且自增长、主键     </span><br>    -&gt; name char(30) not null default &#x27;&#x27;,         <span class="hljs-comment">#字符型长度30字节，默认值为空格</span><br>    -&gt; age int not null default 0,                <span class="hljs-comment">#字段默认值为0</span><br>    -&gt; primary key (id));                         <span class="hljs-comment">#设置id为主键</span><br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; describe a2;<br>+-------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> Field </span>|<span class="hljs-string"> Type             </span>|<span class="hljs-string"> Null </span>|<span class="hljs-string"> Key </span>|<span class="hljs-string"> Default </span>|<span class="hljs-string"> Extra          </span>|<br>+-------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> id    </span>|<span class="hljs-string"> int(10) unsigned </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string"> PRI </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string"> auto_increment </span>|<br>|<span class="hljs-string"> name  </span>|<span class="hljs-string"> char(30)         </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> age   </span>|<span class="hljs-string"> int(11)          </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> 0       </span>|<span class="hljs-string">                </span>|<br>+-------+------------------+------+-----+---------+----------------+<br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="8-插入数据"><a href="#8-插入数据" class="headerlink" title="8. 插入数据"></a>8. 插入数据</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; insert into a2 (id,name,age) values (1,<span class="hljs-emphasis">&#x27;zhangsan&#x27;</span>,21); #指明插入字段和数据<br>Query OK, 1 row affected (0.00 sec)<br><br>mysql&gt; select * from a2;<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>| id | name     | age |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>|  1 | zhangsan |  21 |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>1 row in set (0.00 sec)<br><br>mysql&gt; insert into a2 values (2,<span class="hljs-emphasis">&#x27;lisi&#x27;</span>,20);<br>mysql&gt; insert into a2 values (3,<span class="hljs-emphasis">&#x27;wangwu&#x27;</span>,0);<br>mysql&gt; insert into a2 values (4,<span class="hljs-emphasis">&#x27;xiaoming&#x27;</span>,10),(5,<span class="hljs-emphasis">&#x27;xiaoji&#x27;</span>,25);<br>---<br>mysql&gt; insert into a2 (id,name,age) values (3,<span class="hljs-emphasis">&#x27;wangwu&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="9-将表-a2-的数据复制到表-a1"><a href="#9-将表-a2-的数据复制到表-a1" class="headerlink" title="9. 将表 a2 的数据复制到表 a1"></a>9. 将表 <code>a2</code> 的数据复制到表 <code>a1</code></h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; select * from a1;<br>mysql&gt; insert into a1 (id,name) select id,name from a2; <br># 查询a2值，并写入到a1<br>mysql&gt; select * from a1;<br><span class="hljs-code">+------+</span>----------+<br>| id   | name     |<br><span class="hljs-code">+------+</span>----------+<br>|    1 | zhangsan |<br>|    2 | lisi     |<br>|    3 | wangwu   |<br>|    4 | xiaoming |<br>|    5 | xiaoji   |<br><span class="hljs-code">+------+</span>----------+<br>5 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="10-删除数据库"><a href="#10-删除数据库" class="headerlink" title="10. 删除数据库"></a>10. 删除数据库</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; drop database web;<br><span class="hljs-attribute">Query</span> OK, <span class="hljs-number">2</span> rows affected (<span class="hljs-number">0</span>.<span class="hljs-number">06</span> sec)<br></code></pre></td></tr></table></figure><h2 id="11-删除数据表"><a href="#11-删除数据表" class="headerlink" title="11. 删除数据表"></a>11. 删除数据表</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; drop table a1;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; show tables;<br><span class="hljs-code">+---------------+</span><br>| Tables_in_web |<br><span class="hljs-code">+---------------+</span><br>| a2            |<br><span class="hljs-code">+---------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="12-删除表里的数据记录"><a href="#12-删除表里的数据记录" class="headerlink" title="12. 删除表里的数据记录"></a>12. 删除表里的数据记录</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span>&gt; delete from a<span class="hljs-number">2</span> where id=<span class="hljs-number">5</span>;                 #删除 id=<span class="hljs-number">5</span> 的记录<br><span class="hljs-attribute">mysql</span>&gt; delete from a<span class="hljs-number">2</span> where between <span class="hljs-number">23</span> and <span class="hljs-number">25</span>;    #删除年龄在<span class="hljs-number">23</span>-<span class="hljs-number">25</span>之间的<br></code></pre></td></tr></table></figure><p><font color=red>注：库和表的删除用 drop，记录删除用 delete</font></p><h2 id="13-修改表中的数据"><a href="#13-修改表中的数据" class="headerlink" title="13. 修改表中的数据"></a>13. 修改表中的数据</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; update a2 set age=21 where id=3;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>mysql&gt; select * from a2;<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>| id | name     | age |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>|  1 | zhangsan |  21 |<br>|  2 | lisi     |  20 |<br>|  3 | wangwu   |  21 |<br>|  4 | xiaoming |  10 |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="14-修改数据表的名称"><a href="#14-修改数据表的名称" class="headerlink" title="14. 修改数据表的名称"></a>14. 修改数据表的名称</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; alter table a2 rename a1;<br>Query OK, 0 rows affected (0.05 sec)<br><br>mysql&gt; select * from a1;<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>| id | name     | age |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>|  1 | zhangsan |  21 |<br>|  2 | lisi     |  20 |<br>|  3 | wangwu   |  21 |<br>|  4 | xiaoming |  10 |<br><span class="hljs-code">+----+</span>----------<span class="hljs-code">+-----+</span><br>4 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="15-修改数据表的字段类型"><a href="#15-修改数据表的字段类型" class="headerlink" title="15. 修改数据表的字段类型"></a>15. 修改数据表的字段类型</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; describe a1;<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| Field | Type             | Null | Key | Default | Extra          |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |<br>| name  | char(30)         | NO   |     |         |                |<br>| age   | int(11)          | NO   |     | 0       |                |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>3 rows in set (0.00 sec)<br><br>mysql&gt; alter table a1 modify name char(50);<br>Query OK, 4 rows affected (0.04 sec)<br>Records: 4  Duplicates: 0  Warnings: 0<br><br>mysql&gt; describe a1;<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| Field | Type             | Null | Key | Default | Extra          |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |<br>| name  | char(50)         | YES  |     | NULL    |                |<br>| age   | int(11)          | NO   |     | 0       |                |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="16-修改数据表的字段类型详情"><a href="#16-修改数据表的字段类型详情" class="headerlink" title="16. 修改数据表的字段类型详情"></a>16. 修改数据表的字段类型详情</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; describe a1;<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| Field | Type             | Null | Key | Default | Extra          |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |<br>| name  | char(50)         | YES  |     | NULL    |                |<br>| age   | int(11)          | NO   |     | 0       |                |<br><span class="hljs-code">+-------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>3 rows in set (0.00 sec)<br><br>mysql&gt; alter table a1 change name username char(50) not null default &#x27;<span class="hljs-emphasis">&#x27;;</span><br><span class="hljs-emphasis">Query OK, 0 rows affected (0.11 sec)</span><br><span class="hljs-emphasis">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">mysql&gt; describe a1;</span><br><span class="hljs-emphasis">+----------+------------------+------+-----+---------+----------------+</span><br><span class="hljs-emphasis">| Field    | Type             | Null | Key | Default | Extra          |</span><br><span class="hljs-emphasis">+----------+------------------+------+-----+---------+----------------+</span><br><span class="hljs-emphasis">| id       | int(10) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="hljs-emphasis">| username | char(50)         | NO   |     |         |                |</span><br><span class="hljs-emphasis">| age      | int(11)          | NO   |     | 0       |                |</span><br><span class="hljs-emphasis">+----------+------------------+------+-----+---------+----------------+</span><br><span class="hljs-emphasis">3 rows in set (0.00 sec)</span><br></code></pre></td></tr></table></figure><h2 id="17-添加字段"><a href="#17-添加字段" class="headerlink" title="17. 添加字段"></a>17. 添加字段</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; describe a1;<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> Field    </span>|<span class="hljs-string"> Type             </span>|<span class="hljs-string"> Null </span>|<span class="hljs-string"> Key </span>|<span class="hljs-string"> Default </span>|<span class="hljs-string"> Extra          </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> id       </span>|<span class="hljs-string"> int(10) unsigned </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string"> PRI </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string"> auto_increment </span>|<br>|<span class="hljs-string"> username </span>|<span class="hljs-string"> char(50)         </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> age      </span>|<span class="hljs-string"> int(11)          </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> 0       </span>|<span class="hljs-string">                </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>3 rows in set (0.00 sec)<br><br>mysql&gt; alter table a1 add time datetime;<br>Query OK, 0 rows affected (0.02 sec)<br>Records: 0  Duplicates: 0  Warnings: 0<br><br>mysql&gt; describe a1;<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> Field    </span>|<span class="hljs-string"> Type             </span>|<span class="hljs-string"> Null </span>|<span class="hljs-string"> Key </span>|<span class="hljs-string"> Default </span>|<span class="hljs-string"> Extra          </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> id       </span>|<span class="hljs-string"> int(10) unsigned </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string"> PRI </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string"> auto_increment </span>|<br>|<span class="hljs-string"> username </span>|<span class="hljs-string"> char(50)         </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> age      </span>|<span class="hljs-string"> int(11)          </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> 0       </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> time     </span>|<span class="hljs-string"> datetime         </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>4 rows in set (0.00 sec)<br><span class="hljs-comment">#添加位置默认在末尾</span><br><br>mysql&gt; alter table a1 add birthday year first;     <span class="hljs-comment">#添加字段到第一列</span><br>mysql&gt; alter table a1 add sex nchar(1) after id;   <span class="hljs-comment">#添加到指定字段后</span><br><br>mysql&gt; describe a1;<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> Field    </span>|<span class="hljs-string"> Type             </span>|<span class="hljs-string"> Null </span>|<span class="hljs-string"> Key </span>|<span class="hljs-string"> Default </span>|<span class="hljs-string"> Extra          </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> birthday </span>|<span class="hljs-string"> year(4)          </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> id       </span>|<span class="hljs-string"> int(10) unsigned </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string"> PRI </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string"> auto_increment </span>|<br>|<span class="hljs-string"> sex      </span>|<span class="hljs-string"> char(1)          </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> username </span>|<span class="hljs-string"> char(50)         </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> age      </span>|<span class="hljs-string"> int(11)          </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> 0       </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> time     </span>|<span class="hljs-string"> datetime         </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>6 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="18-删除字段"><a href="#18-删除字段" class="headerlink" title="18. 删除字段"></a>18. 删除字段</h2><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">mysql&gt; alter table a1 drop birthday;<br><br>mysql&gt; describe a1;<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> Field    </span>|<span class="hljs-string"> Type             </span>|<span class="hljs-string"> Null </span>|<span class="hljs-string"> Key </span>|<span class="hljs-string"> Default </span>|<span class="hljs-string"> Extra          </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>|<span class="hljs-string"> id       </span>|<span class="hljs-string"> int(10) unsigned </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string"> PRI </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string"> auto_increment </span>|<br>|<span class="hljs-string"> sex      </span>|<span class="hljs-string"> char(1)          </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> username </span>|<span class="hljs-string"> char(50)         </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> age      </span>|<span class="hljs-string"> int(11)          </span>|<span class="hljs-string"> NO   </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> 0       </span>|<span class="hljs-string">                </span>|<br>|<span class="hljs-string"> time     </span>|<span class="hljs-string"> datetime         </span>|<span class="hljs-string"> YES  </span>|<span class="hljs-string">     </span>|<span class="hljs-string"> NULL    </span>|<span class="hljs-string">                </span>|<br>+----------+------------------+------+-----+---------+----------------+<br>5 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="19-MySQL-用户授权"><a href="#19-MySQL-用户授权" class="headerlink" title="19. MySQL 用户授权"></a>19. <code>MySQL</code> 用户授权</h2><p>授予用户全部权限</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; select user from mysql.user;<br><span class="hljs-code">+----------+</span><br>| user     |<br><span class="hljs-code">+----------+</span><br>| zhangsan |<br>| root     |<br>| root     |<br>|          |<br>| root     |<br>|          |<br>| root     |<br><span class="hljs-code">+----------+</span><br>7 rows in set (0.00 sec)<br><br>mysql&gt; grant all on web.a1 to zhangsan@<span class="hljs-emphasis">&#x27;%&#x27;</span>; #给已存在的用户授权<br>mysql&gt; grant all on web.a1 to butatree@<span class="hljs-emphasis">&#x27;%&#x27;</span> identified by <span class="hljs-emphasis">&#x27;123456&#x27;</span>; #创建用户并授权<br></code></pre></td></tr></table></figure><p>取消 <code>butatree</code> 用户的删除库、表、表中数据的权限</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">mysql&gt; <span class="hljs-keyword">revoke</span> <span class="hljs-keyword">drop</span>,<span class="hljs-keyword">delete</span> <span class="hljs-keyword">on</span> web.a1 <span class="hljs-keyword">from</span> butatree@<span class="hljs-string">&#x27;%&#x27;</span>; #取消删除权限（登录butatree测试）<br>mysql&gt; <span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> butatree@<span class="hljs-string">&#x27;%&#x27;</span>;    #查看指定用户的授权<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------------------------------+</span><br>| Grants <span class="hljs-keyword">for</span> butatree@%                                                                                                           |<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------------------------------+</span><br>| <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">USAGE</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;butatree&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-keyword">PASSWORD</span> <span class="hljs-string">&#x27;*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9&#x27;</span>                         |<br>| <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span>, <span class="hljs-keyword">INSERT</span>, <span class="hljs-keyword">UPDATE</span>, <span class="hljs-keyword">CREATE</span>, <span class="hljs-keyword">REFERENCES</span>, <span class="hljs-keyword">INDEX</span>, <span class="hljs-keyword">ALTER</span>, <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span>, <span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">VIEW</span>, <span class="hljs-keyword">TRIGGER</span> <span class="hljs-keyword">ON</span> `web`.`a1` <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;butatree&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> |<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="hljs-number">2</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br><br>mysql&gt; <span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> zhangsan@<span class="hljs-string">&#x27;%&#x27;</span>;<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------+</span><br>| Grants <span class="hljs-keyword">for</span> zhangsan@%                                                                                   |<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------+</span><br>| <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">USAGE</span> <span class="hljs-keyword">ON</span> *.* <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;zhangsan&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-keyword">PASSWORD</span> <span class="hljs-string">&#x27;*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9&#x27;</span> |<br>| <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> `web`.`a1` <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;zhangsan&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>                                                    |<br>| <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span> <span class="hljs-keyword">ON</span> `aa`.`a1` <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;zhangsan&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>                                                     |<br>+<span class="hljs-comment">---------------------------------------------------------------------------------------------------------+</span><br><span class="hljs-number">3</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br></code></pre></td></tr></table></figure><hr><h1 id="四、备份和还原"><a href="#四、备份和还原" class="headerlink" title="四、备份和还原"></a>四、备份和还原</h1><h2 id="1-mysqldump-备份："><a href="#1-mysqldump-备份：" class="headerlink" title="1. mysqldump 备份："></a>1. <code>mysqldump</code> 备份：</h2><p><strong>备份：</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">mysqldump -u 用户名 -p 数据库名 &gt; <span class="hljs-regexp">/备份路径/</span>备份文件名（备份整个数据库）<br>mysqldump -u 用户名 -p 数据库名 表名 &gt; <span class="hljs-regexp">/备份路径/</span>备份文件名（备份数据表）<br></code></pre></td></tr></table></figure><ul><li>备份多个库：<code>--databases 库1，库2</code></li><li>备份所有库：<code>--all-databases</code></li><li>备份多个表：库名 表 <code>1</code>  表 <code>2</code></li></ul><p><strong>还原：</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">mysql</span> 数据库 &lt; 备份文件<br></code></pre></td></tr></table></figure><p><font color=green>注意：还原时，若导入的是某表，请指定导入到哪一个库中</font></p><h2 id="2-mysqlhotcopy-备份"><a href="#2-mysqlhotcopy-备份" class="headerlink" title="2. mysqlhotcopy 备份"></a>2. <code>mysqlhotcopy</code> 备份</h2><p><strong>备份：</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mysqlhotcopy --flushlog <span class="hljs-attribute">-u</span>=<span class="hljs-string">&#x27;用户&#x27;</span> <span class="hljs-attribute">-p</span>=<span class="hljs-string">&#x27;密码&#x27;</span> <span class="hljs-attribute">--regexp</span>=正则  备份目录<br></code></pre></td></tr></table></figure><p><strong>还原：</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp -a 备份目录  数据目录（<span class="hljs-regexp">/var/</span>lib/mysql）<br></code></pre></td></tr></table></figure><h2 id="3-mysqldump-和-mysqlhotcopy-示例："><a href="#3-mysqldump-和-mysqlhotcopy-示例：" class="headerlink" title="3. mysqldump 和 mysqlhotcopy 示例："></a>3. <code>mysqldump</code> 和 <code>mysqlhotcopy</code> 示例：</h2><p><strong><code>mysql</code> 备份和还原</strong></p><p>把数据库 <code>web</code> 备份到 <code>/mysqldata</code> 目录下</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># mysqldump -uroot -p web &gt; /mysqldata/web.sql</span><br></code></pre></td></tr></table></figure><p>把数据库 <code>web.sql</code> 导入到 <code>test2</code> 下：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test2 ~]# mysql -uroot -p # mysql-server<br>mysql&gt; create database web<br>[root@test2 ~]# mysql web &lt; web.sql<br>mysql&gt; show tables;<br><span class="hljs-code">+---------------+</span><br>| Tables_in_web |<br><span class="hljs-code">+---------------+</span><br>| a1            |<br><span class="hljs-code">+---------------+</span><br>1 row in set (0.00 sec)<br><br>mysql&gt; describe a1;<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| Field    | Type             | Null | Key | Default | Extra          |<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| id       | int(10) unsigned | NO   | PRI | NULL    | auto_increment |<br>| sex      | char(1)          | YES  |     | NULL    |                |<br>| username | char(50)         | NO   |     |         |                |<br>| age      | int(11)          | NO   |     | 0       |                |<br>| time     | datetime         | YES  |     | NULL    |                |<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>5 rows in set (0.01 sec)<br></code></pre></td></tr></table></figure><p><strong>备份多个数据库（<code>--databases</code>）：</strong></p><blockquote><p>导入 备份多个文件的时候不需要创建数据库。</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta"># 创建多个数据库</span><br>[root<span class="hljs-symbol">@test</span> mysql]<span class="hljs-meta"># mysqldump -uroot -p --databases a1 web &gt; /mysqldata/abc.sql</span><br><span class="hljs-meta"># 将abc.sql文件拷贝到test2</span><br>[root<span class="hljs-symbol">@test</span> mysqldata]<span class="hljs-meta"># scp abc.sql root@10.4.7.104:/root/</span><br>root<span class="hljs-symbol">@10</span><span class="hljs-number">.4</span><span class="hljs-number">.7</span><span class="hljs-number">.104</span><span class="hljs-string">&#x27;s password: </span><br><span class="hljs-string">abc.sql</span><br></code></pre></td></tr></table></figure><p>将数据库 <code>abc.sql</code> 文件导入到 <code>test2</code> 中：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@test2 ~]# mysql -uroot -p  &lt; abc.sql<br>mysql&gt; use a1;<br>Database changed<br><br>mysql&gt; show tables;<br><span class="hljs-code">+--------------+</span><br>| Tables_in_a1 |<br><span class="hljs-code">+--------------+</span><br>| a1           |<br><span class="hljs-code">+--------------+</span><br>1 row in set (0.00 sec)<br>mysql&gt; describe a1;<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>| Field | Type     | Null | Key | Default | Extra |<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>| id    | int(11)  | YES  |     | NULL    |       |<br>| name  | char(30) | YES  |     | NULL    |       |<br><span class="hljs-code">+-------+</span>----------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>-------+<br>2 rows in set (0.00 sec)<br><br>mysql&gt; use web;<br>Database changed<br><br>mysql&gt; show tables;<br><span class="hljs-code">+---------------+</span><br>| Tables_in_web |<br><span class="hljs-code">+---------------+</span><br>| a1            |<br><span class="hljs-code">+---------------+</span><br>1 row in set (0.00 sec)<br><br>mysql&gt; describe a1;<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| Field    | Type             | Null | Key | Default | Extra          |<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>| id       | int(10) unsigned | NO   | PRI | NULL    | auto_increment |<br>| sex      | char(1)          | YES  |     | NULL    |                |<br>| username | char(50)         | NO   |     |         |                |<br>| age      | int(11)          | NO   |     | 0       |                |<br>| time     | datetime         | YES  |     | NULL    |                |<br><span class="hljs-code">+----------+</span>------------------<span class="hljs-code">+------+</span>-----<span class="hljs-code">+---------+</span>----------------+<br>5 rows in set (0.00 sec)<br><br></code></pre></td></tr></table></figure><p><strong>备份有规律的数据库：</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#连续创建三个a开头的数据库<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> a1;<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> a2;<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> a3;<br>[root@test mysqldata]# mysqlhotcopy <span class="hljs-comment">--flushlog -u=root -p --regexp=^a</span><br></code></pre></td></tr></table></figure><p>还原：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@test2 ~]<span class="hljs-comment"># cp -a /mysqldata/* /var/lib/mysql </span><br><span class="hljs-comment">#复制产生的文件到数据库目录下</span><br>[root@test2 mysql]<span class="hljs-comment"># ls</span><br><span class="hljs-built_in">a1</span>  <span class="hljs-built_in">a2</span>  <span class="hljs-built_in">a3</span>  auto.cnf  ibdata1  ib_logfile0  ib_logfile1  mysql  mysql.sock  performance_schema  <br><span class="hljs-comment">#登录数据库查看即可</span><br></code></pre></td></tr></table></figure><p><strong><code>mysql-binlog</code> 日志备份：</strong></p><p><strong>二进制日志（<code>log-bin</code> 日志）：所有对数据库状态<font color=red>更改</font>的操作（<code>create</code>、<code>drop</code>、<code>update</code> 等）</strong>s</p><p>​    修改 <code>my.cnf</code> 配置文件开启 <code>binlog</code> 日志记录功能</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@test mysql]<span class="hljs-comment"># vi /etc/my.cnf</span><br>log_bin=mysql-<span class="hljs-keyword">bin </span>    <span class="hljs-comment">#启动二进制日志</span><br>[root@test mysql]<span class="hljs-comment"># systemctl restart mysqld</span><br>[root@test mysql]<span class="hljs-comment"># cd /var/lib/mysql</span><br>[root@test mysql]<span class="hljs-comment"># ls  # 多了二进制mysql-bin.000001文件</span><br><span class="hljs-built_in">a1</span>  <span class="hljs-built_in">a2</span>  <span class="hljs-built_in">a3</span>  auto.cnf  ibdata1  ib_logfile0  ib_logfile1  mysql  mysql-<span class="hljs-keyword">bin.000001 </span> mysql-<span class="hljs-keyword">bin.index </span> mysql.sock<br></code></pre></td></tr></table></figure><p><strong>按时间还原：</strong></p><ul><li><code>--start-datetime</code></li><li><code>--stop-datetime</code></li></ul><p><strong>格式：</strong></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">mysqlbinlog</span>  <span class="hljs-built_in">--start-datetime</span> <span class="hljs-string">&#x27;YY-MM-DD HH:MM:SS&#x27;</span> <span class="hljs-built_in">--stop-datetime</span> <span class="hljs-string">&#x27;YY-MM-DD HH:MM:SS&#x27;</span> 二进制日志 | <span class="hljs-string">mysql</span> -<span class="hljs-string">uroot</span> -<span class="hljs-string">p</span><br></code></pre></td></tr></table></figure><p><strong>按文件大小还原：</strong></p><ul><li><code>--start-position</code></li><li><code>--stop-position</code></li></ul><hr><p><strong>示例：</strong></p><p>创建数据库文件。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">mysql&gt; create database abc;<br>mysql&gt; use abc;<br>Database changed<br>mysql&gt; create table xxx(id int,name varchar(100));<br>mysql&gt; insert into xxx values (1,<span class="hljs-emphasis">&#x27;aaa&#x27;</span>),(2,<span class="hljs-emphasis">&#x27;bbb&#x27;</span>);<br>mysql&gt; select * from xxx;<br><span class="hljs-code">+------+</span>------+<br>| id   | name |<br><span class="hljs-code">+------+</span>------+<br>|    1 | aaa  |<br>|    2 | bbb  |<br><span class="hljs-code">+------+</span>------+<br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>查看 <code>binlog</code> 日志文件：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@test mysql]# mysqlbinlog mysql-bin<span class="hljs-number">.000001</span> <br><span class="hljs-comment">/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/</span>;<br><span class="hljs-comment">/*!40019 SET @@session.max_insert_delayed_threads=0*/</span>;<br><span class="hljs-comment">/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/</span>;<br><span class="hljs-keyword">DELIMITER</span> <span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">4</span>      ←数据的大小 下面就是数据的时间<br><span class="hljs-meta">#210403 21:56:38 server id 1  end_log_pos 120 CRC32 0xc557e245 Start: binlog v 4, server v 5.6.51-log created 210403 21:56:38 at startup</span><br># <span class="hljs-built_in">Warning</span>: this binlog <span class="hljs-keyword">is</span> either <span class="hljs-keyword">in</span> use <span class="hljs-keyword">or</span> was <span class="hljs-keyword">not</span> closed properly.<br><span class="hljs-keyword">ROLLBACK</span><span class="hljs-comment">/*!*/</span>;<br>BINLOG <span class="hljs-string">&#x27;</span><br><span class="hljs-string">FnRoYA8BAAAAdAAAAHgAAAABAAQANS42LjUxLWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="hljs-string">AAAAAAAAAAAAAAAAAAAWdGhgEzgNAAgAEgAEBAQEEgAAXAAEGggAAAAICAgCAAAACgoKGRkAAUXi</span><br><span class="hljs-string">V8U=</span><br><span class="hljs-string">&#x27;</span><span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">120</span><br><span class="hljs-meta">#210403 21:59:48 server id 1  end_log_pos 211 CRC32 0x8828006a Querythread_id=2exec_time=0error_code=0</span><br><span class="hljs-keyword">SET</span> <span class="hljs-type">TIMESTAMP</span>=<span class="hljs-number">1617458388</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.pseudo_thread_id=<span class="hljs-number">2</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.foreign_key_checks=<span class="hljs-number">1</span>, @@<span class="hljs-keyword">session</span>.sql_auto_is_null=<span class="hljs-number">0</span>, @@<span class="hljs-keyword">session</span>.unique_checks=<span class="hljs-number">1</span>, @@<span class="hljs-keyword">session</span>.autocommit=<span class="hljs-number">1</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.sql_mode=<span class="hljs-number">1075838976</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.auto_increment_increment=<span class="hljs-number">1</span>, @@<span class="hljs-keyword">session</span>.auto_increment_offset=<span class="hljs-number">1</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-comment">/*!\C utf8 */</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.character_set_client=<span class="hljs-number">33</span>,@@<span class="hljs-keyword">session</span>.collation_connection=<span class="hljs-number">33</span>,@@<span class="hljs-keyword">session</span>.collation_server=<span class="hljs-number">8</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.lc_time_names=<span class="hljs-number">0</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> @@<span class="hljs-keyword">session</span>.collation_database=<span class="hljs-keyword">DEFAULT</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> abc<br><span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">211</span><br><span class="hljs-meta">#210403 22:00:31 server id 1  end_log_pos 325 CRC32 0x246bf748 Querythread_id=2exec_time=0error_code=0</span><br>use `abc`<span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">SET</span> <span class="hljs-type">TIMESTAMP</span>=<span class="hljs-number">1617458431</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> xxx(id <span class="hljs-type">int</span>,<span class="hljs-type">name</span> <span class="hljs-type">varchar</span>(<span class="hljs-number">100</span>))<br><span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">325</span><br><span class="hljs-meta">#210403 22:02:10 server id 1  end_log_pos 402 CRC32 0x1539e8d6 Querythread_id=2exec_time=0error_code=0</span><br><span class="hljs-keyword">SET</span> <span class="hljs-type">TIMESTAMP</span>=<span class="hljs-number">1617458530</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">402</span><br><span class="hljs-meta">#210403 22:02:10 server id 1  end_log_pos 516 CRC32 0x84c5a159 Querythread_id=2exec_time=0error_code=0</span><br><span class="hljs-keyword">SET</span> <span class="hljs-type">TIMESTAMP</span>=<span class="hljs-number">1617458530</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> xxx <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;aaa&#x27;</span>),(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;bbb&#x27;</span>)<br><span class="hljs-comment">/*!*/</span>;<br># at <span class="hljs-number">516</span><br><span class="hljs-meta">#210403 22:02:10 server id 1  end_log_pos 547 CRC32 0x484b8992 Xid = 11</span><br><span class="hljs-keyword">COMMIT</span><span class="hljs-comment">/*!*/</span>;<br><span class="hljs-keyword">DELIMITER</span> ;<br># <span class="hljs-keyword">End</span> <span class="hljs-keyword">of</span> <span class="hljs-keyword">log</span> file<br><span class="hljs-keyword">ROLLBACK</span> <span class="hljs-comment">/* added by mysqlbinlog */</span>;<br><span class="hljs-comment">/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/</span>;<br><span class="hljs-comment">/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/</span>;<br></code></pre></td></tr></table></figure><p>还原：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">StartTime：<span class="hljs-number">210403</span> <span class="hljs-number">21</span>:<span class="hljs-number">56</span>:<span class="hljs-number">38</span><br>EndTime：<span class="hljs-number">210403</span> <span class="hljs-number">22</span>:<span class="hljs-number">02</span>:<span class="hljs-number">10</span><br><span class="hljs-meta"># 恢复数据库文件包含上面的时间就可以</span><br>[root<span class="hljs-symbol">@test</span> mysql]<span class="hljs-meta"># cd /var/lib/mysql</span><br>[root<span class="hljs-symbol">@test</span> mysql]<span class="hljs-meta"># mysqlbinlog --start-datetime=<span class="hljs-string">&quot;2021-04-03 21:57:00&quot;</span> --stop-datetime=<span class="hljs-string">&quot;2021-04-03 22:03:00&quot;</span> mysql-bin.000001 | mysql -uroot -p123456</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL-数据库</title>
    <link href="/posts/2293715e/"/>
    <url>/posts/2293715e/</url>
    
    <content type="html"><![CDATA[<h1 id="一、数据库-理论基础"><a href="#一、数据库-理论基础" class="headerlink" title="一、数据库-理论基础"></a>一、数据库-理论基础</h1><h2 id="1-什么是数据库？"><a href="#1-什么是数据库？" class="headerlink" title="1. 什么是数据库？"></a>1. 什么是数据库？</h2><p>​    数据：描述事物的符号记录，可以是数字、文字、图形、声音、语言等，数据有多种形式，它们都可以经过数字化后存入计算机。</p><p>​    数据库：存储数据的仓库，是长期存放在计算机内、有组织、可共享的大量数据的集合。数据库中的数据按照一定数据模型组织、描述和存储，具有较小的冗余度，较高的独立性和易扩展性，并未各种用户共享，总结为以下几点：</p><ul><li>数据结构化</li><li>数据的共享性高，冗余度低，易扩充</li><li>数据独立性高</li><li>数据由 <code>DBMS</code> （<code>DBMS</code> ：数据库管理系统）统一管理和控制（安全性、完整性、并发控制、故障恢复）</li></ul><hr><h2 id="2-数据库与文件系统的区别？"><a href="#2-数据库与文件系统的区别？" class="headerlink" title="2. 数据库与文件系统的区别？"></a>2. 数据库与文件系统的区别？</h2><p>​    <strong>文件系统：</strong>文件系统是操作系统用于明确存储设备（常见的是磁盘）或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统。</p><p>​    <strong>数据库系统：</strong>数据库管理系统（<code>Database Management System</code>）是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，简称 <code>DBMS</code> 。它对数据库进行统一的管理和控制，以保证数据库的安全性和完整性。</p><p><strong>对比区别：</strong></p><ol><li>管理对象不同：文件系统的管理对象是文件，并非直接对数据进行管理，不同的数据结构需要使用不同的文件类型进行保存；而数据库直接对数据进行存储和管理</li><li>存储方式不同：文件系统使用不同的文件将数据分类（<code>.doc</code>、 <code>.mp4</code> 、<code>.jpg</code>）保存在外部存储上；数据库系统使用标准统一的数据类型进行数据保存（字母、数字、符号、时间）</li><li>调用数据的方式不同：文件系统使用不同的软件打开不同类型的文件；数据库系统由 <code>DBMS</code> 统一调用和管理。</li></ol><p><strong>优缺点总结：</strong></p><ul><li>由于 <code>DBMS</code> 的存在，用户不再需要了解数据存储和其他实现的细节，直接通过 <code>DBMS</code> 就能获取数据，为数据的使用带来极大便利。</li><li>具有以数据为单位的共享性，具有数据的并发访问能力。<code>DBMS</code> 保证了再并发访问时数据的一致性。</li><li>低延时访问，典型例子就是线下支付系统的应用，支付规模巨大的时候，数据库系统的表现远远优于文件系统。</li><li>能够较为频繁的对数据进行修改，在需要频繁修改数据的场景下，数据库系统可以依赖 <code>DBMS</code> 来对数据进行操作且对性能的消耗相比文件系统比较小。</li><li>对事务的支持。<code>DBMS</code> 支持事务，即一系列对数据的操作集合要么都完成，要么都不完成。在 <code>DBMS</code> 上对数据的各种操作都是原子级的。</li></ul><hr><h2 id="3-常见的数据库有哪些？"><a href="#3-常见的数据库有哪些？" class="headerlink" title="3. 常见的数据库有哪些？"></a>3. 常见的数据库有哪些？</h2><ul><li><p><strong>关系型数据库</strong></p><p>​    <strong>关系数据库</strong>是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。现实世界中的各种实体以及实体之间的各种联系均用关系模型来表示。简单来说，关系型数据库是由多张能互相链接的二维行列表格组成的数据库。</p><p>​    <strong>关系模型</strong>就是指二维表格模型，因而一个关系型数据库就是由二维表及其之间的联系组成的一个数据组织。当前主流的关系数据库有 <code>Oracle</code> 、<code>DB2</code>、<code>Microsoft SQL Server</code>、<code>Microsoft Access</code>、<code>MySQL</code>、<code>浪潮 K-DB</code> 等。</p><p>​    <strong>实体关系模型</strong>简称 <code>E-R</code> 模型，是一套数据库的设计工具，他运用真实世界中事物与关系的观念，来解释数据库中的抽象的数据架构。实体关系模型利用图形的方式（实体-关系图）来表示数据库的概念设计，有助于设计过程中的构思及沟通讨论。</p></li><li><p><strong>非关系型数据库</strong></p><p>​    <strong>非关系型数据库：</strong>又称为 <code>NoSQL</code> （<code>Not Only SQL</code>），意味不仅仅是 <code>SQL</code> ，是一种轻量、开源、不兼容 <code>SQL</code> 功能的数据库，对 <code>NoSQL</code> 最普遍的定义时 <strong>非关联型的</strong> ，强调 <code>Key-Value</code> 存储和文档数据库的优点，而不是单纯地反对 <strong><code>RDBMS</code></strong> （关系型数据库管理系统）</p></li></ul><hr><h2 id="4-关系型数据库（MySQL）的特性及组成结构介绍"><a href="#4-关系型数据库（MySQL）的特性及组成结构介绍" class="headerlink" title="4. 关系型数据库（MySQL）的特性及组成结构介绍"></a>4. 关系型数据库（<code>MySQL</code>）的特性及组成结构介绍</h2><p><strong>关系型数据库的发展历程</strong></p><ul><li>层次模型</li><li>网状模型</li></ul><p>关系模型（<code>Relation</code>）</p><p>​    关系模型以二维表结构来表示实体与实体之间的联系，关系模型的数据结构是一个 <strong>二维表框架</strong> 组成的集合。每个二维表又可以称为关系。在关系模型中，操作的对象和结果都是二维表。</p><p>​    关系模型是目前最流行的数据库模型。支持关系模型的数据库管理系统称为关系数据库管理系统，<code>Access</code> 就是一种关系数据库管理系统。</p><p><strong>关系式数据库的组成结构和名词解释</strong></p><p>​    数据以表格的形式出现，每行为单独的一条记录，每列为一个单独的字段，许多的记录和字段组成一张表单（<code>table</code>），若干的表单成库（<code>database</code>）</p><ul><li><p><strong>记录（一条数据）</strong></p><p>在数据当中，表当中的行称为记录</p></li><li><p><strong>字段（<code>id name ...</code>）</strong></p><p>在数据库当中，表当中的列称为字段</p></li><li><p><strong><code>MySQL</code> 数据类型</strong></p><p>​    数据类型用于指定特定字段所包含数据的规则，它决定了数据保存在字段里的方式，包括分配给字段的宽度，以及值是否可以是字母、数字、日期和时间等。任何数据或数据的组合都是对应的数据类型，用于存储字母、数字、日期和时间、图像、二进制数据等。数据类型是数据本身的特征，其特性被设置到表里的字段。</p><p><code>MySQL</code> 常见基础数据类型：</p><ul><li>字符串类型（<code>CHAR(0-255固定长度),VARCHAR(0-255可变长度)</code>）</li><li>数值类型（<code>INT</code>（整数型）、<code>FLOAT</code> （浮点型））</li><li>日期和时间类型（<code>DATE</code>（年月日）、<code>TIME</code> （时分秒））</li></ul></li><li><p><strong><code>MySQL</code> 约束类型</strong></p><p>约束是一种限制，它通过对表的行或列的数据做出限制，来确保表的数据的完整性、唯一性。</p><p>​    <strong>主键约束（<code>primary key</code>）：</strong>主键约束相当于唯一约束+非空约束的组合，主键约束列不允许重复，也不允许出现空值。每个表诸多只允许一个主键，建立主键约束可以在列级别创建，也可以再表级别创建。当创建主键的约束时，系统默认会在所在的列和列组合上建立对应的唯一索引。</p><p>​    <strong>外键约束 （<code>foreign key</code>）：</strong>外键约束是保证一个或两个表之间的参照完整性，外键是构建于一个表的两个字段或是两个表的两个字段之间的参照关系。</p><p>​    <strong>唯一约束 （<code>unique</code>）：</strong>唯一约束是指定 <code>table</code> 的列或列组合不能重复，保证数据的唯一性。唯一约束不允许出现重复的值，但是可以为多个 <code>null</code> 。同一个表可以有多个唯一约束，多个列组合的约束。在创建唯一约束时，如果不给唯一约束名称，就默认和列名相同。唯一约束不仅可以在一个表内创建，而且可以同时多表创建组合唯一约束。</p><p>​    <strong>非空约束（<code>not null</code>）与默认值（<code>default</code>）：</strong>非空约束用于确保当前列的值不为空值，非空约束只能在出现在表对象的列上。<code>Null</code> 类型特征：所有的类型的值都可以是 <code>null</code>，包括 <code>int</code> 、<code>float</code> 等数据类型。</p></li><li><p><strong><code>MySQL</code> 索引</strong></p><p>​    索引是一个单独的、物理的数据库结构，它是某个表中一字段或若干字段值的集合。表的存储由两部分组成，一部分用来存放数据，另一部分存放索引页面。通常，索引页面相对于数据页面来说小得多。数据检索花费的大部分开销是磁盘读写，没有索引就需要从磁盘上读表的每一个数据页，如果有索引，则只需查找索引页面就可以了。所以建立合理的索引，就能加速数据的检索过程。</p></li><li><p><strong><code>MySQL</code> 锁</strong></p><p>​    数据库是一个多用户使用的共享资源。当多个用户并发地存取数据时，在数据库就会产生多个事务同时存取统一数据的情况。若对并发操作不加控制就可能会读取和存储不正确的数据，破坏数据库的一致性。</p><p>​    加锁是实现数据库并发控制的一个非常重要的技术。当事务在对某个数据对象进行操作前，先向系统发出请求，对其加锁。加锁后事务就对该数据对象有了一定的控制，在钙食物释放锁之前，其他的事务不能对此数据对象进行更新操作。</p></li><li><p><strong><code>MySQL</code> 的存储引擎</strong></p><p>​    存储引擎就是存储数据，建立索引。更新查询数据等等技术的实现方式。存储引擎是基于表的，而不是基于库的。所以存储引擎也可以被称为表类型。<code>Oracle</code>，<code>SqlServer</code> 等数据库只有一种存储引擎。<code>MySQL</code> 提供了插件式的存储引擎架构。所以 <code>MySQL</code> 存在多种存储引擎，可以根据需要使用相应引擎，或者编写存储引擎。</p><p><code>MYISAM</code>：默认支持引擎、插入和查询速度较快，支持全文索引，不支持事务、行级锁和外键约束等功能</p><p><code>INNODB</code>：支持事务、行级锁和外键约束等功能</p><p><code>MEMORY</code>：工作在内存中，通过散列字段保存数据，速度快、不能永久保存数据</p><p>…</p></li><li><p><strong>事务（<code>Transaction</code>）是并发控制的基本单位</strong></p><p>​    可以把一系列要执行的操作称为事务，而事务管理就是管理这些操作要么完全执行，要么完全不执行。</p><p>​    经典案例：银行转账工作，从一个账号扣款并使另一个账号增款，这两个操作要么都执行，要么都不执行。所以，应该把它们看成一个事务。事务是数据库维护数据一致性的单位，在每个事务结束时，都能保持数据一致性。</p><p><font color=green>注意：<code>MySQL</code> 中并不是所有的数据引擎都支持事务管理的，只有 <code>innodb</code> 支持事务管理</font></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-ELK日志分析</title>
    <link href="/posts/23f21fa0/"/>
    <url>/posts/23f21fa0/</url>
    
    <content type="html"><![CDATA[<h1 id="一、ELK-简介"><a href="#一、ELK-简介" class="headerlink" title="一、ELK 简介"></a>一、<code>ELK</code> 简介</h1><blockquote><p>为什么用到 <code>ELK</code> </p><p>​    一般我们需要进行日志分析场景：直接在日志文件中 <code>grep</code> 、<code>awk</code> 就可以获得自己想要的信息。但在规模较大的场景中，此方法效率低下，面临问题包括日志量太大如何归档、文本搜索太慢怎么办、如果多维度查询。需要集中化的日志管理，所有服务器上的日志收集汇总。场景解决思路是建立集中式日志收集系统，将所有节点上的日志统一收集，管理，访问。</p><p>​    一般大型系统是一个分布式部署的架构，不同的服务模块部署在不同的服务器上，问题出现时，大部分情况需要根据问题暴露的关键信息，定位到具体的服务器和服务模块。构建一套集中式日志系统，可以提高定位问题的效率。</p><p>​    一个完整的集中式日志文件，需要包含以下几个主要特点：</p><ul><li>收集：能够采集多种来源的日志数据</li><li>传输：能够稳定的把日志数据传输到中央系统</li><li>存储：如何存储日志数据</li><li>分析：可以支持 <code>UI</code> 分析</li><li>警告：能够提供错误报告，监控机制 <code>ELK</code> 提供了一整套解决方案，并且都是开源软件，之间互相配合使用，完美衔接，高效的满足了很多场合的应用。目前主流的一种日志系统。</li></ul></blockquote><p>​    <code>ELK</code> 是三个开源软件的缩写，分别表示：<code>Elasticsearch</code> 、<code>Logstash</code> 、<code>Kibana</code> ，他们都是开源软件。新增了一个 <code>FileBeat</code> ，它是一个轻量级的日志收集处理工具（<code>Agent</code>），<code>Filebeat</code> 占用资源少，适合于在各个服务器上搜集日志后传输给 <code>Logstash</code> ，官方也推荐此工具。</p><p>​    <code>Elasticsearch</code> 是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片。索引副本机制，<code>restful</code> 风格接口，多数据源，自动搜索负载等。</p><p>​    <code>Logstash</code> 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为 <code>C/S</code> 架构，<code>Client</code> 端安装在需要搜集日志的主机上，<code>Server</code> 端负载将收到的各节点日志进行过滤、修改等操作在一并发往 <code>Elasticsearch</code> 上去。</p><p>​    <code>Kibana</code> 也是一个开源和免费的工具，<code>Kibana</code> 可以为 <code>Elasticsearch</code> 和 <code>Logstash</code> 提供的日志分析友好的 <code>web</code> 界面，可以帮助汇总、分析和搜索重要数据日志。</p><p>​    <code>Filebeat</code> 隶属于 <code>Beats</code> 。目前 <code>Beats</code> 包含四种工具：</p><ul><li><code>Packetbeat</code> ：搜集网络流量数据</li><li><code>Topbeat</code> ：搜集系统、进程和文件系统级别的 <code>CPU</code> 和内存使用情况等数据</li><li><code>Filebeat</code> ：搜集文件数据</li><li><code>Winlogbeat</code> ：搜集 <code>Windows</code> 事件日志数据</li></ul><p><img src="http://1.15.86.139:8888/images/2021/04/01/ELK1.png" alt="ELK-架构"></p><hr><h1 id="二、ELK-部署"><a href="#二、ELK-部署" class="headerlink" title="二、ELK 部署"></a>二、<code>ELK</code> 部署</h1><p>客户端：<code>Filebeats</code> </p><p>服务端：<code>logstash</code> 、<code>elasticsearch</code> 、<code>kibana</code> </p><p>​    业务请求到达 <code>Nginx-server</code> 机器上的 <code>Nginx</code> ；<code>Nginx</code> 响应请求，并在 <code>access.log</code> 文件中增加访问记录；<code>FileBeat</code> 搜集新增的日志，通过 <code>LogStash</code> 的 <code>5044</code> 端口上传日志；<code>LogStash</code> 将日志信息通过本机的 <code>9200</code> 端口传入到 <code>ElasticSerach</code> ；搜索日志的用户通过浏览器访问 <code>Kibana</code> ，服务器端口是 <code>5601</code> ；<code>Kibana</code> 通过 <code>9200</code> 端口访问 <code>ElasticSerach</code>；</p><p><img src="http://1.15.86.139:8888/images/2021/04/01/ELK2.png" alt="实验架构"></p><hr><p><strong>实验环境：</strong></p><p>​    本次部署的单点 <code>ELK</code> 用了两台机器（<code>CentOS7</code>）</p><p>​    <code>ELK</code> 服务端：<code>10.4.7.103</code></p><p>​    <code>Nginx</code> 客户端：<code>10.4.7.104</code></p><h2 id="1-下载并安装软件包"><a href="#1-下载并安装软件包" class="headerlink" title="1. 下载并安装软件包"></a>1. 下载并安装软件包</h2><blockquote><p>关闭防火墙和 <code>SELinux</code> </p><blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@localhost config]#  vim /etc/security/limits.<span class="hljs-keyword">conf</span><br><span class="hljs-comment">* soft nproc 65536</span><br><span class="hljs-comment">* hard nproc 65536</span><br><span class="hljs-comment">* soft nofile 65536</span><br><span class="hljs-comment">* hard nofile 65536</span><br></code></pre></td></tr></table></figure></blockquote><p>官网：<a href="https://artifacts.elastic.co/">分别下载：<code>elasticsearch</code>、<code>logstash</code>、<code>kibana</code>、<code>filebeat</code></a> 版本必须相同，我下载的是最新版的。</p><p>全部解压到 <code>/usr/local</code> 下</p><p>配置网络 <code>yum</code> 源：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># wget http:<span class="hljs-comment">//mirrors.aliyun.com/repo/Centos-7.repo</span></span><br><span class="hljs-meta"># wget http:<span class="hljs-comment">//mirrors.aliyun.com/repo/epel-7.repo</span></span><br></code></pre></td></tr></table></figure></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">mkdir <span class="hljs-string">/elk</span> &amp;&amp; <span class="hljs-keyword">cd</span> <span class="hljs-string">/elk</span><br></code></pre></td></tr></table></figure><h2 id="2-安装-JDK-环境工具"><a href="#2-安装-JDK-环境工具" class="headerlink" title="2. 安装 JDK 环境工具"></a>2. 安装 <code>JDK</code> 环境工具</h2><blockquote><p><code>yum</code> 安装或者源码安装都可以</p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> -y install java-<span class="hljs-number">1</span>.<span class="hljs-number">11</span>*<br></code></pre></td></tr></table></figure><h2 id="3-配置-elasticsearch"><a href="#3-配置-elasticsearch" class="headerlink" title="3. 配置 elasticsearch"></a>3. 配置 <code>elasticsearch</code></h2><p><strong>1）修改 <code>/etc/sysctl.conf</code> 、<code>/etc/security/limits.conf</code> 文件</strong></p><blockquote><ol><li>报错 <strong><code>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</code></strong>  是因为操作系统 <code>vm.max_map_count</code> 参数设置太小导致的，至于设置多大的数值，我这里就直接参照报错信息的建议直接设置为 <code>262144</code> </li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@test1 ~]</span><span class="hljs-comment"># vi /etc/sysctl.conf</span><br><span class="hljs-attr">vm.max_map_count</span>=<span class="hljs-number">262144</span> <br><span class="hljs-section">[root@test1 ~]</span><span class="hljs-comment"># sysctl -p</span><br></code></pre></td></tr></table></figure><ol start="2"><li>报错 <strong><code>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</code></strong> 是因为操作系统安全检测配置影响的，我们需要切换到<code>root</code> 用户下做如下配置：</li></ol><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@test1 ~]# vi /etc/security/limits.<span class="hljs-keyword">conf</span><br><span class="hljs-comment">* soft nproc  65536</span><br><span class="hljs-comment">* hard nproc  65536</span><br><span class="hljs-comment">* soft nofile 65536</span><br><span class="hljs-comment">* hard nofile 65536</span><br></code></pre></td></tr></table></figure></blockquote><p><strong>2）新建 <code>elasticsearch</code> 用户并启动（用 <code>elasticsearch</code> 普通用户启动）</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@test1</span> ~]<span class="hljs-comment"># useradd elasticsearch</span><br>[root<span class="hljs-variable">@test1</span> ~]<span class="hljs-comment"># chown -Rf elasticsearch.elasticsearch /usr/local/elasticsearch-7.12.0/</span><br>[root<span class="hljs-variable">@test1</span> ~]<span class="hljs-comment"># su - elasticsearch</span><br>[elasticsearch<span class="hljs-variable">@test1</span> elasticsearch<span class="hljs-number">-7.12</span>.0]<span class="hljs-variable">$ </span>cd /usr/local/elasticsearch<span class="hljs-number">-7.12</span>.0<br>[elasticsearch<span class="hljs-variable">@test1</span> elasticsearch<span class="hljs-number">-7.12</span>.0]<span class="hljs-variable">$ </span>./bin/elasticsearch -d<br></code></pre></td></tr></table></figure><p><strong>3）查看进程是否启动成功</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netstat -tnlup</span><br></code></pre></td></tr></table></figure><p><strong>4）若出现错误可以查看日志</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">[elasticsearch@test1 elasticsearch-<span class="hljs-number">7.12</span>.<span class="hljs-number">0</span>]$ cat <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/elasticsearch-7.12.0/</span>logs/elasticsearch.log <br></code></pre></td></tr></table></figure><p><strong>5）测试是否可以正常访问</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[elasticsearch<span class="hljs-variable">@test1</span> elasticsearch<span class="hljs-number">-7.12</span>.0]<span class="hljs-variable">$ </span>curl <span class="hljs-symbol">localhost:</span><span class="hljs-number">9200</span><br>&#123;<br>  <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;test1&quot;</span>,<br>  <span class="hljs-string">&quot;cluster_name&quot;</span> : <span class="hljs-string">&quot;elasticsearch&quot;</span>,<br>  <span class="hljs-string">&quot;cluster_uuid&quot;</span> : <span class="hljs-string">&quot;VDkZKCkTT-Gf3eyOsSptSA&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span> : &#123;<br>    <span class="hljs-string">&quot;number&quot;</span> : <span class="hljs-string">&quot;7.12.0&quot;</span>,<br>    <span class="hljs-string">&quot;build_flavor&quot;</span> : <span class="hljs-string">&quot;default&quot;</span>,<br>    <span class="hljs-string">&quot;build_type&quot;</span> : <span class="hljs-string">&quot;tar&quot;</span>,<br>    <span class="hljs-string">&quot;build_hash&quot;</span> : <span class="hljs-string">&quot;78722783c38caa25a70982b5b042074cde5d3b3a&quot;</span>,<br>    <span class="hljs-string">&quot;build_date&quot;</span> : <span class="hljs-string">&quot;2021-03-18T06:17:15.410153305Z&quot;</span>,<br>    <span class="hljs-string">&quot;build_snapshot&quot;</span> : <span class="hljs-keyword">false</span>,<br>    <span class="hljs-string">&quot;lucene_version&quot;</span> : <span class="hljs-string">&quot;8.8.0&quot;</span>,<br>    <span class="hljs-string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="hljs-string">&quot;6.8.0&quot;</span>,<br>    <span class="hljs-string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="hljs-string">&quot;6.0.0-beta1&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;tagline&quot;</span> : <span class="hljs-string">&quot;You Know, for Search&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="4-配置-logstash"><a href="#4-配置-logstash" class="headerlink" title="4. 配置 logstash"></a>4. 配置 <code>logstash</code></h2><p>​    <code>Logstash</code> 收集 <code>nginx</code> 日志使用 <code>grok</code> 过滤插件解析日志，<code>grok</code> 作为一个 <code>logstash</code> 的过滤插件，支持根据模式解析文本日志行，拆成字段。</p><p><strong>1）<code>logstash</code> 中 <code>grok</code> 的正则匹配</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@test1 ~]</span># cd /usr/local/logstash-<span class="hljs-number">7.12</span>.<span class="hljs-number">0</span><br><span class="hljs-selector-attr">[root@test1 logstash-7.12.0]</span># vi vendor/bundle/jruby/<span class="hljs-number">2.5</span>.<span class="hljs-number">0</span>/gems/logstash-patterns-core-<span class="hljs-number">4.3</span>.<span class="hljs-number">0</span>/patterns/legacy/grok-patterns<br><br># nginx log<br>WZ (<span class="hljs-selector-attr">[^ ]</span>*) <br>NGINXACCESS %&#123;IP:remote_ip&#125; \- \- \<span class="hljs-selector-attr">[%&#123;HTTPDATE:timestamp&#125;\]</span> &quot;%&#123;WORD:method&#125; %&#123;WZ:request&#125; HTTP/%&#123;NUMBER:httpversion&#125;&quot; %&#123;NUMBER:status&#125; %&#123;NUMBER:bytes&#125; %&#123;QS:referer&#125; %&#123;QS:agent&#125; %&#123;QS:xforward&#125;<br></code></pre></td></tr></table></figure><p><strong>2）创建 <code>logstash</code> 配置文件</strong></p><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs puppet">[root@test1 logstash-7.12.0]<span class="hljs-comment"># vi /usr/local/logstash-7.12.0/default.conf</span><br><span class="hljs-keyword">input</span> &#123;<br>    beats &#123;<br>        <span class="hljs-attr">port</span> =&gt; <span class="hljs-string">&quot;5044&quot;</span><br>    &#125;<br>&#125;<br><span class="hljs-comment"># 数据过滤</span><br><span class="hljs-keyword">filter</span> &#123;<br>    grok &#123;<br>        <span class="hljs-attr">match</span> =&gt; &#123;<span class="hljs-string">&quot;message&quot;</span>=&gt;<span class="hljs-string">&quot;%&#123;NGINXACCESS&#125;&quot;</span>&#125;<br>    &#125;<br>    <span class="hljs-keyword">geoip</span> &#123;<br>        <span class="hljs-comment"># nginx 客户端 ip</span><br>        <span class="hljs-attr">source</span> =&gt; <span class="hljs-string">&quot;10.4.7.104&quot;</span><br>    &#125;<br>&#125;<br><span class="hljs-comment"># 输出配置为本机的 9200端口，这是 ElasticSerach 服务的监听端口</span><br><span class="hljs-keyword">output</span> &#123;<br>    elasticsearch &#123;<br>        <span class="hljs-attr">hosts</span> =&gt; [<span class="hljs-string">&quot;127.0.0.1:9200&quot;</span>]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>3）进入到 <code>/usr/local/logstash-7.12.0</code> 目录下，并执行下列命令</strong></p><blockquote><p>启动的比较慢，记得看下日志</p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">后台启动logstash: nohup bin/logstash -f default.conf &amp;</span><br><span class="hljs-section">查看启动日志: tailf nohup.out</span><br><span class="hljs-section">查看端口是否启动: netstat -napt | grep 5044</span><br></code></pre></td></tr></table></figure><h2 id="5-配置-kibana"><a href="#5-配置-kibana" class="headerlink" title="5. 配置 kibana"></a>5. 配置 <code>kibana</code></h2><p><strong>1）打开 <code>kibana</code> 配置文件 <code>/usr/local/kibana-7.12.0-linux-x86_64/config/kibana.yml</code> 找到下面这行并修改</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test1</span> <span class="hljs-keyword">local</span>]<span class="hljs-meta"># vim /usr/local/kibana-7.12.0-linux-x86_64/config/kibana.yml </span><br><span class="hljs-meta">#server.host: <span class="hljs-string">&quot;localhost&quot;</span> 改→ server.host: <span class="hljs-string">&quot;10.4.7.103&quot;</span></span><br><span class="hljs-meta">#这样其他电脑就能用浏览器访问 Kibana的服务了</span><br></code></pre></td></tr></table></figure><p><strong>2）创建用户</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test1</span> <span class="hljs-keyword">local</span>]<span class="hljs-meta"># useradd kibana</span><br>[root<span class="hljs-symbol">@test1</span> <span class="hljs-keyword">local</span>]<span class="hljs-meta"># chown -Rf kibana.kibana kibana-7.12.0-linux-x86_64/</span><br></code></pre></td></tr></table></figure><p><strong>3）进入 <code>Kibana</code> 的目录 <code>cd /usr/local/kibana-7.12.0-linux-x86_64</code></strong></p><blockquote><p><strong>注意和 <code>Elasticsearch</code> 一样不能使用 <code>root</code> 账户启动，具体切换用户可以参照之前 <code>Elasticsearch</code> 的内容</strong></p></blockquote><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[root@test1 local]<span class="hljs-comment"># su - kibana</span><br><span class="hljs-section">启动命令: nohup bin/kibana &amp;</span><br><span class="hljs-section">查看启动日志: tail -f nohup.out</span><br><span class="hljs-section">查看端口是否启动: netstat -tlunp | grep 5601</span><br></code></pre></td></tr></table></figure><p><strong>4）测试</strong></p><blockquote><p>在浏览器访问 <code>10.4.7.103:5601</code>，<code>ELK</code> 部署完成</p></blockquote><p><img src="http://butatree.site:8888/images/2021/04/02/Login.png" alt="Login.png"></p><h2 id="6-Nginx-客户端配置"><a href="#6-Nginx-客户端配置" class="headerlink" title="6. Nginx 客户端配置"></a>6. <code>Nginx</code> 客户端配置</h2><p>**1）<code>yum</code> 安装二进制 <code>Nginx</code> **</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test2</span> ~]<span class="hljs-meta"># yum -y install nginx</span><br>[root<span class="hljs-symbol">@test2</span> ~]<span class="hljs-meta"># systemctl start nginx</span><br>[root<span class="hljs-symbol">@test2</span> ~]<span class="hljs-meta"># systemctl enable nginx</span><br></code></pre></td></tr></table></figure><p><strong>2）下载 <code>filebeat</code> 并解压到 <code>/usr/local/</code></strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@test2</span> elk]<span class="hljs-meta"># tar -xf filebeat-7.12.0-linux-x86_64.tar.gz -C /usr/local/</span><br></code></pre></td></tr></table></figure><p><strong>3）打开文件 <code>/usr/local/filebeatt-7.12.0-linux-x86_64/filebeat.yml</code>，修改以下内容：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ============================== Filebeat inputs ===============================</span><br><span class="hljs-attr">filebeat.inputs:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">log</span><br><br>  <span class="hljs-comment"># Change to true to enable this input configuration.</span><br>  <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span>                   <span class="hljs-comment">#改为true</span><br><br>  <span class="hljs-comment"># Paths that should be crawled and fetched. Glob based paths.</span><br>  <span class="hljs-attr">paths:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">/var/log/nginx/*.log</span>        <span class="hljs-comment">#nginx的日志位置</span><br><br><span class="hljs-comment"># ---------------------------- Elasticsearch Output ----------------------------</span><br><span class="hljs-comment">#output.elasticsearch:            #注释掉</span><br>  <span class="hljs-comment"># Array of hosts to connect to.</span><br>  <span class="hljs-comment">#hosts: [&quot;localhost:9200&quot;]      #注释掉</span><br><br><span class="hljs-comment"># ------------------------------ Logstash Output -------------------------------</span><br><span class="hljs-attr">output.logstash:</span>                  <span class="hljs-comment">#去掉注释</span><br>  <span class="hljs-comment"># The Logstash hosts</span><br>  <span class="hljs-attr">hosts:</span> [<span class="hljs-string">&quot;10.4.7.103:5044&quot;</span>]      <span class="hljs-comment">#服务器地址</span><br></code></pre></td></tr></table></figure><p><strong>4）切换到 <code>/usr/local/filebeat-7.12.0-linux-x86_64</code> 目录下</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">后台启动 filebeat: nohup ./filebeat -e -c filebeat.yml <span class="hljs-meta">&amp;</span><br>查看日志: tailf nohup.out<br></code></pre></td></tr></table></figure><p><strong>5）通过浏览器多访问几次 <code>Nginx</code> 服务，这样能多制造一些访问日志</strong></p><p><strong>6）访问 <code>Kibana</code>: <a href="https://10.4.7.103:5601/">https://10.4.7.103:5601</a> ，点击左上角的 <code>Discover</code> ，就可以看到访问日志已经被 <code>ELK</code> 搜集了，然后按照下列步骤完成设置</strong></p><p><img src="http://butatree.site:8888/images/2021/04/02/success1.png" alt="点击Discover"></p><p><img src="http://butatree.site:8888/images/2021/04/02/success2.png" alt="输入logstash-*,点击 Next step"></p><p><img src="http://butatree.site:8888/images/2021/04/02/success3.png" alt="选择 @Timestamp，再点击 Create index pattern"></p><p><img src="http://butatree.site:8888/images/2021/04/02/success4.png" alt="可以自行创建日志内容查询规则"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ELK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-Tomcat部署</title>
    <link href="/posts/fcfb9ca4/"/>
    <url>/posts/fcfb9ca4/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Tomcat-简介"><a href="#一、Tomcat-简介" class="headerlink" title="一、Tomcat 简介"></a>一、<code>Tomcat</code> 简介</h1><p>​    <code>Tomcat</code> 服务器是一个免费的开放源代码的 <code>Web</code> 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 <code>JSP</code> 程序的首选。<code>Tomcat</code> 是 <code>Apache</code> 服务器的扩展，但运行时它独立运行的，所以当你运行 <code>Tomcat</code> 时，它实际上作为一个与 <code>Apache</code> 独立的进程单独运行的。</p><hr><h1 id="二、Java-Web-环境：Nginx-Jdk-Tomcat-Mysql"><a href="#二、Java-Web-环境：Nginx-Jdk-Tomcat-Mysql" class="headerlink" title="二、Java Web 环境：Nginx+Jdk+Tomcat+Mysql"></a>二、<code>Java Web</code> 环境：<code>Nginx+Jdk+Tomcat+Mysql</code></h1><p><img src="http://1.15.86.139:8888/images/2021/03/30/Java_Web.png"></p><blockquote><ol><li>所有服务部署在同一个主机上，也可分开部署</li><li><code>Nginx</code> 默认开启的是 <code>80</code> 端口，用来接收用户的 <code>web</code> 请求</li><li><code>Tomcat</code> 默认开启的是 <code>8080</code> 端口，用来接收 <code>Nginx</code> 转发过来的 <code>web</code> 请求</li></ol></blockquote><hr><h1 id="三、环境部署流程"><a href="#三、环境部署流程" class="headerlink" title="三、环境部署流程"></a>三、环境部署流程</h1><h2 id="1）安装-JDK"><a href="#1）安装-JDK" class="headerlink" title="1）安装 JDK"></a>1）安装 <code>JDK</code></h2><blockquote><p>首先安装 <code>gcc</code></p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></code></pre></td></tr></table></figure><h3 id="1-将软件包上传、解压、并移至指定位置"><a href="#1-将软件包上传、解压、并移至指定位置" class="headerlink" title="1. 将软件包上传、解压、并移至指定位置"></a>1. 将软件包上传、解压、并移至指定位置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> tar -xf jdk-8u281-linux-x64.tar.gz -C /usr/<span class="hljs-built_in">local</span>/</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/</span><br><span class="hljs-meta">#</span><span class="bash"> mv jdk1.8.0_281 jdk1.8</span><br></code></pre></td></tr></table></figure><h3 id="2-配置-JDK-的环境变量"><a href="#2-配置-JDK-的环境变量" class="headerlink" title="2. 配置 JDK 的环境变量"></a>2. 配置 <code>JDK</code> 的环境变量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># vim /etc/profile #添加以下内容</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">JAVA_HOME</span>=/usr/local/jdk1.8<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">JAVA_BIN</span>=/usr/local/jdk1.8/bin<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$JAVA_HOME/bin<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">CLASSPATH</span>=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br></code></pre></td></tr></table></figure><h3 id="3-查看-Java-是否安装成功"><a href="#3-查看-Java-是否安装成功" class="headerlink" title="3. 查看 Java 是否安装成功"></a>3. 查看 <code>Java</code> 是否安装成功</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># java -version</span><br><span class="hljs-attribute">java</span> version <span class="hljs-string">&quot;1.8.0_281&quot;</span><br><span class="hljs-attribute">Java</span>(TM) SE Runtime Environment (build <span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>_<span class="hljs-number">281</span>-b<span class="hljs-number">09</span>)<br><span class="hljs-attribute">Java</span> HotSpot(TM) <span class="hljs-number">64</span>-Bit Server VM (build <span class="hljs-number">25</span>.<span class="hljs-number">281</span>-b<span class="hljs-number">09</span>, mixed mode)<br></code></pre></td></tr></table></figure><hr><h2 id="2）安装-tomcat"><a href="#2）安装-tomcat" class="headerlink" title="2）安装 tomcat"></a>2）安装 <code>tomcat</code></h2><h3 id="1-将软件包上传、解压、并复制到指定目录下"><a href="#1-将软件包上传、解压、并复制到指定目录下" class="headerlink" title="1. 将软件包上传、解压、并复制到指定目录下"></a>1. 将软件包上传、解压、并复制到指定目录下</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> tar -xf apache-tomcat-9.0.44.tar.gz -C /usr/<span class="hljs-built_in">local</span></span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span></span><br><span class="hljs-meta">#</span><span class="bash"> mv apache-tomcat-9.0.44 tomcat</span><br></code></pre></td></tr></table></figure><h3 id="2-配置-Tomcat-的环境变量"><a href="#2-配置-Tomcat-的环境变量" class="headerlink" title="2. 配置 Tomcat 的环境变量"></a>2. 配置 <code>Tomcat</code> 的环境变量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># vim /etc/profile</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">TOMCAT_HOME</span>=/usr/local/tomcat<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:$TOMCAT_HOME/bin<br><span class="hljs-comment"># source /etc/profile</span><br></code></pre></td></tr></table></figure><h3 id="3-将-tomcat-的启动脚本赋予执行权限"><a href="#3-将-tomcat-的启动脚本赋予执行权限" class="headerlink" title="3. 将 tomcat 的启动脚本赋予执行权限"></a>3. 将 <code>tomcat</code> 的启动脚本赋予执行权限</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>bin<span class="hljs-comment">/*</span><br></code></pre></td></tr></table></figure><h3 id="4-开启-tomcat"><a href="#4-开启-tomcat" class="headerlink" title="4. 开启 tomcat"></a>4. 开启 <code>tomcat</code></h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/tomcat/</span>bin/catalina.sh start<br># netstat -antp<br></code></pre></td></tr></table></figure><blockquote><p>如果 <code>netstat -tlunp</code> 命令，没有发现 <code>8080</code> 端口 。</p><p>查看 <code>tomcat</code> 下的 <code>logs</code> 的 <code>catalina.out</code>：</p><p>报错：<code>Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError:  org/apache/catalina/startup/Bootstrap : Unsupported major.m inor version 52.0</code> </p><p><font color=green>需要更换 <code>JDK</code> 其他的更高级版本</font></p></blockquote><h3 id="4-在浏览器页面进行测试-localhost-8080"><a href="#4-在浏览器页面进行测试-localhost-8080" class="headerlink" title="4. 在浏览器页面进行测试 localhost:8080"></a>4. 在浏览器页面进行测试 <code>localhost:8080</code></h3><hr><h2 id="3）安装-MYSQL-数据库"><a href="#3）安装-MYSQL-数据库" class="headerlink" title="3）安装 MYSQL 数据库"></a>3）安装 <code>MYSQL</code> 数据库</h2><h3 id="1-将软件包上传、解压、并复制到指定目录下-1"><a href="#1-将软件包上传、解压、并复制到指定目录下-1" class="headerlink" title="1. 将软件包上传、解压、并复制到指定目录下"></a>1. 将软件包上传、解压、并复制到指定目录下</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># tar -xf mysql-5.7.32-linux-glibc2.12-x86_64.tar.gz -C /usr/local/</span><br><span class="hljs-meta"># cd /usr/local/</span><br><span class="hljs-meta"># useradd -s /sbin/nologin mysql</span><br><span class="hljs-meta"># mv mysql-5.7.32-linux-glibc2.12-x86_64/ mysql</span><br></code></pre></td></tr></table></figure><blockquote><p> 注意：这里注意了，以前的版本是有一个 <code>my.cnf</code> 文件，这个版本不要这个了。如果存在就把它删除吧，否则会出现各种错误 。</p><p><code># rm -rf /etc/my.cnf </code></p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># useradd -s <span class="hljs-regexp">/sbin/</span>nologin mysql<br></code></pre></td></tr></table></figure><h3 id="2-设置环境变量"><a href="#2-设置环境变量" class="headerlink" title="2. 设置环境变量"></a>2. 设置环境变量</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># vi /etc/profile</span><br>export PATH=<span class="hljs-regexp">/usr/local</span><span class="hljs-regexp">/mysql/bin</span><span class="hljs-symbol">:/usr/local/mysql/lib</span><span class="hljs-symbol">:</span><span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># source /etc/profile</span><br></code></pre></td></tr></table></figure><h3 id="3-安装-mysql"><a href="#3-安装-mysql" class="headerlink" title="3. 安装 mysql"></a>3. 安装 <code>mysql</code></h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"># chown -Rf mysql.mysql /usr/<span class="hljs-keyword">local</span>/mysql/<br># mkdir /usr/<span class="hljs-keyword">local</span>/mysql/data<br># /usr/<span class="hljs-keyword">local</span>/mysql/bin/mysqld <span class="hljs-comment">--initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br><br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">25.607978</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] <span class="hljs-type">TIMESTAMP</span> <span class="hljs-keyword">with</span> implicit <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">value</span> <span class="hljs-keyword">is</span> deprecated. Please use <span class="hljs-comment">--explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">26.112506</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] InnoDB: <span class="hljs-built_in">New</span> <span class="hljs-keyword">log</span> files created, LSN=<span class="hljs-number">45790</span><br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">26.187120</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] InnoDB: Creating <span class="hljs-keyword">foreign key</span> <span class="hljs-keyword">constraint</span> <span class="hljs-keyword">system</span> <span class="hljs-keyword">tables</span>.<br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">26.355710</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] <span class="hljs-keyword">No</span> existing <span class="hljs-type">UUID</span> has been <span class="hljs-built_in">found</span>, so we assume that this <span class="hljs-keyword">is</span> the first <span class="hljs-type">time</span> that this <span class="hljs-keyword">server</span> has been started. Generating a <span class="hljs-built_in">new</span> <span class="hljs-type">UUID</span>: ecb41de0<span class="hljs-number">-916</span>f<span class="hljs-number">-11</span>eb-a7a8<span class="hljs-number">-000</span>c29619b42.<br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">26.357222</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] Gtid <span class="hljs-keyword">table</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> ready <span class="hljs-keyword">to</span> be used. <span class="hljs-keyword">Table</span> <span class="hljs-string">&#x27;mysql.gtid_executed&#x27;</span> cannot be opened.<br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">27.421865</span>Z <span class="hljs-number">0</span> [<span class="hljs-built_in">Warning</span>] CA certificate ca.pem <span class="hljs-keyword">is</span> self signed.<br><span class="hljs-number">2021</span><span class="hljs-number">-03</span><span class="hljs-number">-30</span>T15:<span class="hljs-number">52</span>:<span class="hljs-number">27.759175</span>Z <span class="hljs-number">1</span> [Note] A <span class="hljs-keyword">temporary</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">generated</span> <span class="hljs-keyword">for</span> root@localhost: uiRBnkf;*<span class="hljs-number">3</span>fI             #← root密码<br></code></pre></td></tr></table></figure><blockquote><p>启动 <code>Mysql</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/mysql</span><br><span class="hljs-meta">#</span><span class="bash"> bin/mysqld_safe --user=mysql &amp;</span><br></code></pre></td></tr></table></figure></blockquote><h3 id="4-登录并修改密码"><a href="#4-登录并修改密码" class="headerlink" title="4. 登录并修改密码"></a>4. 登录并修改密码</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#  /usr/local/mysql/bin/mysql -uroot -p uiRBnkf;*3fI</span><br>mysql&gt; SET PASSWORD = PASSWORD(<span class="hljs-string">&#x27;123456&#x27;</span>);<br>mysql&gt; <span class="hljs-keyword">exit</span>;<br></code></pre></td></tr></table></figure><blockquote><p>关闭 <code>Mysql</code> 服务</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@test mysql]# <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin/mysqladmin -u root -p shutdown <br>Enter password:                                         # 回车关闭数据库<br><span class="hljs-number">2021</span>-<span class="hljs-number">03</span>-<span class="hljs-number">30</span>T15:<span class="hljs-number">56</span>:<span class="hljs-number">27.183626</span>Z mysqld_safe mysqld <span class="hljs-keyword">from</span> pid <span class="hljs-keyword">file</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>data/test.pid ended<br>[<span class="hljs-number">1</span>]+  完成                  bin/mysqld_safe --user=mysql<br></code></pre></td></tr></table></figure><p>开机自启</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>support-files<span class="hljs-regexp">/mysql.server /</span>etc<span class="hljs-regexp">/init.d/my</span>sql<br># chkconfig --add mysql<br># chkconfig mysql on<br></code></pre></td></tr></table></figure></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 手动启动：以root身份执行：  </span><br>shell&gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/</span>bin/mysqld_safe --user=mysql &amp; <br><span class="hljs-comment"># mysql -u root -p</span><br><span class="hljs-comment"># 赋予root用户所有权限，远程登录密码是123456</span><br>mysql&gt; grant all privileges on *.* to <span class="hljs-string">&#x27;root&#x27;</span> @<span class="hljs-string">&#x27;%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-comment">#开放3306端口并重启防火墙 </span><br></code></pre></td></tr></table></figure><h3 id="5-防火墙放行"><a href="#5-防火墙放行" class="headerlink" title="5. 防火墙放行"></a>5. 防火墙放行</h3><blockquote><p>关闭防火墙就跳过此项</p></blockquote><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># firewall-cmd --permanent --add-port=3306/tcp  </span><br><span class="hljs-meta"># firewall-cmd --reload</span><br><span class="hljs-meta"># /etc/init.d/mysql start</span><br></code></pre></td></tr></table></figure><blockquote><p>测试</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"># systemctl start mysql.service <br># systemctl enable mysql.service<br># systemctl status mysql.service <br>● mysql.service - LSB: start and stop MySQL<br><span class="hljs-code">   Loaded: loaded (/etc/rc.d/init.d/mysql; bad; vendor preset: disabled)</span><br><span class="hljs-code">   Active: active (exited) since 三 2021-03-31 15:01:54 CST; 2min 40s ago</span><br><span class="hljs-code">     Docs: man:systemd-sysv-generator(8)</span><br><span class="hljs-code">  Process: 23816 ExecStart=/etc/rc.d/init.d/mysql start (code=exited, status=0/SUCCESS)</span><br><br>3月 31 15:01:54 test systemd[1]: Starting LSB: start and stop MySQL...<br>3月 31 15:01:54 test mysql[23816]: Starting MySQL SUCCESS!<br>3月 31 15:01:54 test systemd[1]: Started LSB: start and stop MySQL.<br>3月 31 15:01:54 test mysql[23816]: 2021-03-31T07:01:54.221149Z mysqld_safe A mysqld process already exists<br><br># mysql -u root -p <br>Enter password: <br>ERROR 1049 (42000): Unknown database <span class="hljs-emphasis">&#x27;123456&#x27;</span><br>[root@test bin]# mysql -u root -p <br>Enter password: <br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 4<br>Server version: 5.7.32 MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type <span class="hljs-emphasis">&#x27;help;&#x27;</span> or <span class="hljs-emphasis">&#x27;\h&#x27;</span> for help. Type <span class="hljs-emphasis">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>mysql&gt; show databases;<br><span class="hljs-code">+--------------------+</span><br>| Database           |<br><span class="hljs-code">+--------------------+</span><br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br><span class="hljs-code">+--------------------+</span><br>4 rows in set (0.00 sec)<br>...<br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="4）安装-Nginx"><a href="#4）安装-Nginx" class="headerlink" title="4）安装 Nginx"></a>4）安装 <code>Nginx</code></h2><h3 id="1-将软件包上传、解压、并复制到指定目录下-2"><a href="#1-将软件包上传、解压、并复制到指定目录下-2" class="headerlink" title="1. 将软件包上传、解压、并复制到指定目录下"></a>1. 将软件包上传、解压、并复制到指定目录下</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> tar -xf nginx-1.19.8.tar.gz -C /usr/<span class="hljs-built_in">local</span>/</span><br><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-comment"># mv nginx-1.19.8/ nginx</span></span><br></code></pre></td></tr></table></figure><h3 id="2-安装-nginx-依赖包"><a href="#2-安装-nginx-依赖包" class="headerlink" title="2. 安装 nginx 依赖包"></a>2. 安装 <code>nginx</code> 依赖包</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></code></pre></td></tr></table></figure><h3 id="3-添加用户"><a href="#3-添加用户" class="headerlink" title="3. 添加用户"></a>3. 添加用户</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># useradd -r -s <span class="hljs-regexp">/sbin/</span>nologin nginx<br></code></pre></td></tr></table></figure><h3 id="4-编译并安装"><a href="#4-编译并安装" class="headerlink" title="4. 编译并安装"></a>4. 编译并安装</h3><blockquote><p>每次执行 <code>./configure</code> <code>make</code> <code>make install</code> 时都要 <code>echo $?</code> 防止忽略报错</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">  <span class="hljs-built_in">cd</span> nginx/</span><br><span class="hljs-meta">#</span><span class="bash">  ./configure --prefix=/usr/<span class="hljs-built_in">local</span>/nginx --conf-path=/usr/<span class="hljs-built_in">local</span>/nginx/nginx.conf --user=nginx --group=nginx &amp;&amp; <span class="hljs-built_in">echo</span> $?</span><br><span class="hljs-meta">#</span><span class="bash"> make &amp;&amp; <span class="hljs-built_in">echo</span> $?</span><br><span class="hljs-meta">#</span><span class="bash"> make install &amp;&amp; <span class="hljs-built_in">echo</span> $?</span><br></code></pre></td></tr></table></figure><h3 id="5-配置环境变量"><a href="#5-配置环境变量" class="headerlink" title="5. 配置环境变量"></a>5. 配置环境变量</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># vi /etc/profile</span><br>export PATH=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><h3 id="6-开启-nginx-并自启"><a href="#6-开启-nginx-并自启" class="headerlink" title="6. 开启 nginx 并自启"></a>6. 开启 <code>nginx</code> 并自启</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># cp sbin<span class="hljs-regexp">/nginx /</span>etc<span class="hljs-regexp">/init.d/</span><br># vi <span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service # 添加以下内容<br>[Unit]<br><span class="hljs-keyword">Description</span>=nginx service<br>After=network.target<br><br>[Service]<br>Type=forking<br>ExecStart=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx<br>ExecReload=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx -s reload<br>ExecStop=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx -s quit<br>PrivateTmp=<span class="hljs-keyword">true</span><br><br>[Install]<br>WantedBy=multi-user.target<br><br></code></pre></td></tr></table></figure><blockquote><p>[ <code>Unit</code> ] : 服务说明</p><ul><li><code>Description</code> : 描述服务</li><li><code>After</code> : 描述服务类别</li></ul><p>[ <code>Service</code> ] : 服务运行参数的设置</p><ul><li><code>Type=forking</code> : 是后台运行的形式</li><li><code>ExecStart</code> : 为服务的具体运行命令</li><li><code>ExecReload</code> :  为重启命令</li><li><code>ExecStop</code> : 为停止命令</li><li><code>PrivateTmp=True</code>表示给服务分配独立的临时空间</li></ul><p><font color=red>注意</font>：[ <code>Service</code> ]的启动、重启、停止命令全部要求使用绝对路径</p><p>[ <code>Install</code> ]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为 <code>3</code></p></blockquote><h3 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@test ~]<span class="hljs-comment"># systemctl enable nginx.service </span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/nginx.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service.<br>[root@test ~]<span class="hljs-comment"># systemctl start nginx.service </span><br>[root@test ~]<span class="hljs-comment"># systemctl status nginx.service </span><br>● nginx.service - nginx service<br>   Loaded: loaded (<span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/nginx.service; enabled; vendor preset: disabled)<br>   Active: active (running) since 三 <span class="hljs-number">2021</span>-<span class="hljs-number">03</span>-<span class="hljs-number">31</span> <span class="hljs-number">15</span>:<span class="hljs-number">47</span>:<span class="hljs-number">14</span> CST; <span class="hljs-number">10</span>s ago<br>  Process: <span class="hljs-number">1732</span> ExecStart=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin<span class="hljs-regexp">/nginx (code=exited, status=0/</span>SUCCESS)<br> Main PID: <span class="hljs-number">1733</span> (nginx)<br>   CGroup: <span class="hljs-regexp">/system.slice/</span>nginx.service<br>           ├─<span class="hljs-number">1733</span> nginx: master process <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx<br>           └─<span class="hljs-number">1734</span> nginx: worker process<br><br><span class="hljs-number">3</span>月 <span class="hljs-number">31</span> <span class="hljs-number">15</span>:<span class="hljs-number">47</span>:<span class="hljs-number">14</span> test systemd[<span class="hljs-number">1</span>]: Starting nginx service...<br><span class="hljs-number">3</span>月 <span class="hljs-number">31</span> <span class="hljs-number">15</span>:<span class="hljs-number">47</span>:<span class="hljs-number">14</span> test systemd[<span class="hljs-number">1</span>]: Started nginx service.<br></code></pre></td></tr></table></figure><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> systemctl start nginx               <span class="hljs-comment"># 启动服务</span></span><br><span class="hljs-meta">#</span><span class="bash"> systemctl stop nginx                <span class="hljs-comment"># 停止服务</span></span><br><span class="hljs-meta">#</span><span class="bash"> systemctl restart nginx             <span class="hljs-comment"># 重启服务</span></span><br><span class="hljs-meta">#</span><span class="bash"> systemctl status nginx              <span class="hljs-comment"># 查看服务当前状态</span></span><br><span class="hljs-meta">#</span><span class="bash"> systemctl list-units --<span class="hljs-built_in">type</span>=service <span class="hljs-comment"># 查看所有已启动的服务</span></span><br></code></pre></td></tr></table></figure></blockquote><h3 id="8-修改-nginx-配置文件"><a href="#8-修改-nginx-配置文件" class="headerlink" title="8. 修改 nginx 配置文件"></a>8. 修改 <code>nginx</code> 配置文件</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">user</span>  nginx;<br><br><span class="hljs-attribute">upstream</span> tomcat &#123; <span class="hljs-comment"># 添加负载调度</span><br>    <span class="hljs-attribute">server</span> <span class="hljs-number">10.4.7.103:8080</span>;<br>&#125;<br> <span class="hljs-attribute">location</span> / &#123; <span class="hljs-comment"># 添加反向代理</span><br>            <span class="hljs-attribute">proxy_pass</span> http://tomcat;<br>            <span class="hljs-attribute">proxy_set_header</span> Host $host;<br>        &#125;<br></code></pre></td></tr></table></figure><h3 id="9-重载服务"><a href="#9-重载服务" class="headerlink" title="9. 重载服务"></a>9. 重载服务</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># nginx -t reload</span><br></code></pre></td></tr></table></figure><p><img src="http://1.15.86.139:8888/images/2021/03/31/Tomcat.png" alt="Tomcat.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-网络服务RSYNC(贰)</title>
    <link href="/posts/14c6ce5b/"/>
    <url>/posts/14c6ce5b/</url>
    
    <content type="html"><![CDATA[<h1 id="一、配置-rsync-inotify-实时同步"><a href="#一、配置-rsync-inotify-实时同步" class="headerlink" title="一、配置 rsync+inotify 实时同步"></a>一、配置 <code>rsync+inotify</code> 实时同步</h1><p><strong>定期同步的特点：</strong></p><p>​    执行备份的时间固定，延期明显，实时性差。</p><p>​    当同步源长期不变化时，密集的定期任务是不必要的（浪费资源）。</p><p><strong>实时同步的优点：</strong></p><p>​    一旦同步源出现变化，立即启动备份，实时性好。</p><p>​    只要同步源无变化，则不执行备份，节省资源。</p><h3 id="inotify-简介"><a href="#inotify-简介" class="headerlink" title="inotify 简介"></a><code>inotify</code> 简介</h3><p>​    <code>inotify</code> 是一个 <code>Linux</code> 内核特性，它监控文件系统，并且及时向专门的应用程序发出相关的事件警告， 比如删除、读、写和卸载操作等。要使用 <code>inotify</code> ，必须具备一台带有 <code>2.6.13</code> 版本的内核操作系统。</p><p>​    <code>inotify</code> 两个监控命令：</p><p>​            <code>inotifywait</code>：用于持续监控，实时输出结果（常用）</p><p>​            <code>inotifywatch</code>：用于短期监控，任务完成后再出结果</p><p><strong><code>inotify</code> 部署</strong></p><p>查看当前系统是否支持 <code>inotify</code></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@a filesrc]<span class="hljs-comment"># ls -l /proc/sys/fs/inotify/</span><br>total 0<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:46 max_queued_events<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:46 max_user_instances<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:46 max_user_watches<br></code></pre></td></tr></table></figure><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install gcc* gcc-c++</span><br><span class="hljs-meta"># tar -xf inotify-tools-3.14.tar.gz</span><br><span class="hljs-meta"># cd inotify-tools-3.14</span><br><span class="hljs-meta"># ./configure &amp;&amp; make &amp;&amp; make install</span><br></code></pre></td></tr></table></figure><p><code>inotifywait</code> 命令格式</p><p>格式：<code>inotifywait -mrq -e 监控动作1，监控动作2 /监控目录 &amp;</code></p><p>示例：<code>inotifywait -mrq -e create,delete /filesrc &amp;</code></p><p>​            <font color=green><code>-m</code>：始终保持事件监听状态<br>            <code>-r</code>：递归查询目录<br>            <code>-q</code>：只打印监控事件的信息</font></p><p>监控动作：<code>modify</code> （内容），<code>create, attrib</code> （权限），<code>move,delete</code> </p><p><strong>利用 <code>rsync+inotifywait</code> 结合脚本实现单向实时同步</strong></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment"># vim src.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">a</span>=<span class="hljs-string">&quot;inotifywait -mrq -e create,delete,modify /filesrc&quot;</span><br>b=<span class="hljs-string">&quot;/usr/local/bin/unison -batch /filesrc/ ssh://10.4.7.101//filedst&quot;</span><br><span class="hljs-comment"># -batch:批处理</span><br>$<span class="hljs-keyword">a</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> <span class="hljs-built_in">directory</span> event <span class="hljs-built_in">file</span><br><span class="hljs-built_in">do</span><br>     $b<br>done<br></code></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sh </span>src.<span class="hljs-keyword">sh </span>&amp;<br></code></pre></td></tr></table></figure><blockquote><p>注意：用户登录时要求免密验证。可以看上一篇 <code>rsync</code> 文章。<code>ssh-keygen</code>、<code>ssh-copy-id</code></p></blockquote><p><strong>实验结果验证</strong></p><p>在服务器端创建，删除文件，查看备份端是否正常</p><p>拓展：调整 <code>intoify</code> 监控的文件数量</p><table><thead><tr><th>调整 <code>inotify</code> 内核参数（<code>/etc/sysctl.conf</code>）</th><th></th></tr></thead><tbody><tr><td><code>mak_queue_events</code></td><td>监控队列大小</td></tr><tr><td><code>mak_user_instances</code></td><td>最多监控实例数</td></tr><tr><td><code>max_user_watches</code></td><td>每个实例最多监控文件数</td></tr></tbody></table><h1 id="二、配置-unison-inotify-实现双向实时同步"><a href="#二、配置-unison-inotify-实现双向实时同步" class="headerlink" title="二、配置 unison+inotify 实现双向实时同步"></a>二、配置 <code>unison+inotify</code> 实现双向实时同步</h1><p>​    <code>rsync</code> 在单向同步上支持的非常好，且效率很高，但是在双向同步支持较差；<code>unison</code> 则是双向同步的优秀工具，但其缺点是同步效率较低。</p><blockquote><p><code>unison</code> 各版本下载地址 <a href="http://www.seas.upenn.edu/~bcpierce/unison//download.html">http://www.seas.upenn.edu/~bcpierce/unison//download.html</a></p><p><code>unison</code> 编译器下载地址 <a href="http://caml.inria.fr/pub/distrib">http://caml.inria.fr/pub/distrib</a> (版本至少3.0.7)</p></blockquote><h2 id="1-环境要求"><a href="#1-环境要求" class="headerlink" title="1. 环境要求"></a>1. 环境要求</h2><ul><li>准备好同步所需的两个目录</li><li>如若用 <code>root</code> 来实现登录的话，生成密钥对，以便于免密验证</li><li>准备好 <code>inotify</code> 和 <code>unison</code> 的软件包</li></ul><h2 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2. 安装步骤"></a>2. 安装步骤</h2><ol><li><p>安装 <code>inotify</code></p><blockquote><p>方式一：<a class="btn" href="http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz"  title="github.com" target="_blank">inotify-tools-3.14.tar.gz</a></p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> ~]<span class="hljs-meta"># cd /filesrc</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># tar -xf inotify-tools-3.14.tar.gz</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># cd inotify-tools-3.14/</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># ./configure</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make install</span><br></code></pre></td></tr></table></figure></li><li><p>安装 <code>Objective Caml compiler</code> （因二进制程序版本都太老，选择编译安装）</p><blockquote><p>方式一：<a class="btn" href="http://caml.inria.fr/pub/distrib/ocaml-3.12/ocaml-3.12.0.tar.gz"  title="caml.inria.fr" target="_blank">ocaml-3.12.0.tar.gz</a> </p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> ~]<span class="hljs-meta"># cd /filesrc</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># tar -xf ocaml-4.06.1.tar.gz</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># cd ocaml-4.06.1/</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># ./configure</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make world opt</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make install</span><br></code></pre></td></tr></table></figure></li><li><p>编译安装 <code>Unison</code></p><blockquote><p>方式一：<a class="btn" href="http://www.seas.upenn.edu/~bcpierce/unison//download/releases/stable/unison-2.40.102.tar.gz"  title="www.seas.upenn.edu" target="_blank">unison-2.40.102.tar.gz</a> </p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> ~]<span class="hljs-meta"># cd /filesrc</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># tar -xf unison-2.51.2.tar.gz</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># cd unison-2.51.2/</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make UISTYLE=text THREADS=true STATIC=true #已经存在Makefile文件，不需要./configure</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># cp unison /usr/local/bin/ #把生成的脚本拷贝出来</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># make install</span><br>[root<span class="hljs-symbol">@a</span> filesrc]<span class="hljs-meta"># unison -version</span><br>unison version <span class="hljs-number">2.51</span><span class="hljs-number">.2</span> (ocaml <span class="hljs-number">4.06</span><span class="hljs-number">.1</span>)<br><span class="hljs-meta"># 有版本信息，则安装成功</span><br></code></pre></td></tr></table></figure><p><font color=red>同样的操作再另一台机器也做一遍</font></p></li></ol><h2 id="3-配置脚本"><a href="#3-配置脚本" class="headerlink" title="3. 配置脚本"></a>3. 配置脚本</h2><blockquote><p><font color=red><em>注：双向自动同步，监控目录和数据同步时，源目录不能使用 \</em>通配符传输，否则会变成死循环。*</font></p></blockquote><p><strong><code>filesrc</code> 端</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@a ~]<span class="hljs-comment"># vi unison_inotify_src.sh </span><br><span class="hljs-meta">#!/bin/bash</span><br><br>a=<span class="hljs-string">&quot;inotifywait -mrq -e create,delete,modify /filesrc&quot;</span><br>b=<span class="hljs-string">&quot;/usr/local/bin/unison -batch /filesrc/ ssh://10.4.7.101//filedst&quot;</span><br><span class="hljs-comment"># -batch:批处理</span><br><span class="hljs-variable">$a</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> directory event file<br><span class="hljs-keyword">do</span><br>     <span class="hljs-variable">$b</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p><strong><code>filedst</code> 端</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@b ~]<span class="hljs-comment"># vi unison_inotify_dst.sh </span><br><span class="hljs-meta">#!/bin/bash</span><br>a=<span class="hljs-string">&quot;inotifywait -mrq -e create,delete,modify /filedst&quot;</span><br>b=<span class="hljs-string">&quot;/usr/local/bin/unison -batch /filedst/ ssh://10.4.7.100//filesrc/&quot;</span><br><span class="hljs-variable">$a</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> directory event file<br><span class="hljs-keyword">do</span><br>     <span class="hljs-variable">$b</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h2><p>将两个脚本放入后台执行：<code>bash src.sh &amp;</code></p><p>分别在两个主机上创建文件查看是否可以实现双向实时同步（可能会有延迟）</p><blockquote><p>在 <code>SRC</code> 创建了 <code>a</code> 文件后又删除了 <code>a</code> 文件。<code>DST</code> 也同步进行。</p></blockquote><p><img src="http://butatree.site:8888/images/2021/03/29/rsync_inotify.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RSYNC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-网络服务RSYNC(壹)</title>
    <link href="/posts/2e07183a/"/>
    <url>/posts/2e07183a/</url>
    
    <content type="html"><![CDATA[<h1 id="一、RSYNC-概述"><a href="#一、RSYNC-概述" class="headerlink" title="一、RSYNC 概述"></a>一、<code>RSYNC</code> 概述</h1><p>​    <code>rsync</code> 是类 <code>unix</code> 系统下的数据镜像备份工具。一款支持快速完全备份和增量备份的工具，支持本地复制，远程同步等，类似于 <code>scp</code> 命令；<code>rsync</code> 命令在同步文件之前要先登录目标主机进行用户身份认证，认证过后才能进行数据同步，身份认证方式取决于所使用的协议类型，<code>rsync</code> 一般使用两种协议进行数据同步：<code>ssh</code> 协议和 <code>rsync</code> 协议。</p><hr><h1 id="二、RSYNC-特性"><a href="#二、RSYNC-特性" class="headerlink" title="二、RSYNC 特性"></a>二、<code>RSYNC</code> 特性</h1><ul><li>能更新整个目录树和文件系统</li><li>有选择性的保留符号链接、硬链接、文件属性、权限、设备以及时间等</li><li>对于安装来说，无任何特殊权限要求</li><li>对于多个文件来说，文件传输效率高</li><li>能用 <code>ssh</code> 或自定义端口作为传输入口端口</li></ul><hr><h1 id="三、RSYNC-工作原理"><a href="#三、RSYNC-工作原理" class="headerlink" title="三、RSYNC 工作原理"></a>三、<code>RSYNC</code> 工作原理</h1><p>​    既然涉及到数据同步，必要的两个概念是：源地址（文件），目标地址（文件），以及以哪一方为基准，例如，想让目标主机上的文件和本地文件保持同步，则是以本地文件为同步基准，将本地文件作为源文件推送到目标主机上。</p><p>​    <code>rsync</code> 在进行数据同步之前需要先进行用户身份验证，验证方式取决于使用的连接方式：</p><p>​    <strong><code>ssh</code> 登录验证模式：</strong>使用 <code>ssh</code> 协议作为基础进行用户身份认证，然后进行数据同步。</p><p>​    <strong><code>rsync</code> 登录验证模式：</strong>使用 <code>rsync</code> 协议进行用户身份认证（非系统用户），然后进行数据同步。</p><p><strong>数据同步方式：</strong>推送（上传）、拉取（下载）s</p><p><img src="http://butatree.site:8888/images/2021/03/29/RSYNC1.png"></p><hr><h1 id="四、RSYNC-实验演示"><a href="#四、RSYNC-实验演示" class="headerlink" title="四、RSYNC 实验演示"></a>四、<code>RSYNC</code> 实验演示</h1><p>​    我们一般使用 <code>rsync</code> 来进行单向数据同步，因此我们需要确定一个基准，比如：两台服务器，一台 <code>NFS</code> 作为网站数据服务器（基准服务器），另外一台专门做 <code>rsync</code> 数据备份服务器，我们以此我基础开始我们的实验。</p><hr><h2 id="4-1-ssh-协议数据同步：将-NFS-服务器数据同步备份到-RSYNC-服务器"><a href="#4-1-ssh-协议数据同步：将-NFS-服务器数据同步备份到-RSYNC-服务器" class="headerlink" title="4.1 ssh 协议数据同步：将 NFS 服务器数据同步备份到 RSYNC 服务器"></a>4.1 <code>ssh</code> 协议数据同步：将 <code>NFS</code> 服务器数据同步备份到 <code>RSYNC</code> 服务器</h2><p>实验环境：一台 <code>NFS</code> 服务器，一台 <code>rsync</code> 服务器</p><p>在两台服务器上分别创建目录（<code>/filesrc</code>、<code>/filedst</code>）</p><p><strong>下行同步（下载）</strong></p><p>格式：<code>rsync -avz</code> 服务器地址:/服务器目录/* /本地目录</p><p>示例：<code>rsync -avz root@10.4.7.101:/filesrc/* /filedst</code></p><p>​            <code>-a</code> ：归档模式，递归并保存对象属性</p><p>​            <code>-v</code> ：显示同步过程</p><p>​            <code>-z</code> ：在传输文件时进行压缩</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs less">a:<span class="hljs-attribute">SRC</span><br><span class="hljs-attribute">b</span>:DST<br>[root<span class="hljs-variable">@a</span> ~]# yum -y install rsync<br>[root<span class="hljs-variable">@b</span> ~]# yum -y install rsync<br><br>[root<span class="hljs-variable">@a</span> ~]# touch &#123;<span class="hljs-number">1</span>..<span class="hljs-number">4</span>&#125;<span class="hljs-selector-class">.txt</span><br><br><span class="hljs-selector-attr">[root@b ~]</span># <span class="hljs-selector-tag">rsync</span> <span class="hljs-selector-tag">-avz</span> <span class="hljs-selector-tag">root</span>@<span class="hljs-selector-tag">10</span><span class="hljs-selector-class">.4</span><span class="hljs-selector-class">.7</span><span class="hljs-selector-class">.100</span>:/<span class="hljs-selector-tag">filesrc</span><span class="hljs-comment">/* /filedst # 下载 10.4.7.100/filesrc下的文件至本机/filedst</span><br><span class="hljs-comment">\S</span><br><span class="hljs-comment">Kernel \r on an \m</span><br><span class="hljs-comment">root@10.4.7.100&#x27;s password: </span><br><span class="hljs-comment">receiving incremental file list</span><br><span class="hljs-comment">1.txt</span><br><span class="hljs-comment">2.txt</span><br><span class="hljs-comment">3.txt</span><br><span class="hljs-comment">4.txt</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">sent 100 bytes  received 240 bytes  226.67 bytes/sec</span><br><span class="hljs-comment">total size is 0  speedup is 0.00</span><br></code></pre></td></tr></table></figure><p><strong>上行同步（上传）</strong></p><p>格式：<code>rsync -avz</code>  /本地目录/* 服务器地址:/服务器目录</p><p>示例：<code>rsync -avz /filedst/* root@10.4.7.101:/filesrc</code></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@b filedst]<span class="hljs-comment"># touch put.txt</span><br>[root@b filedst]<span class="hljs-comment"># rsync -avz /filedst/put.txt root@10.4.7.100:/filesrc #上传本机/filedst下的put.txt至10.4.7.100/filesrc</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br>root@<span class="hljs-number">10.4</span>.<span class="hljs-number">7.100</span><span class="hljs-string">&#x27;s password: </span><br><span class="hljs-string">sending incremental file list</span><br><span class="hljs-string">put.txt</span><br><span class="hljs-string"></span><br><span class="hljs-string">sent 86 bytes  received 35 bytes  80.67 bytes/sec</span><br><span class="hljs-string">total size is 0  speedup is 0.00</span><br></code></pre></td></tr></table></figure><p><font color=red>注意：使用 <code>root</code> 用户进行实验可以，但生产环境中尽量使用单独创建的普通用户，减少权限溢出</font></p><p>创建用来做数据同步的用户，并给予用户对目录的相应权限，一般使用 <code>ACL</code> 设置权限</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># useradd zhangsan</span><br><span class="hljs-meta"># passwd zhangsan</span><br><span class="hljs-meta"># setfcal -m u:zhangsan:rwx /filesrc</span><br></code></pre></td></tr></table></figure><p><font color=green>拓展：若要实现免密 数据同步，只需要做好 <code>ssh</code> 密钥对登录即可</font></p><blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment"># a → b </span><br>[root@a filesrc]<span class="hljs-comment"># ssh-keygen -t rsa -b 2048</span><br>Generating public/private rsa key pair.<br>Enter <span class="hljs-built_in">file</span> <span class="hljs-keyword">in</span> which <span class="hljs-keyword">to</span> save <span class="hljs-keyword">the</span> key (/root/.ssh/id_rsa): <br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): <br>Enter same passphrase again: <br>Your identification has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.<br>Your public key has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.pub.<br>The key fingerprint <span class="hljs-keyword">is</span>:<br>SHA256:Lis5ivej2BYEx5VdwZjq9stqQLAdb+<span class="hljs-number">0</span>D+DCRalEI0FU root@a.extmail.org<br>The key&#x27;s randomart image <span class="hljs-keyword">is</span>:<br>+<span class="hljs-comment">---[RSA 2048]----+</span><br>|=oo=o+E=o.       |<br>|ooB . + .        |<br>| B.= o           |<br>|o.B = .          |<br>|.o * o  S        |<br>|  o + o.         |<br>|   + o...        |<br>| +o *..o         |<br>|oo+=o=+.         |<br>+<span class="hljs-comment">----[SHA256]-----+</span><br>[root@a filesrc]<span class="hljs-comment"># </span><br>[root@a filesrc]<span class="hljs-comment"># ssh-copy-id root@10.4.7.101</span><br>/usr/bin/ssh-<span class="hljs-keyword">copy</span>-<span class="hljs-built_in">id</span>: INFO: Source <span class="hljs-keyword">of</span> key(s) <span class="hljs-keyword">to</span> be installed: <span class="hljs-string">&quot;/root/.ssh/id_rsa.pub&quot;</span><br>/usr/bin/ssh-<span class="hljs-keyword">copy</span>-<span class="hljs-built_in">id</span>: INFO: attempting <span class="hljs-keyword">to</span> <span class="hljs-built_in">log</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> new key(s), <span class="hljs-keyword">to</span> filter out any <span class="hljs-keyword">that</span> are already installed<br>/usr/bin/ssh-<span class="hljs-keyword">copy</span>-<span class="hljs-built_in">id</span>: INFO: <span class="hljs-number">1</span> key(s) remain <span class="hljs-keyword">to</span> be installed <span class="hljs-comment">-- if you are prompted now it is to install the new keys</span><br>\S<br>Kernel \r <span class="hljs-keyword">on</span> an \m<br>root@<span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.101</span>&#x27;s password: <br><br>Number <span class="hljs-keyword">of</span> key(s) added: <span class="hljs-number">1</span><br><br>Now <span class="hljs-keyword">try</span> logging <span class="hljs-keyword">into</span> <span class="hljs-keyword">the</span> machine, <span class="hljs-keyword">with</span>:   <span class="hljs-string">&quot;ssh &#x27;root@10.4.7.101&#x27;&quot;</span><br><span class="hljs-keyword">and</span> check <span class="hljs-keyword">to</span> make sure <span class="hljs-keyword">that</span> only <span class="hljs-keyword">the</span> key(s) you wanted were added<br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">[root@b filedst]# ssh-keygen -t rsa -b <span class="hljs-number">2048</span><br>Generating <span class="hljs-keyword">public</span>/<span class="hljs-keyword">private</span> rsa <span class="hljs-keyword">key</span> pair.<br>Enter file <span class="hljs-keyword">in</span> which <span class="hljs-keyword">to</span> save the <span class="hljs-keyword">key</span> (/root/.ssh/id_rsa): <br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): <br>Enter same passphrase again: <br>Your identification has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.<br>Your <span class="hljs-keyword">public</span> <span class="hljs-keyword">key</span> has been saved <span class="hljs-keyword">in</span> /root/.ssh/id_rsa.pub.<br>The <span class="hljs-keyword">key</span> fingerprint <span class="hljs-built_in">is</span>:<br><span class="hljs-symbol">SHA256:</span>occQ0GYwlaYPFACDT/j4hkxTl/jkh1HPwv94q14kLMg root@b.extmail.org<br>The <span class="hljs-keyword">key</span><span class="hljs-comment">&#x27;s randomart image is:</span><br>+---[RSA <span class="hljs-number">2048</span>]----+<br>|+o..**=o         |<br>|o..o.*B.o        |<br>| =..==+o.o       |<br>|.oo ++.=+.       |<br>|oo.  Eo.S+ .     |<br>|..o   ... =      |<br>| .       . +     |<br>|          o .    |<br>|        .o..     |<br>+----[SHA256]-----+<br>[root@b filedst]# ssh-copy-id root@<span class="hljs-number">10.4</span>.<span class="hljs-number">7.100</span><br>/usr/bin/ssh-copy-id: INFO: Source <span class="hljs-keyword">of</span> <span class="hljs-keyword">key</span>(s) <span class="hljs-keyword">to</span> be installed: <span class="hljs-string">&quot;/root/.ssh/id_rsa.pub&quot;</span><br>/usr/bin/ssh-copy-id: INFO: attempting <span class="hljs-keyword">to</span> log <span class="hljs-keyword">in</span> <span class="hljs-keyword">with</span> the <span class="hljs-built_in">new</span> <span class="hljs-keyword">key</span>(s), <span class="hljs-keyword">to</span> filter out any that are already installed<br>/usr/bin/ssh-copy-id: INFO: <span class="hljs-number">1</span> <span class="hljs-keyword">key</span>(s) remain <span class="hljs-keyword">to</span> be installed -- <span class="hljs-keyword">if</span> you are prompted now it <span class="hljs-built_in">is</span> <span class="hljs-keyword">to</span> install the <span class="hljs-built_in">new</span> keys<br>\S<br>Kernel \r <span class="hljs-keyword">on</span> an \m<br>root@<span class="hljs-number">10.4</span>.<span class="hljs-number">7.100</span><span class="hljs-comment">&#x27;s password: </span><br><br>Number <span class="hljs-keyword">of</span> <span class="hljs-keyword">key</span>(s) added: <span class="hljs-number">1</span><br><br>Now <span class="hljs-keyword">try</span> logging <span class="hljs-keyword">into</span> the machine, <span class="hljs-keyword">with</span>:   <span class="hljs-string">&quot;ssh &#x27;root@10.4.7.100&#x27;&quot;</span><br><span class="hljs-built_in">and</span> check <span class="hljs-keyword">to</span> make sure that only the <span class="hljs-keyword">key</span>(s) you wanted were added.<br></code></pre></td></tr></table></figure><p>免密传输测试：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@a filesrc]<span class="hljs-comment"># touch a.txt</span><br>[root@a filesrc]<span class="hljs-comment"># rsync -avz /filesrc/* root@10.4.7.101:/filedst/</span><br><span class="hljs-string">\S</span><br>Kernel <span class="hljs-string">\r</span> <span class="hljs-literal">on</span> an <span class="hljs-string">\m</span><br>sending incremental file <span class="hljs-keyword">list</span><br>a.txt<br><br>sent <span class="hljs-number">84</span> bytes  received <span class="hljs-number">35</span> bytes  <span class="hljs-number">238.00</span> bytes/sec<br>total size <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>  speedup <span class="hljs-keyword">is</span> <span class="hljs-number">0.00</span><br></code></pre></td></tr></table></figure></blockquote><hr><h2 id="4-2-rsync-协议数据同步：将-NFS-服务器数据同步备份到-RSYNC-服务器"><a href="#4-2-rsync-协议数据同步：将-NFS-服务器数据同步备份到-RSYNC-服务器" class="headerlink" title="4.2 rsync 协议数据同步：将 NFS 服务器数据同步备份到 RSYNC 服务器"></a>4.2 <code>rsync</code> 协议数据同步：将 <code>NFS</code> 服务器数据同步备份到 <code>RSYNC</code> 服务器</h2><p>实验环境：一台服务器，一台客户端</p><ol><li><p>在两台服务器上分别创建目录（<code>/filesrc、/filedst</code>）</p></li><li><p>搭建 <code>RSYNC</code> 服务（<font color=red>仅需要在 <code>NFS</code> 服务器上搭建即可</font>）</p><ul><li><p>创建主配置文件（<code>/etc/rsyncd.conf</code>）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># a作为RSYNC服务器，只需在a上搭建即可</span><br><span class="hljs-comment"># vi /etc/rsyncd.conf</span><br><br>address = 10.4.7.100         <span class="hljs-comment"># RSYNC服务绑定IP</span><br>port 873<span class="hljs-comment"># 默认服务端口 873</span><br>log file = <span class="hljs-string">/var/log/rsyncd.log</span>              <span class="hljs-comment"># 日志文件位置</span><br>pid file = <span class="hljs-string">/var/run/rsyncd.pid</span>              <span class="hljs-comment"># 进程号文件位置</span><br><br>[web]                                       <span class="hljs-comment"># 共享名：用来连接时写在url上的</span><br>        comment = web directory backup      <span class="hljs-comment"># 共享描述话语</span><br>        path = <span class="hljs-string">/filesrc</span>                     <span class="hljs-comment"># 实际共享目录</span><br>        read only = no                      <span class="hljs-comment"># 是否仅允许读取</span><br>        dont compress   = *<span class="hljs-string">.gz</span> *<span class="hljs-string">.tgz</span> *<span class="hljs-string">.zip</span> *<span class="hljs-string">.z</span> *<span class="hljs-string">.bz2</span> <span class="hljs-comment"># 哪些文件类型不进行压缩</span><br>auth users = user1                  <span class="hljs-comment"># 登录用户名（非系统用户，需要自行创建）</span><br>        secrets file = <span class="hljs-string">/etc/rsyncd_users.db</span> <span class="hljs-comment"># 认证所需账户密码文件（需自行创建）</span><br></code></pre></td></tr></table></figure></li><li><p>创建认证所需账户密码文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>rsyncd_users.db<br>user1:<span class="hljs-number">123456</span><br># chmod <span class="hljs-number">600</span> <span class="hljs-regexp">/etc/</span>rsyncd_users.db            # 必须修改权限，否则登录报错<br></code></pre></td></tr></table></figure></li><li><p>启动服务</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># rsync --daemon</span><br><span class="hljs-meta"># netstat -antp | grep :873</span><br></code></pre></td></tr></table></figure></li><li><p>设置映射用户对共享目录有权限（<code>r</code>）</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># setfacl -m u:nobody:rwx /filesrc</span><br></code></pre></td></tr></table></figure></li><li><p>测试：</p><p><strong>下载</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python">[root@a filesrc]<span class="hljs-comment"># touch &#123;a..c&#125;.txt</span><br>[root@b filedst]<span class="hljs-comment"># rsync -avz rsync://user1@10.4.7.100/web /filedst/</span><br>Password: <br><span class="hljs-comment"># 用户是上面配置的 user1:123456</span><br><span class="hljs-comment"># web 就是rsyncd.conf下的 [web]模块，即是/filesrc</span><br>receiving incremental file <span class="hljs-built_in">list</span><br>./<br>a.txt<br>b.txt<br>c.txt<br><br>sent <span class="hljs-number">84</span> <span class="hljs-built_in">bytes</span>  received <span class="hljs-number">207</span> <span class="hljs-built_in">bytes</span>  <span class="hljs-number">83.14</span> <span class="hljs-built_in">bytes</span>/sec<br>total size <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>  speedup <span class="hljs-keyword">is</span> <span class="hljs-number">0.00</span><br></code></pre></td></tr></table></figure><p><strong>上传</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@a filesrc]<span class="hljs-comment"># rm -rf ./*</span><br>[root@b filedst]<span class="hljs-comment"># rsync -avz /filedst/* rsync://user1@10.4.7.100/web</span><br>Password: <br>sending incremental <span class="hljs-built_in">file</span> <span class="hljs-built_in">list</span><br>a.txt<br>b.txt<br>c.txt<br>rsync: chgrp <span class="hljs-string">&quot;/.a.txt.xMQTQy&quot;</span> (<span class="hljs-keyword">in</span> web) failed: Operation <span class="hljs-keyword">not</span> permitted (<span class="hljs-number">1</span>)<br>rsync: chgrp <span class="hljs-string">&quot;/.b.txt.EZIzP0&quot;</span> (<span class="hljs-keyword">in</span> web) failed: Operation <span class="hljs-keyword">not</span> permitted (<span class="hljs-number">1</span>)<br>rsync: chgrp <span class="hljs-string">&quot;/.c.txt.u6KfOs&quot;</span> (<span class="hljs-keyword">in</span> web) failed: Operation <span class="hljs-keyword">not</span> permitted (<span class="hljs-number">1</span>)<br><br>sent <span class="hljs-number">188</span> bytes  received <span class="hljs-number">310</span> bytes  <span class="hljs-number">110.67</span> bytes/sec<br>total size <span class="hljs-keyword">is</span> <span class="hljs-number">0</span>  speedup <span class="hljs-keyword">is</span> <span class="hljs-number">0.00</span><br>rsync <span class="hljs-keyword">error</span>: <span class="hljs-keyword">some</span> files/attrs were <span class="hljs-keyword">not</span> transferred (see previous errors) (code <span class="hljs-number">23</span>) <span class="hljs-keyword">at</span> main.c(<span class="hljs-number">1179</span>) [sender=<span class="hljs-number">3.1</span><span class="hljs-number">.2</span>]<br>[root@a filesrc]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">0</span><br>-rw<span class="hljs-comment">------- 1 nobody nobody 0 Mar 28 16:00 a.txt</span><br>-rw<span class="hljs-comment">------- 1 nobody nobody 0 Mar 28 16:00 b.txt</span><br>-rw<span class="hljs-comment">------- 1 nobody nobody 0 Mar 28 16:00 c.txt</span><br></code></pre></td></tr></table></figure><p><strong>同步</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@a filesrc]<span class="hljs-comment"># ls</span><br>a.txt  b.txt  c.txt<br>[root@b filedst]<span class="hljs-comment"># ls</span><br>1.txt  2.txt  3.txt  a.txt  b.txt  c.txt<br><span class="hljs-comment"># 将本地文件同步到服务器，当然也可以将服务器文件同步到本地</span><br>[root@b filedst]<span class="hljs-comment"># rsync -avz --delete /filedst/* rsync://user1@10.4.7.100/web</span><br>Password: <br>sending incremental file list<br>1.txt<br>2.txt<br>3.txt<br>a.txt<br>b.txt<br>c.txt<br><br>sent<span class="hljs-number"> 352 </span>bytes  received<span class="hljs-number"> 604 </span>bytes  273.14 bytes/sec<br>total size is<span class="hljs-number"> 0 </span> speedup is 0.00<br>rsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1179) [sender=3.1.2]<br>[root@a filesrc]<span class="hljs-comment"># ll</span><br>total 0<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 1.txt<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 2.txt<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 3.txt<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 a.txt<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 b.txt<br>-rw-------<span class="hljs-number"> 1 </span>nobody nobody<span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 28 </span>16:04 c.txt<br></code></pre></td></tr></table></figure></li></ul></li></ol><p><strong>下行同步（下载）</strong></p><p>格式：<code>rsync -avz rsync://用户名@服务器地址/共享模块名 /本地目录</code></p><p>示例：<code>rsync -avz rsync://user1@10.4.7.100/web /filedst</code></p><p>拓展：<code>--delete</code>：删除本地比服务器多出来的文件（源地址没有，目标地址有的删掉）</p><p>​            <code>rsync -avz --delete rsync://user1@10.4.7.100/web /filedst</code></p><p><strong>上传同步（上传）</strong></p><p>格式：<code>rsync -avz /本地目录/* rsync://用户名@服务器地址/共享模块名</code></p><p>示例：<code>rsync -avz /filedst/* rsync://user1@10.4.7.100/web</code></p><blockquote><a class="btn" href="http://butatree.site/posts/14c6ce5b/"  title="跳转" target="_blank">（贰）</a></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>RSYNC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-企业邮件部署</title>
    <link href="/posts/ad80e28c/"/>
    <url>/posts/ad80e28c/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a id="前提">前提</a></p><p>部署 <code>DNS</code> </p><blockquote><p>关闭防火墙以及 <code>SELinux</code>，部署 以下<code>DNS</code> 配置文件，为了和一些包相结合，不要换成其他的 <code>DNS</code> 域 </p></blockquote><p>安装 <code>DNS</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install <span class="hljs-built_in">bind</span><br></code></pre></td></tr></table></figure><p>配置 <code>DNS</code> 配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle">vi <span class="hljs-regexp">/etc/</span>named.conf<br># 修改监听地址和访问控制为 <span class="hljs-keyword">any</span><br><span class="hljs-keyword">options</span> &#123;<br>         listen-on port <span class="hljs-number">53</span> &#123; <span class="hljs-keyword">any</span>; &#125;;<br>         directory       <span class="hljs-string">&quot;/var/named&quot;</span>;<br>         <span class="hljs-keyword">dump</span>-<span class="hljs-keyword">file</span>       <span class="hljs-string">&quot;/var/named/data/cache_dump.db&quot;</span>;<br>         statistics-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/var/named/data/named_stats.txt&quot;</span>;<br>         memstatistics-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;<br>         recursing-<span class="hljs-keyword">file</span>  <span class="hljs-string">&quot;/var/named/data/named.recursing&quot;</span>;<br>         secroots-<span class="hljs-keyword">file</span>   <span class="hljs-string">&quot;/var/named/data/named.secroots&quot;</span>;<br>         allow-query     &#123; <span class="hljs-keyword">any</span>; &#125;;<br>         ...<br></code></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">vi <span class="hljs-meta-keyword">/etc/</span>named.rfc1912.zones <br><span class="hljs-meta"># 正向解析即可</span><br>zone <span class="hljs-string">&quot;extmail.org&quot;</span> <span class="hljs-class">IN </span>&#123;<br>type master;<br>file <span class="hljs-string">&quot;extmail.localhost&quot;</span>;<br>allow-<span class="hljs-class">update </span>&#123; none; &#125;;<br>&#125;;<br></code></pre></td></tr></table></figure><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs dns">cd /var/named<br>vi host.localhost <br>#修改如下数据<br><span class="hljs-meta">$TTL</span> <span class="hljs-number">1</span>D<br>@<span class="hljs-keyword">IN</span> <span class="hljs-keyword">SOA</span>extmail.org. admin.extmail.org. (<br>       <span class="hljs-number">202002102</span><span class="hljs-comment">; serial</span><br><span class="hljs-number">1</span>D<span class="hljs-comment">; refresh</span><br><span class="hljs-number">1</span>H<span class="hljs-comment">; retry</span><br><span class="hljs-number">1</span>W<span class="hljs-comment">; expire</span><br><span class="hljs-number">3</span>H )<span class="hljs-comment">; minimum</span><br><span class="hljs-keyword">NS</span>dns.extmail.org.<br><span class="hljs-keyword">MX</span> <span class="hljs-number">3</span>    mail.extmail.org.<br>mail      <span class="hljs-keyword">A</span>     <span class="hljs-number">10.4.7.100</span> # ←<br>dns    <span class="hljs-keyword">IN</span> <span class="hljs-keyword">A</span><span class="hljs-number">10.4.7.100</span> # ←<br>a      <span class="hljs-keyword">IN</span> <span class="hljs-keyword">A</span><span class="hljs-number">10.4.7.100</span><br>b      <span class="hljs-keyword">IN</span> <span class="hljs-keyword">A</span><span class="hljs-number">10.4.7.101</span><br>c      <span class="hljs-keyword">IN</span> <span class="hljs-keyword">A</span>     <span class="hljs-number">10.4.7.102</span><br></code></pre></td></tr></table></figure><p>重启 <code>DNS</code> 服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart named</span><br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@b</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># nslookup mail.extmail.org</span><br><span class="hljs-attr">Server:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><br><span class="hljs-attr">Address:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><span class="hljs-comment">#53</span><br><br><span class="hljs-attr">Non-authoritative answer:</span><br><span class="hljs-attr">Name:</span><span class="hljs-string">mail.extmail.org</span><br><span class="hljs-attr">Address:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.100</span><br><br>[<span class="hljs-string">root@b</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># nslookup a.extmail.org</span><br><span class="hljs-attr">Server:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><br><span class="hljs-attr">Address:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><span class="hljs-comment">#53</span><br><br><span class="hljs-attr">Non-authoritative answer:</span><br><span class="hljs-attr">Name:</span><span class="hljs-string">a.extmail.org</span><br><span class="hljs-attr">Address:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.100</span><br><br>[<span class="hljs-string">root@b</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># nslookup b.extmail.org</span><br><span class="hljs-attr">Server:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><br><span class="hljs-attr">Address:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><span class="hljs-comment">#53</span><br><br><span class="hljs-attr">Non-authoritative answer:</span><br><span class="hljs-attr">Name:</span><span class="hljs-string">b.extmail.org</span><br><span class="hljs-attr">Address:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.101</span><br><br>[<span class="hljs-string">root@b</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># nslookup c.extmail.org</span><br><span class="hljs-attr">Server:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><br><span class="hljs-attr">Address:</span><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span><span class="hljs-comment">#53</span><br><br><span class="hljs-attr">Non-authoritative answer:</span><br><span class="hljs-attr">Name:</span><span class="hljs-string">c.extmail.org</span><br><span class="hljs-attr">Address:</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.102</span><br></code></pre></td></tr></table></figure><p>测试成功后就可以做下一步了。</p></blockquote><hr><h1 id="一、邮件概述"><a href="#一、邮件概述" class="headerlink" title="一、邮件概述"></a>一、邮件概述</h1><p>​    电子邮件服务器是处理邮件交换的软硬件设施的总称，包括电子邮件程序、电子邮箱等。为用户提供基于 <code>E-mail</code> 服务的电子邮件系统，人们通过访问服务器实现邮件的交换。</p><p>常见的邮件服务器</p><table><thead><tr><th>类型</th><th>名称</th><th>特点</th></tr></thead><tbody><tr><td>服务器端</td><td><code>Sendmail</code></td><td>资格最古老，运行稳定，但安全性欠佳</td></tr><tr><td></td><td><code>Postfix</code></td><td>采用模块化设计，在投递效率、稳定性、性能<br />及安全性方面表现优秀，与 <code>sendmail</code> 保持<br />足够的兼容性。</td></tr><tr><td></td><td><code>Qmail</code></td><td>采用模块化设计，速度快、执行效率高，配置<br />稍微复杂点。</td></tr><tr><td>客户端</td><td><code>Outlook</code></td><td>以下都是用来接收邮件的客户端</td></tr><tr><td></td><td><code>foxmail</code></td><td></td></tr><tr><td></td><td>浏览器</td><td></td></tr></tbody></table><hr><h1 id="二、邮件应用协议"><a href="#二、邮件应用协议" class="headerlink" title="二、邮件应用协议"></a>二、邮件应用协议</h1><p><code>SMTP</code> 简单邮件传输协议（发邮件）<code>TCP 25</code> 端口，加密时使用 <code>TCP 465</code> 端口</p><p><code>POP3</code> 第三版邮局协议（收邮件）<code>TCP 110</code> 端口，加密时使用 <code>TCP 995</code> 端口</p><p><code>IMAP4</code> 第四版互联网邮件访问协议（收邮件）<code>TCP 143</code> 端口，加密时使用 <code>TCP 993</code> 端口</p><hr><h1 id="三、软件相关"><a href="#三、软件相关" class="headerlink" title="三、软件相关"></a>三、软件相关</h1><p>软件名：<code>Postfix</code></p><p>主目录：<code>/etc/postfix</code></p><p>主配置文件：<code>main.cf</code></p><p>​            <code>myhostname</code>：邮件服务主机名</p><p>​            <code>mydomain</code>：邮件域</p><p>​            <code>myorigin</code>：设置允许发信的用户的邮件域</p><p>​            <code>mydestination</code>：设置允许收信的用户的邮件域</p><hr><h1 id="四、企业级邮件服务"><a href="#四、企业级邮件服务" class="headerlink" title="四、企业级邮件服务"></a>四、企业级邮件服务</h1><blockquote><p>前提条件：要有一个 <code>DNS</code> 服务器。</p></blockquote><h2 id="发送方配置"><a href="#发送方配置" class="headerlink" title="发送方配置"></a>发送方配置</h2><ol><li><p><code>DNS</code> 搭建</p><p>如上：<span class="label label-primary"><a href="#前提">前提</a></span></p></li><li><p>安装 <code>gcc</code> 以及其他依赖软件</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">yum -y install gcc* mysql mysql-<span class="hljs-keyword">server</span> httpd mailx<br><br> systemctl <span class="hljs-keyword">restart</span> httpd<br> systemctl <span class="hljs-keyword">enable</span> httpd<br> systemctl <span class="hljs-keyword">start</span> mariadb.service <br> systemctl <span class="hljs-keyword">enable</span> mariadb.service<br></code></pre></td></tr></table></figure></li><li><p>将 <code>web</code> 页面放到 <code>Apache</code> 的网页目录下</p><blockquote><p>下载地址 <a href="https://github.com/xyoun/extmail">https://github.com/xyoun/extmail</a></p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gradle">mkdir -p <span class="hljs-regexp">/var/</span>www/extsuite<br><br>#tar -xf extmail-<span class="hljs-number">1.2</span>.tar.gz -C <span class="hljs-regexp">/var/</span>www/extsuite<br>#tar -xf extman-<span class="hljs-number">1.1</span>.tar.gz -C <span class="hljs-regexp">/var/</span>www/extsuite<br><br>cd <span class="hljs-regexp">/var/</span>www/extsuite<br>mv extmail-<span class="hljs-number">1.2</span> extmail<br>mv extman-<span class="hljs-number">1.1</span> extman<br>chown -R root.root *<br></code></pre></td></tr></table></figure></li><li><p>将数据库文件导入到 <code>Mysql</code> 中（没有设置密码，空密码登录）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">   cd <span class="hljs-regexp">/var/</span>www/extsuite<br>   mysql &lt;.<span class="hljs-regexp">/extman/</span>docs/extmail.sql<br>vi .<span class="hljs-regexp">/extman/</span>docs/init.sql<br>   INSERT INTO `manager` VALUES (<span class="hljs-string">&#x27;root@extmail.org&#x27;</span>,<span class="hljs-string">&#x27;123456&#x27;</span>,<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;root&#x27;</span>)<br>   <span class="hljs-comment"># 将此文件先把密码修改为 123456，再导入</span><br>   mysql &lt;.<span class="hljs-regexp">/extman/</span>docs/init.sql<br></code></pre></td></tr></table></figure></li><li><p>将邮件模板拷贝到邮件服务器的主目录下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/extsuite/</span>extman/docs<br>cp -a mysql_virtual_alias_maps.cf mysql_virtual_domains_maps.cf mysql_virtual_mailbox_maps.cf <span class="hljs-regexp">/etc/</span>postfix/<br></code></pre></td></tr></table></figure></li><li><p>创建映射用户 <code>&amp;</code> 修改配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">useradd -s <span class="hljs-regexp">/sbin/</span>nologin vmail<br><br>vim <span class="hljs-regexp">/etc/</span>postfix/main.cf<br>inet_interfaces = all         <span class="hljs-comment"># 取消注释</span><br><span class="hljs-comment">#inet_interfaces = localhost  # 添加注释</span><br><span class="hljs-comment">#在尾部添加以下内容</span><br>virtual_mailbox_base = <span class="hljs-regexp">/home/</span>vmail <span class="hljs-comment">#虚拟邮箱存储目录</span><br>virtual_uid_maps = static:<span class="hljs-number">1008</span>     <span class="hljs-comment">#你创建用户的UID</span><br>virtual_gid_maps = static:<span class="hljs-number">1008</span>     <span class="hljs-comment">#你创建用户的GID</span><br>virtual_alias_maps = mysql:<span class="hljs-regexp">/etc/</span>postfix/mysql_virtual_alias_maps.cf <span class="hljs-comment">#虚拟邮件用户对应别名</span><br>virtual_mailbox_domains = mysql:<span class="hljs-regexp">/etc/</span>postfix/mysql_virtual_domains_maps.cf <span class="hljs-comment">#Postfix服务器可以接收的虚拟邮件域域名</span><br>virtual_mailbox_maps = mysql:<span class="hljs-regexp">/etc/</span>postfix/mysql_virtual_mailbox_maps.cf <span class="hljs-comment">#记录虚拟邮箱和存储位置的对应关系</span><br></code></pre></td></tr></table></figure></li><li><p>重启服务 <code>&amp;</code> 发送邮件测试 <code>&amp;</code> 查看结果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">systemctl</span> restart postfix<br><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;hello&quot;</span> | mail -s test support@host.com<br><span class="hljs-attribute">ls</span> /home/vmail/extmail.org/postmaster/Maildir/new<br><span class="hljs-attribute">1616848285</span>.Vfd<span class="hljs-number">00</span>I<span class="hljs-number">20442</span>baM<span class="hljs-number">750851</span>.a.extmail.org<br><br><span class="hljs-comment"># cat 1616848285.Vfd00I20442baM750851.a.extmail.org </span><br><span class="hljs-attribute">Return</span>-Path: &lt;root@a.extmail.org&gt;<br><span class="hljs-attribute">X</span>-Original-To: support@extmail.org<br><span class="hljs-attribute">Delivered</span>-To: postmaster@extmail.org<br><span class="hljs-attribute">Received</span>: by a.extmail.org (Postfix, from userid <span class="hljs-number">0</span>)<br><span class="hljs-attribute">id</span> <span class="hljs-number">97</span>BA<span class="hljs-number">3306</span>F<span class="hljs-number">44</span>F; Sat, <span class="hljs-number">27</span> Mar <span class="hljs-number">2021</span> <span class="hljs-number">20</span>:<span class="hljs-number">31</span>:<span class="hljs-number">25</span> +<span class="hljs-number">0800</span> (CST)<br><span class="hljs-attribute">Date</span>: Sat, <span class="hljs-number">27</span> Mar <span class="hljs-number">2021</span> <span class="hljs-number">20</span>:<span class="hljs-number">31</span>:<span class="hljs-number">25</span> +<span class="hljs-number">0800</span><br><span class="hljs-attribute">To</span>: support@extmail.org<br><span class="hljs-attribute">Subject</span>: test<br><span class="hljs-attribute">User</span>-Agent: Heirloom mailx <span class="hljs-number">12</span>.<span class="hljs-number">5</span> <span class="hljs-number">7</span>/<span class="hljs-number">5</span>/<span class="hljs-number">10</span><br><span class="hljs-attribute">MIME</span>-Version: <span class="hljs-number">1</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">Content</span>-Type: text/plain; charset=us-ascii<br><span class="hljs-attribute">Content</span>-Transfer-Encoding: <span class="hljs-number">7</span>bit<br><span class="hljs-attribute">Message</span>-Id: &lt;<span class="hljs-number">20210327123125</span>.<span class="hljs-number">97</span>BA<span class="hljs-number">3306</span>F<span class="hljs-number">44</span>F@a.extmail.org&gt;<br><span class="hljs-attribute">From</span>: root@a.extmail.org (root)<br><br><span class="hljs-attribute">niinininiiiin</span><br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="接收方配置"><a href="#接收方配置" class="headerlink" title="接收方配置"></a>接收方配置</h2><ol><li><p>安装 <code>dovecot</code> 相关软件</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">yum -y install dovecot dovecot-devel dovecot-mysql<br>systemctl <span class="hljs-keyword">start</span> dovecot<br>systemctl <span class="hljs-keyword">enable</span> dovecot<br></code></pre></td></tr></table></figure></li><li><p>配置 <code>dovecot</code> 能够去数据库里读数据</p><ul><li><p>修改 <code>/etc/dovecot/conf.d/10-mail.conf</code></p><p>在配置文件中添以下两行：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>dovecot<span class="hljs-regexp">/conf.d/</span><span class="hljs-number">10</span>-mail.conf<br># %d domain %n name 用户<br><br>mail_location = maildir:<span class="hljs-regexp">/home/</span>vmail<span class="hljs-regexp">/%d/</span>%n/Maildir<br>first_valid_uid=<span class="hljs-number">1008</span><br></code></pre></td></tr></table></figure></li><li><p>修改 <code>/etc/dovecot/conf.d/10-auth.conf</code></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>dovecot<span class="hljs-regexp">/conf.d/</span><span class="hljs-number">10</span>-auth.conf<br>!<span class="hljs-keyword">include</span> auth-system.conf.ext  #系统调用<br>!<span class="hljs-keyword">include</span> auth-sql.conf.ext     #数据库调用<br></code></pre></td></tr></table></figure></li><li><p>修改数据库连接配置文件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># cp -a /usr/share/doc/dovecot-2.2.36/example-config/dovecot-sql.conf.ext /etc/dovecot/</span><br><br><span class="hljs-comment"># vi /etc/dovecot/dovecot-sql.conf.ext</span><br><span class="hljs-attribute">driver</span>=mysql<br><span class="hljs-attribute">connect</span>=host=localhost <span class="hljs-attribute">dbname</span>=extmail <span class="hljs-attribute">user</span>=extmail <span class="hljs-attribute">password</span>=extmail<br><span class="hljs-attribute">default_pass_scheme</span>=MD5<br><span class="hljs-attribute">password_query</span>=\<br>SELECT username,domain,password\<br><span class="hljs-keyword">FROM</span> mailbox WHERE <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;%u&#x27;</span> <span class="hljs-keyword">AND</span> <span class="hljs-attribute">domain</span>=<span class="hljs-string">&#x27;%d&#x27;</span><br><span class="hljs-comment"># 验证登录密码的查询命令</span><br><span class="hljs-attribute">user_query</span>=SELECT maildir,1008 AS uid,1008 AS gid <span class="hljs-keyword">FROM</span> mailbox WHERE <span class="hljs-attribute">username</span>=<span class="hljs-string">&#x27;%u&#x27;</span><br><span class="hljs-comment">#查询虚拟用户对应的邮件目录</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>重启 <code>dovecot</code> 验证是否能连接</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart dovecot</span><br></code></pre></td></tr></table></figure><p>安装 <code>telnet</code> 客户端进行登录验证</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">yum</span> <span class="hljs-string">-y</span> <span class="hljs-string">install</span> <span class="hljs-string">telnet</span><br><br>[<span class="hljs-string">root@a</span> ]<span class="hljs-comment"># telnet mail.extmail.org 110 #110是 Dovecot的端口号</span><br><span class="hljs-string">Trying</span> <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.100</span><span class="hljs-string">...</span><br><span class="hljs-string">Connected</span> <span class="hljs-string">to</span> <span class="hljs-string">mail.extmail.org.</span><br><span class="hljs-string">Escape</span> <span class="hljs-string">character</span> <span class="hljs-string">is</span> <span class="hljs-string">&#x27;^]&#x27;</span><span class="hljs-string">.</span><br><span class="hljs-string">+OK</span> <span class="hljs-string">Dovecot</span> <span class="hljs-string">ready.</span><br><span class="hljs-string">user</span> <span class="hljs-string">postmaster@extmail.org</span> <span class="hljs-comment">#登录 postmaster 用户</span><br><span class="hljs-string">+OK</span><br><span class="hljs-string">pass</span> <span class="hljs-string">extmail</span>                <span class="hljs-comment">#密码是 extmail</span><br><span class="hljs-string">+OK</span> <span class="hljs-string">Logged</span> <span class="hljs-string">in.</span><br><span class="hljs-string">retr</span> <span class="hljs-number">1</span>                      <span class="hljs-comment">#查看第一封邮件</span><br><span class="hljs-string">+OK</span> <span class="hljs-number">541</span> <span class="hljs-string">octets</span><br><span class="hljs-attr">Return-Path:</span> <span class="hljs-string">&lt;root@a.extmail.org&gt;</span><br><span class="hljs-attr">X-Original-To:</span> <span class="hljs-string">support@extmail.org</span><br><span class="hljs-attr">Delivered-To:</span> <span class="hljs-string">postmaster@extmail.org</span><br><span class="hljs-attr">Received:</span> <span class="hljs-string">by</span> <span class="hljs-string">a.extmail.org</span> <span class="hljs-string">(Postfix,</span> <span class="hljs-string">from</span> <span class="hljs-string">userid</span> <span class="hljs-number">0</span><span class="hljs-string">)</span><br><span class="hljs-string">id</span> <span class="hljs-string">97BA3306F44F;</span> <span class="hljs-string">Sat,</span> <span class="hljs-number">27</span> <span class="hljs-string">Mar</span> <span class="hljs-number">2021 20:31:25</span> <span class="hljs-string">+0800</span> <span class="hljs-string">(CST)</span><br><span class="hljs-attr">Date:</span> <span class="hljs-string">Sat,</span> <span class="hljs-number">27</span> <span class="hljs-string">Mar</span> <span class="hljs-number">2021 20:31:25</span> <span class="hljs-string">+0800</span><br><span class="hljs-attr">To:</span> <span class="hljs-string">support@extmail.org</span><br><span class="hljs-attr">Subject:</span> <span class="hljs-string">test</span><br><span class="hljs-attr">User-Agent:</span> <span class="hljs-string">Heirloom</span> <span class="hljs-string">mailx</span> <span class="hljs-number">12.5</span> <span class="hljs-number">7</span><span class="hljs-string">/5/10</span><br><span class="hljs-attr">MIME-Version:</span> <span class="hljs-number">1.0</span><br><span class="hljs-attr">Content-Type:</span> <span class="hljs-string">text/plain;</span> <span class="hljs-string">charset=us-ascii</span><br><span class="hljs-attr">Content-Transfer-Encoding:</span> <span class="hljs-string">7bit</span><br><span class="hljs-attr">Message-Id:</span> <span class="hljs-string">&lt;20210327123125.97BA3306F44F@a.extmail.org&gt;</span><br><span class="hljs-attr">From:</span> <span class="hljs-string">root@a.extmail.org</span> <span class="hljs-string">(root)</span><br><br><span class="hljs-string">niinininiiiin</span><br><span class="hljs-string">.</span><br><br></code></pre></td></tr></table></figure></li></ol><h2 id="MAIL-WEB-页面"><a href="#MAIL-WEB-页面" class="headerlink" title="MAIL+WEB 页面"></a><code>MAIL+WEB</code> 页面</h2><ol><li><p>修改 <code>/etc/httpd/conf/httpd.conf</code> 配置文件，能加载邮件 <code>web</code> 页面</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>httpd<span class="hljs-regexp">/conf/</span>httpd.conf<br>NameVirtualHost *:<span class="hljs-number">80</span><br><br>&lt;VirtualHost *:<span class="hljs-number">80</span>&gt;<br>        DocumentRoot <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/extsuite/</span>extmail<span class="hljs-regexp">/html/</span><br>        ServerName mail.extmail.org<br>        scriptalias <span class="hljs-regexp">/extmail/</span>cgi <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/extsuite/</span>extmail<span class="hljs-regexp">/cgi/</span><br>        alias <span class="hljs-regexp">/extmail /</span>var<span class="hljs-regexp">/www/</span>extsuite<span class="hljs-regexp">/extmail/</span>html/<br>        scriptalias <span class="hljs-regexp">/extman/</span>cgi <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/extsuite/</span>extman<span class="hljs-regexp">/cgi/</span><br>        alias <span class="hljs-regexp">/extman /</span>var<span class="hljs-regexp">/www/</span>extsuite<span class="hljs-regexp">/extman/</span>html/<br>        suexecusergroup vmail vmail<br>&lt;/VirtualHost&gt;<br></code></pre></td></tr></table></figure></li><li><p><code>extmail</code> 目录中更改 <code>cgi</code> 的属主属组，让 <code>vmail</code> 有权限执行</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># chown -R vmail.vmail cgi/</span><br><span class="hljs-comment"># cp -a webmail.cf.default webmail.cf</span><br><span class="hljs-comment"># vi webmail.cf</span><br><span class="hljs-attr">SYS_MAILDIR_BASE</span> = /home/vmail  <span class="hljs-comment">#邮件存放目录</span><br><span class="hljs-attr">SYS_CRYPT_TYPE</span> = plain          <span class="hljs-comment">#加密类型</span><br><span class="hljs-attr">SYS_MYSQL_USER</span> = extmail        <span class="hljs-comment"># MYSQL用户名</span><br><span class="hljs-attr">SYS_MYSQL_PASS</span> = extmail        <span class="hljs-comment"># MYSQL密码</span><br></code></pre></td></tr></table></figure></li><li><p><code>extman</code> 中 更改 <code>cgi</code> 的属主属组，让 <code>vmail</code> 有执行权限</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># chown -R vmail.vmail cgi/</span><br><span class="hljs-comment"># cp -a webman.cf.default webman.cf</span><br><span class="hljs-comment"># vi webman.cf</span><br><span class="hljs-attr">SYS_MAILDIR_BASE</span> = /home/vmail<br><span class="hljs-attr">SYS_SESS_DIR</span> =/tmp<br><span class="hljs-attr">SYS_CAPTCHA_ON</span> = <span class="hljs-number">0</span> <span class="hljs-comment">#生产环境中开启，用于校验</span><br><span class="hljs-attr">SYS_CRYPT_TYPE</span> = plain<br></code></pre></td></tr></table></figure></li><li><p>安装 <code>Unix-Syslog</code> 软件</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># 解压 Unix-syslog-1.1.tar.gz 软件</span><br><span class="hljs-meta"># cd Unix-syslog-1.1</span><br><span class="hljs-meta"># perl Makefile.PL</span><br><span class="hljs-meta"># make</span><br><span class="hljs-meta"># make install</span><br></code></pre></td></tr></table></figure></li><li><p>在浏览器上访问，<code>windows</code> 测试需要手动指向 <code>dns</code> 服务器，修改 <code>hosts</code> 文件即可。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Mail</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-SAMBA服务(贰)</title>
    <link href="/posts/7b285b86/"/>
    <url>/posts/7b285b86/</url>
    
    <content type="html"><![CDATA[<h1 id="全局参数"><a href="#全局参数" class="headerlink" title="全局参数"></a>全局参数</h1><p><code>[global]</code></p><p><code>config file = /usr/local/samba/lib/smb.conf.%m</code></p><p>​    说明：<code>config file</code> 可以让你使用另一个配置文件来覆盖缺省的配置文件。如果文件 不存在，则该项无效。这个参数很有用，可以使得 <code>samba</code> 配置更灵活，可以让一台 <code>samba</code> 服务器模拟多台不同配置的服务器。比如，你想让 <code>PC1</code> （主机名）这台电脑在访问 <code>Samba Server</code> 时使用它自己的配置文件，那么先在 <code>/etc/samba/host/</code> 下为 <code>PC1</code> 这台电脑在访问 <code>Samba Server</code> 时使用它自己的配置文件，那么先在 <code>/etc/samba/host/</code> 下为 <code>PC1</code> 配置一个名为 <code>smb.conf.pc1</code> 的文件，然后在 <code>smb.conf</code> 中加入 <code>:configfile= /etc/samba/host/smb.conf.%m</code> 。这样当 <code>PC1</code> 请求连接 <code>Samba Server</code> 时，<code>smb.conf.%m</code> 就被替换成 <code>smb.conf.pc1</code> 。这样，对于 <code>PC1</code> 来说，它所使用的 <code>Samba</code> 服务就是由 <code>smb.conf.pc1</code> 定义的，而其他机器访问 <code>Samba Server</code>   则还是应用 <code>smb.conf</code> 。</p><p><code>workgroup = WORKGROUP</code></p><p>说明：设定 <code>Samba Server</code> 所要加入的工作组或者域。</p><p><code>server string = Samba Server Version %v</code></p><p>说明：设定 <code>Samba Server</code> 的注释，可以是任何字符串，也可以不填。宏 <code>%v</code> 表示显示 <code>Samba</code> 的版本号。</p><p><code>netbios name = smbserver</code> </p><p>说明：设置 <code>Samba Server</code> 的 <code>NetBIOS</code> 名称。如果不填，则默认会使用该服务器的 <code>DNS</code> 名称的 第一部分。<code>netbios name </code> 和 <code> workgroup</code> 名字不要设置成一样了。</p><p><code>interfaces=lo eth0 10.4.7.100/24 10.4.7.101/24</code></p><p>说明：设置 <code>Samba Server</code> 监听哪些网卡，可以写网卡名，也可以写该网卡的 <code>IP</code> 地址。</p><p><code>hosts allow = 127. 192.168.1. 192.168.10.1</code></p><p>说明：表示允许连接到 <code>Samba Server</code> 的客户端，多个参数以空格隔开。可以用一个 <code>IP</code> 表示，也可以用一个网段表示。<code>hosts deny</code> 与 <code>hosts allow</code> 刚好相反。</p><p>例如：<code>hosts allow=172.17.2.EXCEPT172.17.2.50</code></p><p>表示允许来自 <code>172.17.2.*</code> 的主机连接，但排除 <code>172.17.2.50</code> 。</p><p><code>hosts allow = 172.17.2.0/255.255.0.0</code></p><p>表示允许来自 <code>172.17.2.0/255.255.0.0</code> 子网中的所有主机连接。</p><p><code>hosts allow=M1,M2</code></p><p>表示允许来自 <code>M1,M2</code> 两台计算机连接。</p><p><code>hosts allow=@xq</code></p><p>表示允许来自 <code>@xq</code> 网域的所有计算机连接。</p><p><code>max connections = 0</code></p><p>说明：<code>max connections</code> 用来指定连接 <code>Samba Server</code> 的最大连接数目。如果超出连接数目，则新的连接请求将被拒绝。<code>0</code> 表示不限制。</p><p><code>deadtime = 0</code></p><p>说明：<code>deadtime</code> 用来设置断掉一个没有打开任何文件的连接时间。单位是分钟，0 代表 <code>Samba Server</code> 不自动切断任何连接。</p><p><code>time server = yes/no</code></p><p>说明：<code>time server</code> 用来设置让 <code>nmdb</code> 成为 <code>windows</code> 客户端的时间服务器。</p><p><code>log file = /var/log/samba/log.%m</code></p><p>说明：设置 <code>Samba Server</code> 日志文件的存储位置以及日志文件名称。在文件名后加个宏 <code>%m</code> （主机名），表示对每台访问 <code>Samba Server</code> 的机器都单独记录一个日志文件。如果 <code>pc1, pc2</code> 访问过 <code>Samba Server</code> 就会在 <code>/var/log/samba</code> 目录下留下 <code>log.pc1</code> 和 <code>log.pc2</code> 两个日志文件。</p><p><code>max log size = 50</code></p><p>说明：设置 <code>Samba Server</code> 日志文件的最大容量，单位为 <code>kB</code> ，<code>0</code> 代表不限制。</p><p><code>security = user</code></p><p>说明：设置用户访问 <code>Samba Server</code> 的验证方式，一共有四种验证方式。</p><ol><li><code>share</code> ：用户访问 <code>Samba Server</code> 不需要提供用户名和口令，安全性能较低。</li><li><code>user</code> ：<code>Samba Server</code> 共享目录只能被授权的用户访问，由 <code>Samba Server</code> 负责检查账号和密码的正确性。账号和密码要在本 <code>Samba Server</code> 中建立。</li><li><code>server</code> ：依靠其他 <code>Windows NT/2000</code> 或 <code>Samba Server</code> 来验证用户的账号和密码，是一种代理验证。此种安全模式下，系统管理员可以把所有的 <code>Windows</code> 用户和口令集中到一个 <code>NT</code> 系统上，使用 <code>Windows NT</code> 进行 <code>Samba</code> 认证，远程服务器可以自动认证全部用户和口令，如果认证失败，<code>Samba</code> 将使用用户级安全模式作为替代的方式。</li><li><code>domain</code> ：域安全级别，使用主域控制器 （<code>PDC</code>）来完成认证。</li></ol><p><code>passdb backend = tdbsam</code></p><p>说明：<code>passdb backend</code> 就是用户后台的意思。目前有三种后台：<code>smbpasswd、tdbsam</code>  和  <code>ldapsam</code> 。<code>sam</code> 应该还是 <code>security account manager</code> （安全账户管理）的简写。</p><ol><li><p><code>smbpasswd</code> ：该方式是使用 <code>smb</code> 自己的工具 <code>smbpasswd</code> 来给系统用户（真实用户或者虚拟用户）设置一个 <code>Samba</code> 密码，客户端就用这个密码来访问 <code>Samba</code> 的资源。<code>smbpasswd</code> 文件默认在 <code>/etc/samba</code> 目录下，不过有时候要手工建立该文件。</p></li><li><p><code>tdvsam</code> ：该方式则是使用一个数据库文件来建立用户数据库。数据库文件叫 <code>passdb.tdb</code> ，默认在 <code>/etc/samba</code> 目录下。<code>passdb.tdb</code> 用户数据库可以使用 <code>smbpasswd -a</code> 来建立 <code>Samba</code> 用户，不过要建立的 <code>Samba</code> 用户必须显示系统用户。我们也可以使用 <code>pdbedit</code> 命令来建立 <code>Samba</code> 账户。<code>pdbedit</code> 命令的参数很多，我们列出几个主要的。</p><p><code>pdbedit -a username</code> ：新建 <code>Samba</code> 用户。</p><p><code>pdbedit -x username</code> ：删除 <code>Samba</code> 用户。</p><p><code>pdbedit -L</code> ：列出 <code>Samba</code> 用户列表，读取 <code>passdb.tdb</code> 数据库文件。</p><p><code>pdbedit -Lv</code> ：列出 <code>Samba</code> 用户列表的详细信息。</p><p><code>pdbedit -c &quot;[D]&quot; -u username</code> ：暂停该 <code>Samba</code> 用户的账号。</p><p><code>pdbedit -c &quot;[]&quot; -u username</code> ：恢复该 <code>samba</code> 用户的账号。</p></li><li><p><code>ldapsam</code> ：该方式则是基于 <code>LDAP</code> 的账户管理方式来验证用户。首先要建立 <code>LDAP</code> 服务，然后设置 <code>passdb backend = ldapsam:ldap//LDAP Server</code></p></li></ol><p><code>encrypt passwords = yes/no</code> </p><p>说明：是否将认证密码加密。因为现在 <code>Windows</code> 操作系统都是使用加密密码，所以一般要开启此项。不过配置文件默认已开启。</p><p><code>smb passwd file = /etc/samba/smbpasswd</code></p><p>说明：用来定义 <code>samba</code> 用户的密码文件。<code>smbpasswd</code> 文件如果没有那就手工新建。</p><p><code>username map = /etc/samba/smbusers</code></p><p>说明：用来定义用户名映射，比如可以将<code>root</code> 换成 <code>administrator、admin</code> 等。不过要事先在 <code>smbusers</code> 文件中定义好。比如：<code>root = adminsitrator admin</code> ，这样就可以用 <code>administrarot</code> 或 <code>admin</code> 这两个用户来代替 <code>root</code> 登陆 <code>Samba Server</code> ，更贴近 <code>Windows</code> 用户的习惯。</p><p><code>guest account = nobody</code></p><p>说明：用来设置 <code>guest</code> 用户名。</p><p><code>socket options = TCP_NODELAY SO-RCVBUF=8192 SO_SNDBUF=8192</code></p><p>说明：用来设置服务器和客户端之间会话的 <code>Socket</code> 选项，可以优化传输速度。</p><p><code>domain master = yes/no</code></p><p>说明：设置 <code>Samba</code> 服务器是否要成为网域主浏览器，网域主浏览器可以管理跨子网域的浏览服务。</p><p><code>local master = yes/no</code></p><p>说明：<code>local master</code> 用来指定 <code>Samba Server</code> 是否试图成为本地网域主浏览器。如果设为 <code>no</code> ，则永远不会成为本地网域主浏览器。但是即使设置为 <code>yes</code> ，也不等于该 <code>Samba Server</code> 就能成为主浏览器，还是需要参加选举。</p><p><code>preferred master = yes/no</code></p><p>说明：设置 <code>Samba Server</code> 一开机就强迫进行主浏览器选举，可以提高 <code>Samba Server</code> 成为本地网域主浏览器的机会。如果该参数指定为 <code>yes</code> 时，最好把 <code>domain master</code> 也指定为 <code>yes</code> 。使用该参数时要注意：如果在本 <code>Samba Server</code> 所在的子网有其他机器（不论是 <code>windows NT</code> 还是其他 <code>Samba Server</code>），也指定为首要主浏览器时，那么这些机器将会因为争夺主浏览器而在网络上大发广播，影响网络性能。如果同一个区域内有多台 <code>Samba Server</code> ，将上面三个参数设定在一台即可。</p><p><code>os level = 200</code></p><p>说明：设置 <code>smaba</code> 服务器的 <code>os level</code> 。该参数决定 <code>Samba Server</code> 是否有机会成为本地网域的主浏览器。<code>os level</code> 从 <code>0</code> 到 <code>255</code> ，<code>winNT</code> 的 <code>os level</code> 是 <code>32</code> ，<code>win95/98</code> 的 <code>os level</code> 是 <code>1</code> 。<code>Windows 2000</code> 的 <code>os level</code> 是 <code>64</code> 。如果设置为 <code>0</code> ，则意味着  <code>Samba Server</code> 将失去浏览器选择。如果想让 <code>Samba Server</code> 成为 <code>PDC</code> ，那么将它的 <code>os level</code> 值设大一些。</p><p><code>domain logons = yes/no</code></p><p>说明：设置 <code>Samba Server</code> 是否要做为本地控制器。主域控制器和备份域控制器都需要开启此项。</p><p><code>logon . = %u.bat</code></p><p>说明：当使用者用 <code>windows</code> 客户端登录，那么 <code>Samba</code> 将提供一个登录档。如果设置成 <code>%u.bat</code> ，那么就要为每个用户提供一个登录档。如果人比较多，那就比较麻烦。可以设置成一个具体的文件名，比如 <code>start.bat</code> ，那么用户登录后都会去执行 <code>start.bat</code> ，而不用为每个用户设定一个登录档了。这个文件要放置在 <code>[netlogon]</code> 的 <code>path</code> 设置的目录路径下。</p><p><code>wins support = yes/no</code></p><p>说明：设置 <code>samba</code> 服务器是否提供 <code>wins</code> 服务。</p><p><code>wins server = wins ServerIP</code></p><p>说明：设置 <code>Samba Server</code> 是否使用别的 <code>wins</code> 服务器提供 <code>wins</code> 服务。</p><p><code>wins proxy = yes/no</code></p><p>说明：设置 <code>Samba Server</code> 是否开启 <code>wins</code> 代理服务。</p><p><code>dns proxy = yes/no</code></p><p>说明：设置 <code>Samba Server</code> 是否开启 <code>dns</code> 代理服务。</p><p><code>load printers = yes/no</code></p><p>说明：设置是否在启动 <code>Samba</code> 时就共享打印机。</p><p><code>printcap name = cups</code></p><p>说明：设置共享打印机的配置文件。</p><p><code>printing = cups</code></p><p>说明：设置 <code>Samba</code> 共享打印机的类型。现在支持的打印系统有：<code>bsd, sysv, plp, lprng, aix, hpux, qnx</code></p><hr><h1 id="共享参数"><a href="#共享参数" class="headerlink" title="共享参数"></a>共享参数</h1><p><code>[共享名]</code></p><p><code>comment =</code> 任意字符</p><p>说明：<code>comment</code> 是对该共享的描述，可以是任意字符串。</p><p><code>path = </code> 共享目录路径</p><p>说明：<code>path</code> 用来指定共享目录的路劲。可以用 <code>%u、%m</code> 这样的宏来代替路径里的 <code>unix</code> 用户和客户机的 <code>Netbios</code> 名，用宏表示主要用于 <code>[homes]</code> 共享域。例如：如果我们不打算用 <code>home</code> 段做为客户的共享，而是在 <code>/home/share</code> 下为每个 <code>Linux</code> 用户以他的共享目录，这样 <code>path</code> 就要写成 <code>path= /home/share/%u</code> 。用户在连接到这共享时具体的路径会被他的用户名代替，要注意这个用户名路径一定要存在。否则，客户机在访问时会找不到网络路径。同样，如果我们不是以用户来划分目录，而是以客户机来划分目录，为网络上每台可以访问 <code>samba</code> 的机器都各自建个以它的 <code>netbios</code> 名的路径，作为不同机器的共享资源，就可以这样写：<code>path = /home/share/%m</code> 。</p><p><code>browseable = yes/no</code></p><p>说明：<code>browseable</code> 用来指定该共享是否可以浏览。</p><p><code>writable = yes/no</code></p><p>说明：<code>writable</code> 用来指定该共享路径是否可写。</p><p><code>available = yes/no</code></p><p>说明：<code>available</code> 用来指定该共享资源是否可用。</p><p><code>admin users = 该共享的管理者</code></p><p>说明：<code>admin users</code> 用来指定该共享的管理员（对该共享具有完全控制权限）。在 <code>Samba 3.0</code> 中，如果用户验证方式设置成 <code>&quot;security=share&quot;</code> 时。此项无效。</p><p>例如：<code>admin users =zhangsan,lisi</code>（多个用户中间用逗号隔开）。</p><p><code>valid users =</code> 允许访问该共享的用户</p><p>说明：<code>valid users</code> 用来指定允许访问该共享资源的用户。</p><p>例如：<code>valid users = zhangsan,@bob,@tech</code> （多个用户或者组中间用逗号隔开，如果要继而一个组就用 <code>&quot;@+组名&quot;</code> 表示）</p><p><code>invalid users =</code> 禁止访问该共享的用户</p><p>说明：<code>invalid users</code> 用来指定不允许访问该共享资源的用户。</p><p>例如：<code>invalid users = root,@bob</code></p><p><code>write list =</code> 允许写入该共享的用户</p><p>说明：<code>write list</code> 用来指定可以在该共享下写入文件的用户。</p><p>例如：<code>write list = zhangsan,@bob</code></p><p><code>public = yes/no</code></p><p>说明：<code>public</code> 用来指定该共享是否允许 <code>guest</code> 用户访问。</p><p><code>guest ok = yes/no</code></p><p>说明：意义同 <code>&quot;public&quot;</code>。</p><p>几个特殊共享：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs nix">[homes]<br><span class="hljs-attr">comment</span> = Home Directories<br><span class="hljs-attr">browseable</span> = no<br><span class="hljs-attr">writable</span> = yes<br>valid <span class="hljs-attr">users</span> = %S<br>; valid <span class="hljs-attr">users</span> = MYDOMAIN\%S<br><br>[printers]<br><span class="hljs-attr">comment</span> = All Printers<br><span class="hljs-attr">path</span> = /var/spool/samba<br><span class="hljs-attr">browseable</span> = no<br>guest <span class="hljs-attr">ok</span> = no<br><span class="hljs-attr">writable</span> = no<br><span class="hljs-attr">printable</span> = yes<br><br>[netlogon]<br><span class="hljs-attr">comment</span> = Network Logon Service<br><span class="hljs-attr">path</span> = /var/lib/samba/netlogon<br>guest <span class="hljs-attr">ok</span> = yes<br><span class="hljs-attr">writable</span> = no<br>share <span class="hljs-attr">modes</span> = no<br><br>[Profiles]<br><span class="hljs-attr">path</span> = /var/lib/samba/profiles<br><span class="hljs-attr">browseable</span> = no<br>guest <span class="hljs-attr">ok</span> = yes<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-VSFTP部署(贰)</title>
    <link href="/posts/93debf63/"/>
    <url>/posts/93debf63/</url>
    
    <content type="html"><![CDATA[<center><h1>VSFTPD 配置文件详解</h1></center><h2 id="一、默认配置"><a href="#一、默认配置" class="headerlink" title="一、默认配置"></a>一、默认配置</h2><ol><li><p>允许匿名用户和本地用户登录。</p><p><code>anonymous_enable=YES</code></p><p><code>local_enable=YES</code></p></li><li><p>匿名用户使用的登录名为 <code>ftp</code> 或 <code>anonymous</code> ，密码为空；匿名用户不能离开匿名用户家目录 <code>/var/ftp</code> ，且只能下载不能上传。</p></li><li><p>本地用户的登录名为本地用户名，密码为本地用户的密码；本地用户可以再自家目录中进行读写操作；本地用户可以离开自家目录切换至有权限访问的其他目录，并在权限允许的情况下进行上传/下载。</p><p>​    <code>write_enable=YES</code></p></li><li><p>写在文件 <code>/etc/vsftpd.ftpusers</code> 中的本地用户禁止登陆。</p></li></ol><hr><h2 id="二、配置文件格式"><a href="#二、配置文件格式" class="headerlink" title="二、配置文件格式"></a>二、配置文件格式</h2><p>​    <code>vsftpd.conf</code> 的内容非常单纯，每一行即为一项设定。若是空白行或是开头为 <code>#</code> 的一行，将会被忽略。内容的格式只有一种，如下所示：</p><p>​    <code>option=value</code></p><p>​    要注意的是，等号两边不能加空白。</p><hr><h2 id="三、匿名用户（anonymous）设置"><a href="#三、匿名用户（anonymous）设置" class="headerlink" title="三、匿名用户（anonymous）设置"></a>三、匿名用户（anonymous）设置</h2><p>​    <code>anonymous_enable=YES/NO</code> （<code>YES</code>）</p><p>​    控制是否允许匿名用户登入，<code>YES</code> 为允许匿名登入，<code>NO</code> 为不允许。默认值为 <code>YES</code> 。</p><p>​    <code>write_enable=YES/NO</code> （<code>YES</code>）</p><p>​    是否允许登陆用户有写权限。属于全局设置，默认值为 <code>YES</code> 。</p><p>​    <code>no_anon_password=YES/NO</code> （<code>NO</code>）</p><p>​    若是启动这项功能，则使用匿名登入时，不会询问密码。默认值为 <code>NO</code> 。</p><p>​    <code>ftp_username=ftp</code></p><p>​    定义匿名登入的使用者名称。默认值为 <code>ftp</code> 。</p><p>​    <code>anon_root=/var/ftp</code></p><p>​    使用匿名登入时，所登录的目录。默认值为 <code>/var/ftp</code> 。注意 <code>ftp</code> 目录不能是 <code>777</code> 的权限属性，即匿名用户的家目录不能有 <code>777</code> 的权限。</p><p>​    <code>anon_upload_enable=YES/NO</code> （<code>NO</code>）</p><p>​    如果设为 <code>YES</code> ，则允许匿名登入者有上传文件（非目录）的权限。只有在 <code>write_enable=YES</code> 时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为 <code>NO</code> 。</p><p>​    <code>anon_world_readable_only=YES/NO</code>（<code>YES</code>）</p><p>​    如果设为 <code>YES</code> ，则允许匿名登入者下载可阅读的档案（可以下载到本地阅读，不能直接在 <code>FTP</code> 服务器打开阅读）。默认值为 <code>YES</code> 。</p><p>​    <code>anon_mkdir_write_enable=YES/NO</code> （<code>NO</code>）</p><p>​    如果设置为 <code>YES</code> ，则允许匿名登入者有新增目录的权限，只有在 <code>write_enable=YES</code> 时，此项才有效。当然，匿名用户必须要有对上层目录的写入权。默认值为 <code>NO</code> 。</p><p>​    <code>anon_other_write_enable=YES/NO</code> （<code>NO</code>）</p><p>​    如果设为 <code>YES</code> ，则允许匿名登入者更多于上传或者建立目录之外的权限，比如：删除或者重命名。（如果 <code>anon_upload_enable=NO</code> ，则匿名用户不能上传文件，但可以删除或者重命名已经存在的文件；如果 <code>anon_mkdir_write_enable=NO</code>，则匿名用户不能上传或者新建文件夹，但可以删除或者重命名已经存在的文件夹。）默认值为 <code>NO</code> 。</p><p>​    <code>chown_uploads=YES/NO</code> （<code>NO</code>）</p><p>​    设置是否改变匿名用户上传文件（非目录）的属主。默认值为 <code>NO</code> 。</p><p>​    <code>chown_username=username</code></p><p>​    设置匿名用户上传文件（非目录）的属主名。建议不要设置为 <code>root</code> 。</p><p>​    <code>anon_umask=077</code> </p><p>​    设置匿名登入者新增或上传问文件时的 <code>umask</code> 值。默认值为 <code>077</code> ，则新建档案的对应权限为 <code>700</code> 。</p><p>​    <code>deny_email_enable=YES/NO</code>（<code>NO</code>）</p><p>​    若是启动这项功能，则必须提供一个档案 <code>/etc/vsftpd/banner_emails</code>，内容为 <code>email address</code> 。若是使用匿名登入，则会要求输入 <code>email address</code> ，若输入的 <code>email address</code> 在此文件中，则不允许进入。默认值为 <code>NO</code> 。</p><p>​    <code>banned_email_file=/etc/vsftpd/banner_emails</code></p><p>​    此文件用来输入 <code>email address</code> ，只有在 <code>deny_email_enable=YES</code> 时。才会使用到此文件。若是使用匿名登入，则会要求输入 <code>email address</code> ，若输入的 <code>email address</code> 在此档案中，则不允许进入。</p><hr><h2 id="四、本地用户设置"><a href="#四、本地用户设置" class="headerlink" title="四、本地用户设置"></a>四、本地用户设置</h2><p>​    <code>local_enable=YES/NO</code> （<code>YES</code>）</p><p>​    控制是否允许本地用户登入。</p><p>​    <code>local_root=/home/username</code></p><p>​    当本地用户登入时，将被更换到定义的目录下。默认值为各用户的家目录。</p><p>​    <code>write_enable=YES/NO</code>（<code>YES</code>）</p><p>​    是否允许登陆用户有写权限。属于全局设置。</p><p>​    <code>local_umask=022</code></p><p>​    本地用户新增文件时的 <code>umask</code> 值。默认值为 <code>077</code> 。</p><p>​    <code>file_open_mode=0755</code></p><p>​    本地用户上传文件后的文件权限，与 <code>chmod</code> 所使用的数值相同。默认值为 <code>0666</code> 。</p><hr><h2 id="五、欢迎语设置"><a href="#五、欢迎语设置" class="headerlink" title="五、欢迎语设置"></a>五、欢迎语设置</h2><p>​    <code>dirmessage_enable=YES/NO</code> （<code>YES</code>）</p><p>​    如果启动这个选项，那么使用者第一次进入一个目录时，互检查该目录下是否有 <code>.message</code> 这个文件，如果有，则会出现此文件的内容，通常这个档案会放置欢迎话语，或是对该目录的说明。默认值为开启。</p><p>​    <code>message_file=.message</code></p><p>​    设置目录消息文件，可将要显示的信息写入该文件。默认值为 <code>.message</code> 。</p><p>​    <code>banner_file=/etc/vsftpd/banner</code></p><p>​    当使用者登入时，会显示此设定所在的档案内容，通常为欢迎话语或是说明。默认值为无。如果欢迎信息较多，则使用该配置项。</p><p>​    <code>ftpd_banner=Welcome to BOB&#39;s FTP server</code></p><p>​    这里永安里定义欢迎话语的字符串，<code>banner_file</code> 是档案的形式，而 <code>ftpd_banner</code> 则是字符串的形式。</p><hr><h2 id="六、控制用户是否允许切换到上级目录"><a href="#六、控制用户是否允许切换到上级目录" class="headerlink" title="六、控制用户是否允许切换到上级目录"></a>六、控制用户是否允许切换到上级目录</h2><p>​    在默认配置下，本地用户登入 <code>FTP</code> 后可以使用 <code>cd</code> 命令切换到其他目录，这样会对系统带来安全隐患。可以通过以下三条配置文件来控制用户切换目录。</p><p>​    <code>chroot_list_enable=YES/NO</code> （<code>NO</code>）</p><p>​    设置是否启用 <code>chroot_list_file</code> 配置项指定的用户列表文件。</p><p>​    <code>chroot_list_file=/etc/vsftpd.chroot_list</code></p><p>​    用于指定用户列表文件，该文件用于控制哪些用户可以切换到用户家目录的上级目录。</p><p>​    <code>chroot_local_user=YES/NO</code>（<code>NO</code>）</p><p>​    用户指定用户列表文件中的用户是否允许切换到上级目录。默认值为 <code>NO</code> 。</p><p>​    <strong>通过搭配能实现以下几种效果</strong>：</p><p>​    ① 当 <code>chroot_list_enable=YES, chroot_local_user=YES</code> 时，在 <code>/etc/vsftpd.chroot_list</code> 文件中列出的用户，可以切换到其他目录；未在文件中列出的用户，不能切换到其他目录。</p><p>​    ② 当 <code>chroot_list_enable=YES, chroot_local_user=NO</code> 时，在 <code>/etc/vsftpd.chroot_list</code> 文件中列出的用户，不能切换到其他目录；为在文件中列出的用户，可以切换到其他目录。</p><p>​    ③ 当 <code>chroot_list_enable=NO, chroot_local_user=YES</code> 时。所有的用户均不能切换到其他目录。</p><p>​    ④ 当 <code>chroot_list_enable=NO, chroot_local_user=NO</code> 时。所有的用户均可以切换到其他目录。</p><hr><h2 id="七、数据传输模式设置"><a href="#七、数据传输模式设置" class="headerlink" title="七、数据传输模式设置"></a>七、数据传输模式设置</h2><p>​    <code>FTP</code> 在传输数据时，可以使用二进制方式，也可以使用 <code>ASCII</code> 模式来上传或下载数据。</p><p>​    <code>ascii_upload_enable=YES/NO</code> （<code>NO</code>）</p><p>​    设置是否启用 <code>ASCII</code> 模式上传数据。</p><p>​    <code>ascii_download_enable=YES/NO</code> （<code>NO</code>）</p><p>​    设置是否启用 <code>ASCII</code> 模式下载数据。</p><hr><h2 id="八、访问控制"><a href="#八、访问控制" class="headerlink" title="八、访问控制"></a>八、访问控制</h2><p>​    两种控制方式：一种控制主机访问，另一种控制用户访问。</p><p>​    <strong>① 控制主机访问</strong></p><p>​    <code>tcp_wrappers=YES/NO</code> （<code>YES</code>）</p><p>​    设置 <code>vsftpd</code> 是否与 <code>tcp wrapper</code> 相结合来进行主机的访问控制。默认值为 <code>YES</code> 如果启用，则 <code>vsftpd</code> 服务器会检查 <code>/etc/hosts.allow</code> 和 <code>/etc/hosts.deny</code> 中的设置，来决定请求连接的主机，是否允许该访问 <code>FTP</code> 服务器。这两个文件可以起到简易的防火墙功能。</p><p>比如：若要仅允许 <code>192.168.0.1 - 192.168.0.254</code> 的用户可以连接 <code>FTP</code> 服务器，则在 <code>/etc/hosts.allow</code> 文件中添加以下内容：</p><p>​        <code>vsftpd:192.168.9. :allow</code></p><p>​        <code>all:all :deny</code></p><p>​    <strong>② 控制用户访问</strong></p><p>​    对于用户的访问控制可以通过 <code>/etc</code> 目录下的 <code>vsftpd.user_list</code> 和 <code>ftpusers</code> 文件来实现。</p><p>​    <code>userlist_file=/etc/vsftpd.user_list</code></p><p>​    控制用户访问 <code>FTP</code> 的文件，里面写着用户名称。一个用户名称写一行。</p><p>​    <code>userlist_enable=YES/NO</code> （<code>NO</code>）</p><p>​    是否启用 <code>vsftpd.user_list</code> 文件。</p><p>​    <code>userlist_deny=YES/NO</code> （<code>YES</code>）</p><p>​    决定 <code>vsftpd.user_list</code> 文件中的用户是否能够访问 <code>FTP</code> 服务器。若设置为 <code>YES</code> ，则 <code>vsftpd.user_list</code> 文件中的用户不允许访问 <code>FTP</code> ，若设置为 <code>NO</code> ，则只有 <code>vsftpd.user_list</code> 文件中的用户才能访问 <code>FTP</code> 。**<code>/etc/vsftpd/ftpusers</code>** 文件专门用于定义不允许访问 <code>FTP</code> 服务器的用户列表（<strong>注意：</strong> 如果 <code>userlist_enable=YES, userlist_deny=NO</code> ，此时如果在 <code>vsftpd.user_list</code> 和 <code>ftpusers</code> 中都有某个用户是不能够访问 <code>FTP</code> 的，即 <code>ftpusers</code> 的优先级要高）。默认情况下 <code>vsftpd.user_list</code> 和 <code>ftpusers</code> 这两个文件已经预设置了一些不允许访问 <code>FTP</code> 服务器的系统内部账户。如果系统没有这两个文件，那么新建这两个文件，将用户添加进入即可。</p><hr><h2 id="九、访问速率设置"><a href="#九、访问速率设置" class="headerlink" title="九、访问速率设置"></a>九、访问速率设置</h2><p>​    <code>anon_max_rate=0</code></p><p>​    设置匿名登入者使用的最大传输速度，单位为 <code>B/s</code> ，<code>0</code> 表示不限制速度。默认值为 <code>0</code> 。</p><p>​    <code>local_max_rate=0</code></p><p>​    本地用户使用的最大传输速度，单位为 <code>B/s</code> ，<code>0</code> 表示不限制速度。预设值为 <code>0</code> 。</p><hr><h2 id="十、超时时间设置"><a href="#十、超时时间设置" class="headerlink" title="十、超时时间设置"></a>十、超时时间设置</h2><p>​    <code>accept_timeout=60</code></p><p>​    设置建立 <code>FTP</code> 连接的超时时间，单位为秒。默认值为 <code>60</code> 。</p><p>​    <code>connect_timeout=60</code></p><p>​    <code>PORT</code> 方式下建立数据连接的超时时间，单位为秒。默认值为 <code>60</code> 。</p><p>​    <code>data_connection_timeout=120</code></p><p>​    设置建立 <code>FTP</code> 数据连接的超时时间，单位为秒。默认值为 <code>120 </code>。</p><p>​    <code>idle_session_timeout=300</code></p><p>​    设置多长时间不对 <code>FTP</code> 服务器进行任何操作，则断开该 <code>FTP</code> 连接，单位为秒。默认值为 <code>300 </code>。</p><hr><h2 id="十一、日志文件设置"><a href="#十一、日志文件设置" class="headerlink" title="十一、日志文件设置"></a>十一、日志文件设置</h2><p>​    <code>xferlog_enable=YES/NO</code> （<code>YES</code>）</p><p>​    是否启用上传/下载日志记录。如果启用，则上传与下载的信息将被完整记录在 <code>xferlog_file</code> 所定义的档案中。预设为开启。</p><p>​    <code>xferlog_file=/var/log/vsftpd.log</code></p><p>​    设置日志文件名和路径，默认值为 <code>/var/log/vsftpd.log</code> 。</p><pre><code> `xferlog_std_format=YES/NO` （`NO`）</code></pre><p>​    如果启用，则日志文件将会写成 <code>xferlog</code> 的标准格式，如同 <code>wu-ftpd</code> 一般。默认值为关闭。</p><p>​    <code>log_ftp_protocol=YES/NO</code> （<code>NO</code>）</p><p>​    如果启用此选项，所有的 <code>FTP</code> 请求和响应都会被记录到日志中，默认日志文件在 <code>/var/log/vsftpd.log</code> 。启用此选项时，<code>xferlog_std_format</code> 不能被激活。这个选项有助于调试。默认值为 <code>NO</code> 。</p><hr><h2 id="十二、定义用户配置文件"><a href="#十二、定义用户配置文件" class="headerlink" title="十二、定义用户配置文件"></a>十二、定义用户配置文件</h2><p>​    在 <code>vsftpd</code> 中，可以通过定义用户配置文件来实现不同的用户使用不同的配置。</p><p>​    <code>user_config_dir=/etc/vsftpd/userconf</code></p><p>​    设置用户配置文件所在的目录。当设置了该配置项后，用户登录服务器后，系统就会到 <code>/etc/vsftpd/userconf</code> 目录下，读取与当前用户名相同的文件，并根据文件中的配置命令，对当前用户进行更进一步的配置。</p><p>​    例如：定义 <code>user_config_dir=/etc/vsftpd/userconf</code> ，且主机上有使用者 <code>test1, test2</code> ，那么我们就在 <code>user_config_dir</code> 的目录新增文件名为 <code>test1</code> 和 <code>test2</code> 两个文件。若是 <code>test1</code> 登入，则会读取 <code>user_config_dir</code> 下的 <code>test1</code> 这个文件内的设定。默认值为无。利用用户配置文件，可以实现对不同用户进行访问速度的控制，在各用户配置文件中定义 <code>local_max_rate=XX</code> ，即可。</p><hr><h2 id="十三、-FTP-的工作方式与端口设置"><a href="#十三、-FTP-的工作方式与端口设置" class="headerlink" title="十三、 FTP 的工作方式与端口设置"></a>十三、 <code>FTP</code> 的工作方式与端口设置</h2><p>​    <code>FTP</code> 有两种工作方式： <code>PORT FTP</code> （主动模式）和 <code>PASV FTP</code> （被动模式）。</p><p>​    <code>listen_port=21</code></p><p>​    设置 <code>FTP</code> 服务器建立连接所监听的端口，默认值为 <code>21</code> 。</p><p>​    <code>connect_from_port_20=YES/NO</code></p><p>​    指定 <code>FTP</code> 使用 <code>20</code> 端口进行数据传输，默认值为 <code>YES</code> 。</p><p>​    <code>ftp_data_port=20</code></p><p>​    设置在 <code>PORT</code> 方式下， <code>FTP</code> 数据连接使用的端口，默认值为 <code>20</code> 。</p><p>​    <code>pasv_enable=YES/NO</code>（<code>YES</code>）</p><p>​    若设置为 <code>YES</code> ，则使用 <code>PASV</code> 工作模式；若设置为 <code>NO</code> ，则使用 <code>PORT</code> 模式。默认值为 <code>YES</code> ，即使用 <code>PASV</code> 工作模式。</p><p>​    <code>pasv_max_port=0</code></p><p>​    在 <code>PASV</code> 工作模式下，数据连接可以使用的端口范围的最大端口，<code>0</code> 表示任意端口。默认值为 <code>0</code> 。</p><p>​    <code>pasv_min_port=0</code></p><p>​    在 <code>PASV</code> 工作模式下，数据连接可以使用的端口范围的最小端口，<code>0</code> 表示任意端口。默认值为 <code>0</code> 。</p><hr><h2 id="十四、与连接相关的设置"><a href="#十四、与连接相关的设置" class="headerlink" title="十四、与连接相关的设置"></a>十四、与连接相关的设置</h2><p>​    <code>listen=YES/NO</code> （<code>YES</code>）</p><p>​    设置 <code>vsftpd</code> 服务器是否以 <code>standalone</code> 模式运行。以 <code>standalone</code> 模式运行是一种较好的方式，此时 <code>listen</code> 必须设置为 <code>YES</code> ，此为默认值。建议不要更改，有很多服务器运行相关的配置命令，需要在此模式下才有效。若设置为 <code>NO</code> ，则 <code>vsftpd</code> 不是以独立的服务运行，要受到 <code>xinetd</code> 服务的管控，功能上会受到限制。</p><p>​    <code>max_clients=0</code></p><p>​    设置 <code>vsftpd</code> 允许的最大连接数，默认值为 <code>0</code> 表示不受限制。若设置为 <code>100</code> 时，则同时允许有 <code>100</code> 个连接，超出的将被拒绝。只有在 <code>standalone</code> 模式运行才有效。</p><p>​    <code>max_per_ip=0</code></p><p>​    设置每个 <code>IP</code> 运行与 <code>FTP</code> 服务器同时建立连接的数目。默认值为 <code>0</code> ，表示不受限制。只有在 <code>standalone</code> 模式运行才有效。</p><p>​    <code>listen_address=IP地址</code> </p><p>​    设置 <code>FTP</code> 服务器在指定的 <code>IP</code> 地址上侦听用户的 <code>FTP</code> 请求。若不设置，则对服务器绑定的所有 <code>IP</code> 地址进行侦听。只有在 <code>standalone</code> 模式运行才有效。</p><p>​    <code>setproctitle_enable=YES/NO</code> （<code>NO</code>）</p><p>​    设置每个与 <code>FTP</code> 服务器的连接。是否以不同的进程表现出来。默认值为 <code>NO</code> ，此时使用 <code>ps aux| grep ftp</code> 只会有一个 <code>vsftpd</code> 的进程。若设置为 <code>YES</code> ，则每个连接都会有一个 <code>vsftpd</code> 的进程。</p><hr><h2 id="十五、虚拟用户设置"><a href="#十五、虚拟用户设置" class="headerlink" title="十五、虚拟用户设置"></a>十五、虚拟用户设置</h2><p>​    虚拟用户使用 <code>PAM</code> 认证方式。</p><p>​    <code>pam_service_name=vsftpd</code></p><p>​    设置 <code>PAM</code> 使用的名称，默认值为 <code>/etc/pam.d/vsftpd</code> 。</p><p>​    <code>guest_enable=YES/NO</code> （<code>NO</code>）</p><p>​    启用虚拟用户。默认不开启。</p><p>​    <code>guest_username=ftp</code></p><p>​    这里用来映射虚拟用户。默认值为 <code>ftp</code> 。</p><p>​    <code>virtual_use_local_privs=YES/NO</code> （<code>NO</code>）</p><p>​    当该参数激活 <code>YES</code> 时，虚拟用户使用与本地用户相同的权限。当此参数关闭 <code>NO</code> 时，虚拟用户使用与匿名用户相同的权限。默认情况下此参数是关闭的 （<code>NO</code>）。</p><hr><h2 id="十六、其他设置"><a href="#十六、其他设置" class="headerlink" title="十六、其他设置"></a>十六、其他设置</h2><p>​    <code>text_userdb_names=YES/NO</code> （<code>NO</code>）</p><p>​    设置在执行 <code>ls -al</code> 之类的命令时，是显示 <code>UID、GID</code> 还是显示出具体的用户名和组名。默认值为 <code>NO</code>，即以 <code>UID</code> 和 <code>GID</code> 方式显示。若系统显示用户名和组名，则设置为 <code>YES</code>。</p><p>​    <code>ls_recurse_enable=YES/NO</code>（<code>NO</code>）</p><p>​    若是启用此功能，则允许登入者使用 <code>ls -R</code> （可以查看当前目录下子目录的文件）这个指令。默认为 <code>NO</code> 。</p><p>​    <code>hide_ids=YES/NO</code>（<code>NO</code>）</p><p>​    如果启用此功能，所有文件的拥有者与群组都为 <code>ftp</code> ，也就是使用者登入使用 <code>ls -al</code> 子类的指令，所看到的档案拥有者跟群组均为 <code>ftp</code> 。默认值为关闭。</p><p>​    <code>download_enable=YES/NO</code> （<code>YES</code>）</p><p>​    如果设置为 <code>NO</code> ，所有的文件都不能下载到本地，文件夹不受影响。默认值为 <code>YES</code>。</p><hr><h2 id="十七、响应代码解释说明"><a href="#十七、响应代码解释说明" class="headerlink" title="十七、响应代码解释说明"></a>十七、响应代码解释说明</h2><p>​    <code>110</code> 新文件指示器上的重启标记</p><p>​    <code>120</code> 服务器准备就绪的时间（分钟数）</p><p>​    <code>125</code> 打开数据连接，开始传输</p><p>​    <code>200</code> 成功</p><p>​    <code>202</code> 命令没有执行</p><p>​    <code>211</code> 系统状态回复</p><p>​    <code>212</code> 目录状态回复</p><p>​    <code>213</code> 文件状态回复</p><p>​    <code>214</code> 帮助信息回复</p><p>​    <code>215</code> 系统类型回复</p><p>​    <code>220</code> 服务就绪</p><p>​    <code>221</code> 退出网络</p><p>​    <code>225</code> 打开数据连接</p><p>​    <code>226</code> 结束数据连接</p><p>​    <code>227</code> 进入被动模式（<code>IP</code> 地址、<code>IP</code> 端口）</p><p>​    <code>230</code> 登录因特网</p><p>​    <code>250</code> 文件行为完成</p><p>​    <code>257</code> 路径名建立</p><p>​    <code>331</code> 要求密码</p><p>​    <code>332</code> 要求账号</p><p>​    <code>350</code> 文件行为暂停</p><p>​    <code>421</code> 服务关闭</p><p>​    <code>425</code> 无法打开数据连接</p><p>​    <code>450</code> 文件不可用</p><p>​    <code>451</code> 遇到本地错误</p><p>​    <code>452</code> 磁盘空间不足</p><p>​    <code>500</code> 无效命令</p><p>​    <code>501</code> 错误参数</p><p>​    <code>502</code> 命令没有执行</p><p>​    <code>503</code> 错误指令序列</p><p>​    <code>504</code> 无效命令参数</p><p>​    <code>530</code> 未登录网络</p><p>​    <code>532</code> 存储文件需要账号</p><p>​    <code>550</code> 文件不可用</p><p>​    <code>551</code> 不知道的页类型</p><p>​    <code>552</code> 超过存储分配</p><p>​    <code>553</code> 文件名不允许</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Vsftp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-网络文件共享服务</title>
    <link href="/posts/3e8857f4/"/>
    <url>/posts/3e8857f4/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于上节的 <a href="http://1.15.86.139/posts/4801bbb8/"><code>VSFTP服务</code></a> 可以参考下。</p><p>相关的 <code>Samba、NFS、Autofs</code> 在这里只是做简单的介绍。 </p></blockquote><h1 id="一、Samba"><a href="#一、Samba" class="headerlink" title="一、Samba"></a>一、<code>Samba</code></h1><p>​    <code>Tridgwell</code> 为了解决 <code>Linux</code> 系统与 <code>Windows</code> 系统之间的文件共享问题，基于 <code>SMB</code> 协议开发出了 <code>SMBServer</code> 服务程序。这是一款开源的文件共享软件，经过简单配置就能够实现 <code>Linux</code> 系统与 <code>Windows</code> 系统之间的文件共享工作。</p><p><strong>Samba 常见的应用：</strong></p><ul><li>分享档案与打印机服务；</li><li>可以提供用户登入 <code>Samba</code> 主机时的身份认证，以提供不同身份者的个别数据；</li><li>可以进行 <code>Windows</code> 网络上的主机名解析 (<code>NetBIOS name</code>)；</li><li>可以进行装置的分享 (例如 <code>Zip</code>, <code>CDROM</code>…)</li></ul><h2 id="1-Samba-服务配置"><a href="#1-Samba-服务配置" class="headerlink" title="1. Samba 服务配置"></a>1. <code>Samba</code> 服务配置</h2><blockquote><p>关闭防火墙、<code>SELinux</code></p></blockquote><h3 id="1）yum-安装"><a href="#1）yum-安装" class="headerlink" title="1）yum 安装"></a>1）<code>yum</code> 安装</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install samba </span><br></code></pre></td></tr></table></figure><h3 id="2）Samba-配置文件"><a href="#2）Samba-配置文件" class="headerlink" title="2）Samba 配置文件"></a>2）<code>Samba</code> 配置文件</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"># <span class="hljs-keyword">cd</span> /etc/samba/<br># <span class="hljs-keyword">ls</span><br>lmhosts  smb.<span class="hljs-keyword">conf</span>  smb.<span class="hljs-keyword">conf</span>.example<br></code></pre></td></tr></table></figure><h5>配置文件中的参数：</h5><table><thead><tr><th><code>[global]</code></th><th>参数</th><th>作用</th></tr></thead><tbody><tr><td></td><td><code>workgroup = MYGROUP</code></td><td>工作组名称</td></tr><tr><td></td><td><code>server string = Samba Server Version %v</code></td><td>服务器介绍信息，参数 <code>%v</code> 为显示 <code>SMB</code> 版本号</td></tr><tr><td></td><td><code>log file = /var/log/samba/log.%m</code></td><td>定义日志文件的存放位置与名称，参数 <code>%m</code> 为来访的主机名</td></tr><tr><td></td><td><code>max log size = 50</code></td><td>定义日志文件的最大容量为 <code>50KB</code></td></tr><tr><td></td><td><code>security = user</code></td><td>安全验证的方式，总共有 <code>4</code> 种</td></tr><tr><td></td><td>1）<code>share</code></td><td>来访主机无需验证口令；比较方便，但安全性很差</td></tr><tr><td></td><td>2）<code>user</code></td><td>需验证来访主机提供的口令后才可以访问；提升了安全性</td></tr><tr><td></td><td>3）<code>server</code></td><td>使用独立的远程主机验证来访主机提供的口令（集中管理账户）</td></tr><tr><td></td><td>4）<code>domain</code></td><td>使用域控制器进行身份验证</td></tr><tr><td></td><td><code>passdb backend = tdbsam</code></td><td>定义用户后台的类型，共有 <code>3</code> 种</td></tr><tr><td></td><td>1）<code>smbpasswd</code></td><td>使用 <code>smbpasswd</code> 命令为系统用户设置 <code>Samba</code> 服务程序的密码</td></tr><tr><td></td><td>2）<code>tdbsam</code></td><td>创建数据库文件并使用 <code>pdbedit</code> 命令建立<code>Samba</code>服务程序的用户</td></tr><tr><td></td><td>3）<code>ldapsam</code></td><td>基于 <code>LDAP</code> 服务进行账户验证</td></tr><tr><td></td><td><code>load printers = yes</code></td><td>设置在 <code>Samba</code> 服务启动时是否共享打印机设备</td></tr><tr><td></td><td><code>cups options = raw</code></td><td>打印机的选项</td></tr><tr><td><code>[homes]</code></td><td></td><td>共享参数</td></tr><tr><td></td><td><code>comment = Home Directories</code></td><td>描述信息</td></tr><tr><td></td><td><code>browseable = no</code></td><td>指定共享信息是否在“网上邻居”中可见</td></tr><tr><td></td><td><code>writable = yes</code></td><td></td></tr><tr><td><code>[printers]</code></td><td></td><td>打印机共享参数</td></tr></tbody></table><h5>需要新的共享目录需要手动建立。可以包括如下内容：</h5><table><thead><tr><th><code>[MyShare]</code></th><th>指定共享名，一般就是网络邻居里面可以看见的文件夹的名字。</th></tr></thead><tbody><tr><td><code>comment = grind’s file</code></td><td>指的是对改共享的备注。</td></tr><tr><td><code>path = /home/share</code></td><td>指定共享的路径，其中可以配合 <code>samba</code> 变量使用。<br />比如你可以指定 <code>path=/data/%m</code>，这样如果一台<br />机器的 <code>NETBIOS</code> 名字是 <code>grind</code>,它访问 <code>MyShare</code> <br />这个共享的时候就是进入 <code>/data/grind</code> 目录,而<br />对于 <code>NETBIOS</code> 名是 <code>glass</code> 的机器，则进入 <code>/data/glass</code>目录。</td></tr><tr><td><code>allow hosts = host(subnet)</code><br /><code>deny hosts = host(subnet)</code></td><td>运行或禁止访问的主机列表，可以是 <code>IP</code> 地址，或者网段</td></tr><tr><td>`writable = yes</td><td>no`</td></tr><tr><td><code>user = user(@group)</code><br /><code>valid users = user(@group)</code><br /><code>invalid users = user(@group)</code></td><td><code>user</code> 设置所有可能使用该共享资源的用户，也可以用 <br /><code>@group</code> 代表 <code>group</code> 这个组的所有成员，不同的项目之间<br />用空格或者逗号隔开。<code>valid users</code> 指定能够使用该共享资源的用户和组。<br /><code>invalid users</code> 指定不能够使用该共享资源的用户和组。</td></tr><tr><td><code>read list = user(@group)</code><br /><code>write list = user(@group)</code></td><td><code>read list</code> 指定只能读取该共享资源的用户和组。<br /><code>write list</code> 指定能读取和写该共享资源的用户和组。</td></tr><tr><td>`public = yes</td><td>no`</td></tr></tbody></table><h3 id="3）匿名访问"><a href="#3）匿名访问" class="headerlink" title="3）匿名访问"></a>3）匿名访问</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-comment"># vi /etc/samba/sma.conf</span><br>[webdata]<br>        <span class="hljs-attr">comment</span> = share               <span class="hljs-comment"># 描述信息</span><br>        <span class="hljs-attr">path</span> = /data/web_data         <span class="hljs-comment"># 文件共享路径</span><br>        <span class="hljs-attr">writable</span> = YES                <span class="hljs-comment"># 可读可写</span><br>        guest <span class="hljs-attr">ok</span> = YES                <span class="hljs-comment"># 匿名访问</span><br>        <span class="hljs-attr">browseable</span> = YES              <span class="hljs-comment"># 网上邻居可见</span><br>        <br>chmod o+w /data/web_data<br></code></pre></td></tr></table></figure><h5>重启：</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># systemctl restart smb</span><br><span class="hljs-meta"># systemctl enable smb</span><br></code></pre></td></tr></table></figure><h5>测试：</h5><p><img src="/img/blog_image/Linux_shareFile/hexo_post.png" alt="登录"></p><h3 id="4）用户访问"><a href="#4）用户访问" class="headerlink" title="4）用户访问"></a>4）用户访问</h3><h4>Windows 访问：</h4><h5>新建目录：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir -p <span class="hljs-regexp">/data/</span>web_data<br>chmod o+w <span class="hljs-regexp">/data/</span>web_data<br></code></pre></td></tr></table></figure><h5>创建用户：</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">useradd -s <span class="hljs-regexp">/sbin/</span>nologin zhangsan<br>useradd -s <span class="hljs-regexp">/sbin/</span>nologin lisi<br></code></pre></td></tr></table></figure><h5>创建 SMB 用户：</h5><blockquote><p> <code>pdbedit</code> 命令使用的参数如下：</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>-a</code> 用户名</td><td>建立 <code>Samba</code> 账户</td></tr><tr><td><code>-x</code> 用户名</td><td>删除 <code>Samba</code> 账户</td></tr><tr><td><code>-r</code> 用户名</td><td>修改 <code>Samba</code> 账户</td></tr><tr><td><code>-u</code></td><td>使用的用户</td></tr><tr><td><code>-L</code></td><td>列出账户列表</td></tr><tr><td><code>-Lv</code></td><td>列出账户详细信息的列表</td></tr></tbody></table><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># pdbedit -a -u zhangsan</span><br><span class="hljs-attr">new password:</span><br><span class="hljs-attr">retype new password:</span><br><span class="hljs-attr">Unix username:</span>        <span class="hljs-string">zhangsan</span><br><span class="hljs-attr">NT username:</span>          <br><span class="hljs-attr">Account Flags:</span>        [<span class="hljs-string">U</span>          ]<br><span class="hljs-attr">User SID:</span>             <span class="hljs-string">S-1-5-21-4223152762-2507957130-1702466032-1001</span><br><span class="hljs-attr">Primary Group SID:</span>    <span class="hljs-string">S-1-5-21-4223152762-2507957130-1702466032-513</span><br><span class="hljs-attr">Full Name:</span>            <br><span class="hljs-attr">Home Directory:</span>       <span class="hljs-string">\\xupeidong2019013505\zhangsan</span><br><span class="hljs-attr">HomeDir Drive:</span>        <br><span class="hljs-attr">Logon Script:</span>         <br><span class="hljs-attr">Profile Path:</span>         <span class="hljs-string">\\xupeidong2019013505\zhangsan\profile</span><br><span class="hljs-attr">Domain:</span>               <span class="hljs-string">XUPEIDONG2019013505</span><br><span class="hljs-attr">Account desc:</span>         <br><span class="hljs-attr">Workstations:</span>         <br><span class="hljs-attr">Munged dial:</span>          <br><span class="hljs-attr">Logon time:</span>           <span class="hljs-number">0</span><br><span class="hljs-attr">Logoff time:</span>          <span class="hljs-string">Wed,</span> <span class="hljs-number">06</span> <span class="hljs-string">Feb</span> <span class="hljs-number">2036 10:06:39 </span><span class="hljs-string">EST</span><br><span class="hljs-attr">Kickoff time:</span>         <span class="hljs-string">Wed,</span> <span class="hljs-number">06</span> <span class="hljs-string">Feb</span> <span class="hljs-number">2036 10:06:39 </span><span class="hljs-string">EST</span><br><span class="hljs-attr">Password last set:</span>    <span class="hljs-string">Wed,</span> <span class="hljs-number">17</span> <span class="hljs-string">Mar</span> <span class="hljs-number">2021 03:52:11 </span><span class="hljs-string">EDT</span><br><span class="hljs-attr">Password can change:</span>  <span class="hljs-string">Wed,</span> <span class="hljs-number">17</span> <span class="hljs-string">Mar</span> <span class="hljs-number">2021 03:52:11 </span><span class="hljs-string">EDT</span><br><span class="hljs-attr">Password must change:</span> <span class="hljs-string">never</span><br><span class="hljs-attr">Last bad password   :</span> <span class="hljs-number">0</span><br><span class="hljs-attr">Bad password count  :</span> <span class="hljs-number">0</span><br><span class="hljs-attr">Logon hours         :</span> <span class="hljs-string">FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF</span><br><br><span class="hljs-comment"># pdbedit -a -u lisi</span><br><span class="hljs-attr">new password:</span><br><span class="hljs-attr">retype new password:</span><br><span class="hljs-attr">Unix username:</span>        <span class="hljs-string">lisi</span><br><span class="hljs-string">...</span><br></code></pre></td></tr></table></figure><h5>修改主配置文件：</h5><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-comment"># vi /etc/samba/sma.conf</span><br>[webdata]<br>        <span class="hljs-attr">comment</span> = share               <span class="hljs-comment"># 描述信息</span><br>        <span class="hljs-attr">path</span> = /data/web_data         <span class="hljs-comment"># 文件共享路径</span><br>        <span class="hljs-attr">writable</span> = YES                <span class="hljs-comment"># 可读可写</span><br>        valid <span class="hljs-attr">users</span> = zhangsan        <span class="hljs-comment"># 指定能够使用该共享资源的用户和组</span><br>        <span class="hljs-attr">browseable</span> = YES              <span class="hljs-comment"># 网上邻居可见</span><br></code></pre></td></tr></table></figure><h5>重启：</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># systemctl restart smb</span><br></code></pre></td></tr></table></figure><h5>验证：</h5><p><img src="/img/blog_image/Linux_shareFile/user_Samba.png" alt="登录"></p><p><img src="/img/blog_image/Linux_shareFile/user_look.png" alt="查看"></p><blockquote><p>若想要登录其他的用户 在 <code>CMD</code> 中输入 <code>net use * /del</code> 即可。</p></blockquote><h4>Linux 访问：</h4><h5>安装 Samba 客户端：</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install samba-client</span><br></code></pre></td></tr></table></figure><h5>基本语法：</h5><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td><code>-L host</code></td><td>查看 <code>Samba</code> 服务器的可用资源</td></tr><tr><td><code>-I ip_address</code></td><td>指定 <code>samba</code> 服务器的 <code>IP</code> 地址</td></tr><tr><td><code>-U username</code></td><td>指定 <code>samba</code> 用户名</td></tr></tbody></table><h5>使用 smbclient 命令，查看 10.4.7.102 上samba服务器的共享可用资源</h5><p><img src="/img/blog_image/Linux_shareFile/Linux_smbclient.png" alt="Linux查看共可用资源"></p><p><img src="/img/blog_image/Linux_shareFile/Linux_smbclient_look.png" alt="Linux访问共可用资源"></p><hr><h1 id="二、NFS"><a href="#二、NFS" class="headerlink" title="二、NFS"></a>二、<code>NFS</code></h1><p><strong>什么是 <code>NFS</code></strong>    </p><p>​    <code>NFS</code> 是 <code>Network File System</code> 的缩写，即网络文件系统。一种使用于分散式文件系统的协定，由 <code>Sun</code> 公司开发，于 <code>1984</code> 年向外公布。功能是通过网络让不同的机器、不同的操作系统能够彼此分享个别的数据，让应用程序在客户端通过网络访问位于服务器磁盘中的数据，是在类 <code>Unix</code> 系统间实现磁盘文件共享的一种方法。</p><p><strong><code>NFS</code> 挂载原理</strong></p><p>​    <code>NFS</code> 是通过网络来进行服务端和客户端之间的数据传输。两者之间要传输数据就要有相对应的网络端口来进行传输。<code>NFS</code> 服务器到底使用什么网络端口来传输数据的，<code>NFS</code> 服务器端其实是随机选择端口来进行数据传输。那 <code>NFS</code> 客户端又是如何知道 <code>NFS</code> 服务器端到底使用的是哪个端口呢？其实 <code>NFS</code> 服务器是通过远程过程调用 <code>( remote procedure call)</code> 简称 <code>RPC</code> 协议/服务来实现的。也就是说 <code>RPC</code> 服务会统一管理 <code>NFS</code> 的端口，客户端和服务端通过 <code>RPC</code> 来先沟通 <code>NFS</code> 使用了哪些端口，之后再利用这些端口（小于 <code>1024</code>）来进行数据的传输。</p><p>​    也就是 <code>RPC</code> 管理服务端的 <code>NFS</code> 端口分配，客户端要传数据，那客户端的 <code>RPC</code> 会先跟服务端的 <code>RPC</code> 去要服务器的端口，要到端口后再建立连接，然后传输数据。</p><p><strong>那 <code>RPC</code> 和 <code>NFS</code> 之间又是如何相互通讯的？</strong></p><p>​    首先当 <code>NFS</code> 启动后，就会随机的使用一些端口，然后 <code>NFS</code> 就会向 <code>RPC</code> 去注册这些端口。 <code>RPC</code> 就会记录这些端口。并且 <code>RPC</code> 会开启 <code>111</code> 端口，等待客户端 <code>RPC</code> 的请求，如果客户端有请求，那服务端的 <code>RPC</code> 就会将记录的 <code>NFS</code> 端口信息告知客户端。</p><p><strong><code>RPC</code> 和 <code>NFS</code> 的启动顺序是怎样的？</strong></p><p>​    在启动 <code>NFS Server</code> 服务之前，首先要启动 <code>RPC</code> 服务（即 <code>portmap</code> 服务，下同）否则 <code>NFS Server</code> 就无法向 <code>RPC</code> 服务区注册，另外，如果 <code>RPC</code> 服务重新启动，原来已经注册好的 <code>NFS</code> 端口数据就会全部丢失。因此此时 <code>RPC</code> 服务管理的 <code>NFS</code> 程序也要重新启动以重新向 <code>RPC</code> 注册。特别注意：一般修改 <code>NFS</code> 配置文档后，是不需要重启 <code>NFS</code> 的，直接在命令执行 <code>/etc/init.d/nfs reload</code> </p><p><strong>总结：客户端 <code>NFS</code> 和服务端 <code>NFS</code> 通信过程</strong></p><p>1）首先服务器启动 <code>RPC</code> 服务，并开启 <code>111</code> 端口</p><p>2）启动 <code>NFS</code> 服务，并向 <code>RPC</code> 注册端口信息</p><p>3）客户端启动 <code>RPC</code> (<code>portmap</code> 服务)，向服务端的 <code>RPC</code> (<code>portmap</code> 服务)请求服务端的 <code>NFS</code> 端口</p><p>4）服务端的 <code>RPC</code> 服务反馈 <code>NFS</code> 端口信息给客户端</p><p>5）客户端通过获取的 <code>NFS</code> 端口来建立和服务端的 <code>NFS</code> 连接并进行数据的传输。</p><h2 id="1-NFS-服务配置"><a href="#1-NFS-服务配置" class="headerlink" title="1. NFS 服务配置"></a>1. <code>NFS</code> 服务配置</h2><blockquote><p>同样的需要关闭防火墙、<code>SELinux</code></p></blockquote><h3 id="1）yum-安装-1"><a href="#1）yum-安装-1" class="headerlink" title="1）yum 安装"></a>1）<code>yum</code> 安装</h3><p>​    <code>NFS</code> 服务需要安装 <code>rpcbind</code>、<code>nfs-utils</code> 两个软件。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install rpcbind</span><br><span class="hljs-meta"># yum -y install nfs-utils</span><br></code></pre></td></tr></table></figure><p>下面我准备了两台虚拟机</p><table><thead><tr><th>主机名称</th><th>操作系统</th><th><code>IP</code> 地址</th></tr></thead><tbody><tr><td><code>NFS</code> 服务器</td><td><code>CentOS7</code></td><td><code>10.4.7.102</code></td></tr><tr><td><code>NFS</code> 客户端</td><td><code>CentOS7</code></td><td><code>10.4.7.101</code></td></tr></tbody></table><h3 id="2）NFS-配置文件"><a href="#2）NFS-配置文件" class="headerlink" title="2）NFS 配置文件"></a>2）<code>NFS</code> 配置文件</h3><p>​    <code>NFS</code> 服务程序的配置文件为 <code>/etc/exports</code> ，默认情况下里面没有任何内容。需要按照“共享目录的路径 允许访问的 <code>NFS</code> 客户端（共享权限参数）”的格式，定义要共享的目录与相应的权限。</p><blockquote><p>比如：把 <code>/home/test</code> 共享给 <code>10.4.7.101</code> 主机，权限为读写，如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/home/</span>test     <span class="hljs-number">10.4</span>.<span class="hljs-number">7.101</span>(rw)<br></code></pre></td></tr></table></figure></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># mkdir <span class="hljs-regexp">/home/</span><span class="hljs-keyword">public</span><br># chmod o+w <span class="hljs-regexp">/home/</span><span class="hljs-keyword">public</span><br># mkdir <span class="hljs-regexp">/home/</span>share<br># chmod o+w <span class="hljs-regexp">/home/</span>share<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>exports<br><br><span class="hljs-regexp">/home/</span><span class="hljs-keyword">public</span>      <span class="hljs-number">10.4</span>.<span class="hljs-number">7.0</span>/<span class="hljs-number">24</span>(rw,sync,no_root_squash)<br><span class="hljs-regexp">/home/</span>share       <span class="hljs-number">10.4</span>.<span class="hljs-number">7.0</span>/<span class="hljs-number">24</span>(ro,sync,no_root_squash)<br></code></pre></td></tr></table></figure><h5>用于配置NFS服务程序配置文件的参数：</h5><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>ro</code></td><td>只读</td></tr><tr><td><code>rw</code></td><td>读写</td></tr><tr><td><code>root_squash</code></td><td>当 <code>NFS</code> 客户端以 <code>root</code> 管理员访问时，映射为 <code>NFS</code> 服务器的匿名用户</td></tr><tr><td><code>no_root_squash</code></td><td>当 <code>NFS</code> 客户端以 <code>root</code> 管理员访问时，映射为 <code>NFS</code> 服务器的 <code>root</code> 管理员</td></tr><tr><td><code>all_squash</code></td><td>无论 <code>NFS</code> 客户端使用什么账户访问，均映射为 <code>NFS</code> 服务器的匿名用户</td></tr><tr><td><code>sync</code></td><td>同时将数据写入到内存与硬盘中，保证不丢失数据</td></tr><tr><td><code>async</code></td><td>优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据</td></tr></tbody></table><h5>启动 RPC、NFS 服务，并设置开机自启</h5><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># systemctl restart rpcbind</span><br><span class="hljs-meta"># systemctl enable rpcbind</span><br><span class="hljs-meta"># systemctl restart nfs-server</span><br><span class="hljs-meta"># systemctl enable nfs-server</span><br></code></pre></td></tr></table></figure><h5>在客户端查看服务器端的共享目录</h5><p><img src="/img/blog_image/Linux_shareFile/NFS_Client.png" alt="Linux查看共可用资源"></p><h5>客户端挂载：</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># mkdir /nfsfile       # 读写</span><br><span class="hljs-comment"># chmod o+w /nfsfile</span><br><br><span class="hljs-comment"># mkdir /nfsfile1      # 只读</span><br><span class="hljs-comment"># chmod o+w /nfsfile1</span><br><br><span class="hljs-comment"># vi /etc/fstab</span><br><span class="hljs-attribute">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">102</span>:/home/public /nfsfile nfs defaults <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attribute">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">102</span>:/home/share /nfsfile<span class="hljs-number">1</span> nfs defaults <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><br><span class="hljs-comment"># mount -a</span><br></code></pre></td></tr></table></figure><hr><h1 id="三、Autofs"><a href="#三、Autofs" class="headerlink" title="三、Autofs"></a>三、<code>Autofs</code></h1><p>​    为了远程共享资源就会自动随服务器开机而进行挂载，需要把挂载信息写入到 <code>/etc/fstab</code> 中。虽然这很方便，但是如果挂载的远程资源太多，则会给网络带宽和服务器的硬件资源带来很大负载。如果在资源挂载后长期不使用，也会造成服务器硬件资源的浪费。</p><p>​    <code>autofs</code> 自动挂载服务可以帮我们解决这一问题。与 <code>mount</code> 命令不同，<code>autofs</code> 服务程序是一种Linux系统守护进程，当检测到用户试图访问一个尚未挂载的文件系统时，将自动挂载该文件系统。</p><p>​    换句话说，我们将挂载信息填入 <code>/etc/fstab</code> 文件后，系统在每次开机时都自动将其挂载，而autofs服务程序则是在用户需要使用该文件系统时才去动态挂载，从而节约了网络资源和服务器的硬件资源。</p><h2 id="1-Autofs-服务配置"><a href="#1-Autofs-服务配置" class="headerlink" title="1. Autofs 服务配置"></a>1. <code>Autofs</code> 服务配置</h2><h3 id="1）yum-安装-2"><a href="#1）yum-安装-2" class="headerlink" title="1）yum 安装"></a>1）<code>yum</code> 安装</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install autofs</span><br></code></pre></td></tr></table></figure><h3 id="2）Autofs-配置文件"><a href="#2）Autofs-配置文件" class="headerlink" title="2）Autofs 配置文件"></a>2）<code>Autofs</code> 配置文件</h3><p>​    <code>autofs</code> 的主配置文件是 <code>/etc/auto.master</code> 。</p><p>​    处于生产环境中的 <code>Linux</code> 服务器，一般会同时管理许多设备的挂载操作。如果把这些设备挂载信息都写入到 <code>autofs</code> 服务的主配置文件中，无疑会让主配置文件臃肿不堪，不利于服务执行效率，也不利于日后修改里面的配置内容，因此在 <code>autofs</code> 服务程序的主配置文件中需要按照“挂载目录子配置文件”的格式进行填写。挂载目录是设备挂载位置的上一级目录。</p><p>​    例如，光盘设备一般挂载到 <code>/media/cdrom</code> 目录中，那么挂载目录写成 <code>/media</code> 即可。对应的子配置文件则是对这个挂载目录内的挂载设备信息作进一步的说明。子配置文件需要用户自行定义，文件名字没有严格要求，但后缀建议以 <code>.misc</code> 结束。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/</span>auto.master<br><span class="hljs-regexp">/media  /</span>etc/iso.misc<br></code></pre></td></tr></table></figure><h5>配置子配置文件：</h5><p>​    在子配置文件中，应按照<strong>“挂载目录 挂载文件类型及权限 :设备名称”</strong>的格式进行填写。例如，要把光盘设备挂载到 <code>/media/iso</code> 目录中，可将挂载目录写为 <code>iso</code>，而 <code>-fstype</code> 为文件系统格式参数，<code>iso9660</code> 为光盘设备格式，<code>ro</code>、<code>nosuid</code> 及 <code>nodev</code> 为光盘设备具体的权限参数，<code>/dev/cdrom</code> 则是定义要挂载的设备名称。配置完成后再顺手将 <code>autofs</code> 服务程序启动并加入到系统启动项中：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># vi /etc/iso.misc</span><br>iso  -fstype=iso9660 <span class="hljs-symbol">:/dev/cdrom</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># df -h</span><br>Filesystem               Size  Used Avail Use% Mounted on<br>devtmpfs                 <span class="hljs-number">475</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">475</span>M   <span class="hljs-number">0</span>% /dev<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                    <span class="hljs-number">487</span>M  <span class="hljs-number">7.6</span>M  <span class="hljs-number">479</span>M   <span class="hljs-number">2</span>% /run<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/sys/</span>fs/cgroup<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/centos-root   17G  2.0G   16G  12% /</span><br><span class="hljs-regexp">/dev/</span>sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">136</span>M  <span class="hljs-number">879</span>M  <span class="hljs-number">14</span>% /boot<br>tmpfs                     <span class="hljs-number">98</span>M     <span class="hljs-number">0</span>   <span class="hljs-number">98</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br><br>[root@b etc]<span class="hljs-comment"># cd /media/</span><br>[root@b media]<span class="hljs-comment"># ls</span><br>[root@b media]<span class="hljs-comment"># cd iso</span><br>[root@b iso]<span class="hljs-comment"># ls</span><br>CentOS_BuildTag  EULA  images    LiveOS    repodata              RPM-GPG-KEY-CentOS-Testing-<span class="hljs-number">7</span><br>EFI              GPL   isolinux  Packages  RPM-GPG-KEY-CentOS-<span class="hljs-number">7</span>  TRANS.TBL<br><br>[root@b iso]<span class="hljs-comment"># df -h</span><br>Filesystem               Size  Used Avail Use% Mounted on<br>devtmpfs                 <span class="hljs-number">475</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">475</span>M   <span class="hljs-number">0</span>% /dev<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                    <span class="hljs-number">487</span>M  <span class="hljs-number">7.6</span>M  <span class="hljs-number">479</span>M   <span class="hljs-number">2</span>% /run<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/sys/</span>fs/cgroup<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/centos-root   17G  2.0G   16G  12% /</span><br><span class="hljs-regexp">/dev/</span>sr0                 <span class="hljs-number">4.4</span>G  <span class="hljs-number">4.4</span>G     <span class="hljs-number">0</span> <span class="hljs-number">100</span>% <span class="hljs-regexp">/media/i</span>so <span class="hljs-comment"># ←</span><br><span class="hljs-regexp">/dev/</span>sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">136</span>M  <span class="hljs-number">879</span>M  <span class="hljs-number">14</span>% /boot<br>tmpfs                     <span class="hljs-number">98</span>M     <span class="hljs-number">0</span>   <span class="hljs-number">98</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>网络文件共享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-Chevereto-搭建自己的图床</title>
    <link href="/posts/86697086/"/>
    <url>/posts/86697086/</url>
    
    <content type="html"><![CDATA[<h3>一、使用 Chevereto 搭建自己的图床。</h3><h5>1. 安装 Docker 和 Compose。</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum install docker-latest<br>curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br></code></pre></td></tr></table></figure><h5>2. 获取mariadb和nmtan/chevereto镜像。</h5><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> docker-latest.service<br>docker pull mariadb:latest<br>docker pull nmtan/chevereto:latest<br></code></pre></td></tr></table></figure><h5>3. 使用Docker-compose启动服务。</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">mkdir</span> cheverto/<br><span class="hljs-built_in">cd</span> cheverto<br>touch docker-compose.yaml<br></code></pre></td></tr></table></figure><p><strong>在 <code>docker-compose.yaml</code> 增加如下内容</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-symbol">services:</span><br><span class="hljs-symbol">  db:</span><br><span class="hljs-symbol">    image:</span> mariadb<br><span class="hljs-symbol">    volumes:</span><br>      - database:<span class="hljs-meta-keyword">/var/</span>lib/mysql:rw<br><span class="hljs-symbol">    restart:</span> always<br><span class="hljs-symbol">    networks:</span><br>      - private<br><span class="hljs-symbol">    environment:</span><br><span class="hljs-symbol">      MYSQL_ROOT_PASSWORD:</span> chevereto_root<br><span class="hljs-symbol">      MYSQL_DATABASE:</span> chevereto<br><span class="hljs-symbol">      MYSQL_USER:</span> chevereto<br><span class="hljs-symbol">      MYSQL_PASSWORD:</span> chevereto<br><br><span class="hljs-symbol">  chevereto:</span><br><span class="hljs-symbol">    depends_on:</span><br>      - db<br><span class="hljs-symbol">    image:</span> nmtan/chevereto<br><span class="hljs-symbol">    restart:</span> always<br><span class="hljs-symbol">    networks:</span><br>      - private<br><span class="hljs-symbol">    environment:</span><br><span class="hljs-symbol">      CHEVERETO_DB_HOST:</span> db<br><span class="hljs-symbol">      CHEVERETO_DB_USERNAME:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_PASSWORD:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_NAME:</span> chevereto<br><span class="hljs-symbol">      CHEVERETO_DB_PREFIX:</span> chv_<br><span class="hljs-symbol">    volumes:</span><br>      - chevereto_images:<span class="hljs-meta-keyword">/var/</span>www<span class="hljs-meta-keyword">/html/</span>images:rw<br><span class="hljs-symbol">    ports:</span><br>      - <span class="hljs-number">8888</span>:<span class="hljs-number">80</span><br><br><span class="hljs-symbol">networks:</span><br><span class="hljs-symbol">  private:</span><br><span class="hljs-symbol">volumes:</span><br><span class="hljs-symbol">  database:</span><br><span class="hljs-symbol">  chevereto_images:</span><br></code></pre></td></tr></table></figure><p>编辑配置文件之后，就能方便的启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nohup docker-compose up  &amp;&gt; run.log &amp;<br><span class="hljs-built_in">disown</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>图床</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>图床</tag>
      
      <tag>Docker</tag>
      
      <tag>Chevereto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于Let&#39;s Encrypt 免费SSL证书</title>
    <link href="/posts/82e3ffc1/"/>
    <url>/posts/82e3ffc1/</url>
    
    <content type="html"><![CDATA[<h1 id="关于-Let’s-Encrypt-免费SSL证书"><a href="#关于-Let’s-Encrypt-免费SSL证书" class="headerlink" title="关于 Let’s Encrypt 免费SSL证书"></a>关于 <code>Let’s Encrypt</code> 免费SSL证书</h1><p><code>Let’s Encrypt</code> 作为一个公共且免费 <code>SSL</code> 的项目逐渐被广大用户传播和使用，是由 <code>Mozilla</code>、<code>Cisco</code>、<code>Akamai</code>、<code>IdenTrust</code>、<code>EFF</code> 等组织人员发起，主要的目的也是为了推进网站从 <code>HTTP</code> 向 <code>HTTPS</code> 过度的进程，目前已经有越来越多的商家加入和赞助支持。</p><p><code>Let’s Encrypt</code> 免费 <code>SSL</code> 证书的出现，也会对传统提供付费 <code>SSL</code> 证书服务的商家有不小的打击。到目前为止，<code>Let’s Encrypt</code> 获得 <code>IdenTrust</code> 交叉签名，这就是说可以应用且支持包括 <code>FireFox</code>、<code>Chrome</code> 在内的主流浏览器的兼容和支持，虽然目前是公测阶段，但是也有不少的用户在自有网站项目中正式使用起来。</p><p><code>Let’s Encrypt</code> 的最大贡献是它的 <code>ACME</code> 协议，第一份全自动服务器身份验证协议，以及配套的基础设施和客户端。这是为了解决一直以来 <code>HTTPS TLS X.509 PKI </code>信任模型，即证书权威（<code>Certificate Authority, CA</code>）模型缺陷的一个起步。</p><p>在客户端-服务器数据传输中，公私钥加密使得公钥可以明文传输而依然保密数据，但公钥本身是否属于服务器，或公钥与服务器是否同属一个身份，是无法简单验证的。证书权威模型通过引入事先信任的第三方，由第三方去验证这一点，并通过在服务器公钥上签名的方式来认证服务器。第三方的公钥则在事先就约定并离线准备好，以备访问时验证签名之用。这个第三方就称为证书权威，简称 <code>CA</code>。相应的，<code>CA</code> 验证过的公钥被称为证书。</p><p>问题是，如果服务器私钥泄露，<code>CA</code> 无法离线使对应的证书无效化，只能另外发布无效记录供客户端查询。也就是说，在私钥泄露到 <code>CA</code> 发布无效记录的窗口内，中间人可以肆意监控服-客之间的传输。如果中间人设法屏蔽了客户端对无效记录的访问，那么直到证书过期，中间人都可以进行监控。而由于当前 <code>CA</code> 验证和签发证书大多手动，证书有效期往往在一年到三年。</p><p><code>Let’s Encrypt</code> 签发的证书有效期只有 <code>90</code> 天，甚至希望缩短到 <code>60</code> 天。有效期越短，泄密后可供监控的窗口就越短。为了支撑这么短的有效期，就必须自动化验证和签发。因为自动化了，长远而言，维护反而比手动申请再安装要简单。</p><p>证书的有效期，我坚持认为这是合理的。<code>Let’s Encrypt</code> 的证书是自动签发的，对 <code>Let’s Encrypt</code> 的目标用户（个人网站、小网站）来说，<code>90</code> 天已经是一个很长的时间了。特别是个人网站，域名所有权的变动是非常快的。可能前几天域名还属于张三，后几天就属于李四了。因此自动签发一个长有效期的证书是很容易产生问题的。如果证书的有效期是两年，那么经常交易域名的人就可以长时间持有已经不属于他们的域名的证书。并且这种持有不受证书吊销列表的控制，因为签发的时候，所有权是没有问题的，即使后来所有权变更了，<code>Let’s Encrypt</code> 也不会知道。所以设的有效期短一点，可以减少这个问题的影响。然后是易用性，现在已经有不少的 <code>Let’s Encrypt</code> 自动续期脚本了，配好后就不用管了，非常方便。</p><p>总之，强烈推荐站长和服务器平台用 <code>Let’s Encrypt</code> 向访客提供加密连接。这是域名认证未来的发展方向。</p><p>怎么样，看了上述有关 <code>Let’s Encrypt</code> 的介绍后，是否还鄙视这种“免费” <code>SSL</code> 证书呢？</p><p>下面我们就具体的讲述一下利用 <code>Let’s Encrypt</code> 的 <code>ACME</code> 协议在服务器上运用 <code>acme.sh</code> 脚本来申请、管理 <code>SSL</code> 证书（这里要强调一下的是 <code>Let’s Encrypt</code> 的 <code>SSL</code> 证书申请是必须要有服务器 <code>root</code> 权限的哦，也就是说必须是 <code>VPS</code>（云主机）才可以的，虚拟主机上是无法申请获取的，但是可以在 <code>VPS</code>（云主机）上申请后部署到虚拟主机上）。</p><p>首先我们要先下载 <code>acme.sh</code> 到我们的主机上来，安装命令非常的简单，如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl  http<span class="hljs-variable">s:</span>//<span class="hljs-built_in">get</span>.acme.<span class="hljs-keyword">sh</span> | <span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><blockquote><p>注：必须在 root 权限下运行上述命令哦，切记！切记！切记！如果域名都在阿里云，推荐使用 DNS 方式来验证</p></blockquote><p>把 <code>acme.sh</code> 安装到你的 root 目录下: <code>~/.acme.sh/</code>并创建 一个 <code>bash</code> 的 <code>alias</code>, 方便你的使用:</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">acme.<span class="hljs-keyword">sh</span>=~/.acme.<span class="hljs-keyword">sh</span>/acme.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>安装过程不会污染已有的系统任何功能和文件, 所有的修改都限制在安装目录中:</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">~<span class="hljs-regexp">/.acme.sh/</span><br></code></pre></td></tr></table></figure><p>安装结束后会自动添加一条定时任务（官方解释：自动为你创建 <code>cronjob</code>, 每天 <code>0:00</code> 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书。），使用 <code>crontab -l</code> 查看。</p><p><code>acme.sh</code> 实现了 <code>acme</code> 协议支持的所有验证协议. 一般有两种方式验证: <code>http</code> 和 <code>dns</code> 验证.</p><h6>1、http 方式需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot <span class="hljs-regexp">/home/</span>wwwroot<span class="hljs-regexp">/mydomain.com/</span><br></code></pre></td></tr></table></figure><p>只需要指定域名, 并指定域名所在的网站根目录. <code>acme.sh</code> 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.</p><p>如果你用的 <code>apache</code> 服务器, <code>acme.sh</code> 还可以智能的从 <code>apache</code> 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">issue</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain</span><span class="hljs-string">.</span><span class="hljs-comment">com</span> --<span class="hljs-comment">apache</span><br></code></pre></td></tr></table></figure><p>如果你用的 <code>nginx</code> 服务器, 或者反代, <code>acme.sh</code>  还可以智能的从 <code>nginx</code> 的配置中自动完成验证, 你不需要指定网站根目录:</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">issue</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain</span><span class="hljs-string">.</span><span class="hljs-comment">com</span> --<span class="hljs-comment">nginx</span><br></code></pre></td></tr></table></figure><p>注意, 无论是 <code>apache</code> 还是 <code>nginx</code>  模式, <code>acme.sh</code> 在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 <code>ssl</code> 的配置, 否则只能成功生成证书, 你的网站还是无法访问 <code>https</code>. 但是为了安全, 你还是自己手动改配置吧.</p><p>如果你还没有运行任何 <code>web</code> 服务, <code>80</code> 端口是空闲的, 那么 <code>acme.sh</code> 还能假装自己是一个 <code>webserver</code>, 临时听在 <code>80</code> 端口, 完成验证:</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">issue</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain</span><span class="hljs-string">.</span><span class="hljs-comment">com</span> --<span class="hljs-comment">standalone</span><br></code></pre></td></tr></table></figure><h6>2、dns 方式, 在域名上添加一条 txt 解析记录, 验证域名所有权.</h6><p>这种方式的好处是, 你不需要任何服务器, 不需要任何公网 <code>ip</code> , 只需要 <code>dns</code> 的解析记录即可完成验证.</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">issue</span> --<span class="hljs-comment">dns</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain</span><span class="hljs-string">.</span><span class="hljs-comment">com</span><br></code></pre></td></tr></table></figure><p>然后, <code>acme.sh</code> 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 <code>txt</code> 记录即可.</p><p>等待解析完成之后, 重新生成证书:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">acme.<span class="hljs-keyword">sh</span> --renew -d mydomain.<span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><p>注意第二次这里用的是 <code>--renew</code></p><p><code>dns</code> 方式的真正强大之处在于可以使用域名解析商提供的 <code>api</code> 自动添加 <code>txt</code>  记录完成验证.</p><p><code>acme.sh</code> 目前支持 <code>cloudflare, dnspod, cloudxns, godaddy</code> 以及 <code>ovh</code> 等数十种解析商的自动集成.</p><p>以 阿里云 为例, 你需要先登录到阿里云 账号, 然后控制台，右上角你的头像里，有<code>Access Key</code> 然后:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">Ali_Key</span>=<span class="hljs-string">&quot;123123&quot;</span><br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">Ali_Secret</span>=<span class="hljs-string">&quot;456456&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">acme<span class="hljs-selector-class">.sh</span> --issue --dns dns_ali -d aa<span class="hljs-selector-class">.com</span> -d www<span class="hljs-selector-class">.aa</span>.com<br></code></pre></td></tr></table></figure><p>多个域名就增加 <code>-d www.bb.com</code></p><p>经过等待 <code>120</code> 秒后，证书就会自动生成，提示：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">[<span class="hljs-number">2018</span>年 <span class="hljs-number">05</span>月 <span class="hljs-number">20</span>日 星期日 <span class="hljs-number">10</span>:<span class="hljs-number">00</span>:<span class="hljs-number">50</span> CST] Your cert is <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.acme.sh<span class="hljs-regexp">/domain.com/</span>domain.com.cer[<span class="hljs-number">2018</span>年 <span class="hljs-number">05</span>月 <span class="hljs-number">20</span>日 星期日 <span class="hljs-number">10</span>:<span class="hljs-number">00</span>:<span class="hljs-number">50</span> CST] Your cert key is <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.acme.sh<span class="hljs-regexp">/domain.com/</span>domain.com.key[<span class="hljs-number">2018</span>年 <span class="hljs-number">05</span>月 <span class="hljs-number">20</span>日 星期日 <span class="hljs-number">10</span>:<span class="hljs-number">00</span>:<span class="hljs-number">50</span> CST] The intermediate CA cert is <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.acme.sh<span class="hljs-regexp">/domain.com/</span>ca.cer[<span class="hljs-number">2018</span>年 <span class="hljs-number">05</span>月 <span class="hljs-number">20</span>日 星期日 <span class="hljs-number">10</span>:<span class="hljs-number">00</span>:<span class="hljs-number">50</span> CST] And the full chain certs is there: <span class="hljs-regexp">/root/</span>.acme.sh<span class="hljs-regexp">/domain.com/</span>fullchain.cer<br></code></pre></td></tr></table></figure><p>提示这个说明证书就生成成功了</p><p>这里给出的 <code>Ali_Key</code> 和 <code>Ali_Secret</code> 会被自动记录下来, 将来你在使用 <code>aliyun api</code> 的时候, 就不需要再次指定了. 直接生成就好了</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">issue</span> <span class="hljs-literal">-</span><span class="hljs-comment">d</span> <span class="hljs-comment">mydomain2</span><span class="hljs-string">.</span><span class="hljs-comment">com</span> --<span class="hljs-comment">dns</span> <span class="hljs-comment">dns_ali</span><br></code></pre></td></tr></table></figure><h6>3、 copy/安装 证书</h6><p>前面证书生成以后, 接下来需要把证书 <code>copy</code> 到真正需要用它的地方.</p><p>注意, 默认生成的证书都放在安装目录下: <code>~/.acme.sh/</code>, 请不要直接使用此目录下的文件, 例如: 不要直接让 <code>nginx/apache</code> 的配置文件使用这下面的文件. 这里面的文件都是内部使用, 而且目录结构可能会变化.</p><p>正确的使用方法是使用 <code>--installcert</code> 命令,并指定目标位置, 然后证书文件会被<code>copy</code> 到相应的位置, 例如:</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">acme.sh --installcert -d domain.com \<br>--key-<span class="hljs-keyword">file</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>conf<span class="hljs-regexp">/ssl/</span>www.domain.cn.key \<br>--fullchain-<span class="hljs-keyword">file</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>conf<span class="hljs-regexp">/ssl/</span>www.domain.cn.cer \<br>--reloadcmd <span class="hljs-string">&quot;service nginx reload&quot;</span><br></code></pre></td></tr></table></figure><p><strong>(一个小提醒, 这里用的是 service nginx force-reload, 不是 service nginx reload, 据测试, reload 并不会重新加载证书, 所以用的 force-reload)</strong></p><p><code>--installcert</code> 命令可以携带很多参数, 来指定目标文件. 并且可以指定 <code>reloadcmd</code>, 当证书更新以后, <code>reloadcmd</code> 会被自动调用,让服务器生效.</p><p>值得注意的是, 这里指定的所有参数都会被自动记录下来, 并在将来证书自动更新以后, 被再次自动调用.</p><h6>4、更新证书</h6><p>目前证书在 <code>60</code> 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p><h6>5、更新 acme.sh</h6><p>目前由于 <code>acme</code> 协议和 <code>letsencrypt CA</code> 都在频繁的更新, 因此 <code>acme.sh</code> 也经常更新以保持同步.</p><p>升级 <code>acme.sh</code> 到最新版 :</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">acme.sh <span class="hljs-comment">--upgrade</span><br></code></pre></td></tr></table></figure><p>如果你不想手动升级, 可以开启自动升级:</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">upgrade</span> --<span class="hljs-comment">auto</span><span class="hljs-literal">-</span><span class="hljs-comment">upgrade</span><br></code></pre></td></tr></table></figure><p>之后, <code>acme.sh</code> 就会自动保持更新了.</p><p>你也可以随时关闭自动更新:</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">acme</span><span class="hljs-string">.</span><span class="hljs-comment">sh</span> --<span class="hljs-comment">upgrade</span> --<span class="hljs-comment">auto</span><span class="hljs-literal">-</span><span class="hljs-comment">upgrade</span> <span class="hljs-comment">0</span><br></code></pre></td></tr></table></figure><p>好了，到此 <code>acme.sh</code> 的使用基本就是这些了，至于是采用 <code>HTTP</code> 还是 <code>DNS</code> 方式来申请证书？就经验来看，我比较喜欢 <code>DNS</code> 的验证方式，因为这种方式的依赖性最小，更加的灵活，我建议大家都用 <code>DNS</code> 来验证申请 <code>Let’s Encrypt</code> 证书。</p><p>当然，<code>acme.sh</code> 还有不少实用的参数可以方便我们来管理已经通过 <code>acme.sh</code> 申请过证书、域名等等，比如：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">acme.sh <span class="hljs-comment">--list</span><br></code></pre></td></tr></table></figure><p>具体的参数，大家可以使用 <code>acme.sh --help</code> 来查看。</p><h6>6、NGINX安装证书</h6><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ssl</span> <span class="hljs-literal">on</span>;<br>               <span class="hljs-attribute">ssl_certificate</span>              /usr/local/nginx/conf/ssl/www.domain.cer;<br>               <span class="hljs-attribute">ssl_certificate_key</span>          /usr/local/nginx/conf/ssl/www.domain.key;<br>               <span class="hljs-attribute">ssl_ciphers</span>                  EECDH+CHACHA<span class="hljs-number">20</span>:EECDH+CHACHA<span class="hljs-number">20</span>-draft:EECDH+AES<span class="hljs-number">128</span>:RSA+AES<span class="hljs-number">128</span>:EECDH+AES<span class="hljs-number">256</span>:RSA+AES<span class="hljs-number">256</span>::!MD<span class="hljs-number">5</span>;<br>               <span class="hljs-attribute">ssl_protocols</span>                TLSv<span class="hljs-number">1</span> TLSv<span class="hljs-number">1</span>.<span class="hljs-number">1</span> TLSv<span class="hljs-number">1</span>.<span class="hljs-number">2</span>;<br>               <span class="hljs-attribute">ssl_prefer_server_ciphers</span>    <span class="hljs-literal">on</span>;<br>               <span class="hljs-attribute">ssl_session_cache</span>            builtin:<span class="hljs-number">1000</span> shared:SSL:<span class="hljs-number">10</span>m;<br>               <span class="hljs-attribute">ssl_session_timeout</span>          <span class="hljs-number">1</span>d;<br>               <span class="hljs-attribute">ssl_session_tickets</span>          <span class="hljs-literal">on</span>;<br></code></pre></td></tr></table></figure><p>在站点配置文件里加入以上代码即可，证书路径是第三步 <code>copy</code>  写的路径，记得别搞错</p><p>其实 <code>acme.sh</code> 的使用还是非常“傻瓜”的，只要照着指令参数做就可以轻松搞定的，上述的示例其实将域名修改为自己的域名就可以用了，其它的也是同样的道理，简单修改一下参数就可以拿来用的。目前，申请获取 <code>Let’s Encrypt</code> 证书有很多种方法，军哥的 <code>LNMP</code> 一键包里也可以直接申请的，网上也有不少申请 <code>Let’s Encrypt</code> 证书的教程，使用的工具可以说是五花八门。但是，就经验来看 <code>acme.sh</code> 这个是最方便、最快捷、最省事儿的，因为使用的就是 <code>Let’s Encrypt</code> 的 <code>ACME</code> 协议，所以兼容性绝对是最可靠的，<code>Shell</code> 脚本式的对系统几乎没有任何依懒性，有很强的自由度。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>SSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo中的ssh报错</title>
    <link href="/posts/a15e2685/"/>
    <url>/posts/a15e2685/</url>
    
    <content type="html"><![CDATA[<p>只需在 <code>_config.yml</code> 中的 <code>deploy</code> 中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>   <span class="hljs-attr">repository:</span> <span class="hljs-string">ssh://root@IP:Port/你的hooks.git</span><br>   <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br><br><span class="hljs-string">hexo</span> <span class="hljs-string">clean</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">g</span><br><span class="hljs-string">hexo</span> <span class="hljs-string">d</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shell-2-练习</title>
    <link href="/posts/3b79c98c/"/>
    <url>/posts/3b79c98c/</url>
    
    <content type="html"><![CDATA[<h6>1. 判断一个机器是否存活，能 ping 通就算存活</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;HostIP:&quot;</span> hp<br>ping -c 2 <span class="hljs-variable">$hp</span> &amp;&gt;/dev/null<br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$hp</span> 是否存活: 是&quot;</span><br>   <span class="hljs-keyword">else</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$hp</span> 是否存活: 否 &quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h6>2. 判断服务器上的某个服务是否开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#检查服务状态，是否安装</span><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入要检测的服务：&quot;</span> SERVICE<br>netstat -anp | grep <span class="hljs-variable">$SERVICE</span> &amp;&gt; /dev/null<br><span class="hljs-keyword">if</span> [ $? -eq 0 ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$SERVICE</span>服务已经启动！&quot;</span><br><span class="hljs-keyword">else</span><br>  rpm -q <span class="hljs-variable">$SERVICE</span> &amp;&gt; /dev/null<br> <br>  <span class="hljs-keyword">if</span> [ $? -eq 0 ]<br>  <span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$SERVICE</span>服务已安装，正在启动....&quot;</span><br>      service  <span class="hljs-variable">$SERVICE</span>  start<br>  <span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;该服务未安装！&quot;</span><br> <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h6>3. 写一个Nginx安装脚本，加入判断，当上一步执行成功在执行下一步，否则退出脚本</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>ping -W1 -c1 www.baidu.com &amp;&gt;/dev/null<br><span class="hljs-keyword">if</span> [ $? -ne 0 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;网络存在故障....&quot;</span><br><span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#2.源  记得要判断系统</span><br><span class="hljs-keyword">if</span> [ -f /etc/yum.repos.d/epel.repo ];<span class="hljs-keyword">then</span><br><span class="hljs-keyword">if</span> [ -s /etc/yum.repos.d/epel.repo ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;yum repos skip ....&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;epel 为空  wget ...&quot;</span><br><span class="hljs-comment">#wget .... </span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;epel文件不存在&quot;</span><br><span class="hljs-comment">#wget .......</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment">#3.安装</span><br>rpm -q nginx &amp;&gt;/dev/null<br>rc=$?<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$rc</span> -eq 0 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;nginx已安装&quot;</span><br><span class="hljs-keyword">else</span><br>yum install nginx -y <br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h6>4. for 死循环 使用((;;))条件可以实现</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">for</span> ((;;))<br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello&quot;</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h6>5. 脚本休眠N秒</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;倒计时: &quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> `seq 9 -1 1`<br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> -n -e <span class="hljs-string">&quot;\b<span class="hljs-variable">$i</span>&quot;</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h6>6 .手动写一个同步拉脚本，要求 B 机器每隔 10 分钟把A机器的 /opt/cache/ 下的内容拉取到 B 机器的 /opt/cache，并做完整性验证</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">方法一：<br>crontab -e<br><span class="hljs-number">10</span> * * * * sh <span class="hljs-regexp">/root/</span>sh<span class="hljs-regexp">/2021-03-11/g</span>et_cache.sh <br><span class="hljs-comment">#vi /root/sh/2021-03-11/get_cache.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>scp <span class="hljs-number">10.4</span>.<span class="hljs-number">7.101</span>:<span class="hljs-regexp">/opt/</span>cache<span class="hljs-regexp">/* /</span>opt<span class="hljs-regexp">/cache/</span><br></code></pre></td></tr></table></figure><h6>7. 新建 user01-user20 用户，要求密码是随机 6 位数 密码取值范围 a-zA-Z0-9，要求密码不能只是单一的数字或小写或大写字母</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> ((i=1;i&lt;=20;i++))<br>    <span class="hljs-keyword">do</span><br>        useradd <span class="hljs-string">&quot;user<span class="hljs-variable">$i</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;user<span class="hljs-variable">$i</span>&quot;</span> &gt;&gt; user.txt<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +%s%N|md5sum|head -c 6`&quot;</span> &gt;&gt; user.txt<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`tail -1 user.txt`&quot;</span> | passwd --stdin user<span class="hljs-variable">$i</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h6>8. 写一个猜数字脚本，数字范围是1-100，定制计数器，每次猜完都要告诉用户猜大或猜小了，如果猜对了跳出脚本并输出计数器的值</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">num=$[RANDOM%100]<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;猜测1-100的数字&quot;</span><br><span class="hljs-keyword">while</span> :<br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;所要猜的数字是:&quot;</span> g<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$num</span> -eq <span class="hljs-variable">$g</span> ];<span class="hljs-keyword">then</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;猜对了&quot;</span><br>       <span class="hljs-built_in">break</span><br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$num</span> -gt <span class="hljs-variable">$g</span> ];<span class="hljs-keyword">then</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;猜小了&quot;</span><br>    <span class="hljs-keyword">else</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;猜大了&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h6>9. 99乘法表</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">方法一：<br><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">for</span> ((i=1;i&lt;=9;i++))<br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">for</span> ((j=1;j&lt;=9;j++))<br><span class="hljs-keyword">do</span><br><span class="hljs-keyword">if</span> [[ i -ge j ]];<span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$i</span>*<span class="hljs-variable">$j</span>=$[i*j] &quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot; &quot;</span><br><span class="hljs-keyword">done</span><br><br>方法二：<br><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">for</span> ((i=1;i&lt;=9;i++))<br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">for</span> ((j=1;j&lt;=i;j++))<br>            <span class="hljs-keyword">do</span><br>                <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$j</span>*<span class="hljs-variable">$i</span>=$[<span class="hljs-variable">$i</span>*<span class="hljs-variable">$j</span>]&quot;</span><br>                <span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$j</span> == <span class="hljs-variable">$i</span> ]];<span class="hljs-keyword">then</span><br>                    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n&quot;</span><br>                <span class="hljs-keyword">fi</span><br>        <span class="hljs-keyword">done</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h6>10. 写一个mysql分库备份脚本</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>myuser=root<br>mypasswd=123456<br>mycmd=<span class="hljs-string">&quot;mysqldump -u<span class="hljs-variable">$myuser</span> -p<span class="hljs-variable">$mypasswd</span>&quot;</span><br><span class="hljs-keyword">for</span> dname <span class="hljs-keyword">in</span> `mysql -uroot -p123456 -e <span class="hljs-string">&quot;show databases;&quot;</span>| sed 1d | egrep -v <span class="hljs-string">&quot;schema|test|mysql&quot;</span>`<br><span class="hljs-keyword">do</span><br><span class="hljs-variable">$mycmd</span> --databases <span class="hljs-variable">$dname</span> &gt;/opt/<span class="hljs-variable">$&#123;dname&#125;</span>_`date +%F`.sql<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Shell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-VSFTP部署(壹)</title>
    <link href="/posts/4801bbb8/"/>
    <url>/posts/4801bbb8/</url>
    
    <content type="html"><![CDATA[<h1 id="VSFTP-概述"><a href="#VSFTP-概述" class="headerlink" title="VSFTP 概述"></a><code>VSFTP</code> 概述</h1><blockquote><p>​    <code>FTP</code> 是 <code>File Transfer Protocol</code> （文件传输协议）的英文简称，用于 <code>Internet</code> 上的文件的双向传输。使用 <code>FTP</code> 来传输时，是具有一定程度的危险性，因为数据在 <code>Internet</code> 上面试完全没有受到保护的 <strong>明文传输</strong> 方式！</p><p>​    <code>VSFTP</code> 是一个基于 <code>GPL</code> 发布的类 <code>Unix</code> 系统上使用的 <code>FTP</code> 服务器软件，它的全称是 <code>Very Secure FTP</code> 。</p></blockquote><h2 id="安全特性"><a href="#安全特性" class="headerlink" title="安全特性"></a>安全特性</h2><ol><li><code>vsftp</code> 程序的运行者一般是普通用户，降低了相对应进程的权限，提高了安全性</li><li>任何需要执行较高权限的指令都需要上层程序许可</li><li><code>ftp</code> 所需要使用的绝大多数命令都被整合到了 <code>vsftp</code> 中，基本需要系统额外提供命令</li><li>拥有 <code>chroot</code> 功能，可以改变用户的根目录，限制用户只能在自己的家目录</li></ol><h2 id="VSFTP-连接类型"><a href="#VSFTP-连接类型" class="headerlink" title="VSFTP 连接类型"></a><code>VSFTP</code> 连接类型</h2><p>控制连接（持续连接）→ <code>TCP 21</code> （命令信道） → 用户收发 <code>FTP</code> 命令</p><p>数据连接（按需连接）→ <code>TCP 20</code> （数据信道） → 用户上传下载数据</p><h2 id="VSFTP-工作模式"><a href="#VSFTP-工作模式" class="headerlink" title="VSFTP 工作模式"></a><code>VSFTP</code> 工作模式</h2><p><code>Port</code> 模式：</p><p>​    <code>FTP</code> 客户端首先和服务器的 <code>TCP 21</code> 端口建立连接，用来发送命令，客户端需要接收数据的时候在这个通道上发送 <code>PORT</code> 命令。<code>PORT</code> 命令包含了客户端用什么端口接收数据。在传送数据的时候，服务器端通过自己的 <code>TCP 20</code> 端口连接至客户端的指定端口发送数据。<code>FTP Server</code> 必须和客户端建立一个新的连接用来传送数据。</p><p><code>Passive</code> 模式：</p><p>​    <code>FTP</code> 客户端首先和服务器的 <code>TCP 21</code> 端口建立连接，用来建立控制通道发送命令，但建立连接后客户端发送 <code>Pasv</code> 命令。服务器收到 <code>Pasv</code> 命令后，打开一个临时端口（端口大于 <code>1023</code> 小于 <code>65535</code>）并且通知客户端在这个端口上传输数据的请求，客户端连接 <code>FTP</code> 服务器的临时端口，然后 <code>FTP</code> 服务器将通过这个端口传输数据。</p><blockquote><p>注意：由于 <code>VSFTP</code> 的被动模式是随机端口进行数据传输，所以在设置防火墙时需要刻意放行。</p></blockquote><h2 id="VSFTP-传输模式"><a href="#VSFTP-传输模式" class="headerlink" title="VSFTP 传输模式"></a><code>VSFTP</code> 传输模式</h2><p><code>Binary</code> 模式：不对数据进行任何处理，适合进行可执行文件、压缩文件、图片等</p><p><code>ASCII</code> 模式：进行文本传输时，自动适应目标操作系统的结束符，如回车符等。</p><p><code>Linux</code> 的红帽发行版中 <code>VSFTP</code> 默认采用的是 <code>Binary</code> 模式，这样能保证绝大多数文件传输后能正常使用</p><p><strong>切换方式：</strong> 在 <code>FTP</code> &gt; 提示符下输入 <code>ascii</code> 即转换到 <code>ASCII</code> 方式，输入 <code>bin</code> ，即转换到 <code>Binary</code> 方式。</p><hr><h1 id="一、部署匿名-FTP-服务"><a href="#一、部署匿名-FTP-服务" class="headerlink" title="一、部署匿名 FTP 服务"></a>一、部署匿名 <code>FTP</code> 服务</h1><h2 id="1）-安装-FTP-服务"><a href="#1）-安装-FTP-服务" class="headerlink" title="1） 安装 FTP 服务"></a>1） 安装 <code>FTP</code> 服务</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta"># yum -y install vsftpd</span><br></code></pre></td></tr></table></figure><h2 id="2）进入配置文件中"><a href="#2）进入配置文件中" class="headerlink" title="2）进入配置文件中"></a>2）进入配置文件中</h2><h3 id="2-1-vsftpd-服务的配置删除"><a href="#2-1-vsftpd-服务的配置删除" class="headerlink" title="2.1 vsftpd 服务的配置删除"></a>2.1 <code>vsftpd</code> 服务的配置删除</h3><ul><li>默认发布目录： <code>/var/ftp</code></li><li>协议接口： <code>21/tcp</code></li><li>服务配置文件： <code>/etc/vsftpd/vsftpd.conf</code></li><li>报错 <code>id</code> 的解析：<ul><li><code>500</code> #文件系统权限过大</li><li><code>530</code> #用户认证失败</li><li><code>550</code> #服务本身功能未开放，服务本身的错误</li><li><code>553</code> #本地文件系统权限过小</li><li>默认登陆的用户是 <code>ftp</code></li><li>默认登陆的目录是 <code>/var/ftp</code></li></ul></li></ul><p><code>vsftpd</code> 服务的配置参数: <code>man 5 vsftpd.conf</code> 可以查看具体参数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs routeros">匿名用户：<br><span class="hljs-attribute">anonymous_enable</span>=<span class="hljs-literal">YES</span>|NO #匿名用户登录 <br>    <span class="hljs-attribute">anon_root</span>=/direcotry #匿名用户家目录修改<br><span class="hljs-attribute">anon_upload_enable</span>=<span class="hljs-literal">YES</span> #匿名用户上传<br><span class="hljs-attribute">anon_mkdir_write_enable</span>=<span class="hljs-literal">YES</span>|NO #匿名用户建立目录<br><span class="hljs-attribute">anon_world_readable_only</span>=<span class="hljs-literal">NO</span> #匿名用户下载 <br><span class="hljs-attribute">anon_other_write_enable</span>=<span class="hljs-literal">YES</span> #匿名用户删除<br><span class="hljs-attribute">anon_max_rate</span>=需要设置的字节大小 #匿名用户最大传输速率，单位字节<br><span class="hljs-attribute">anon_umask</span>=022 #匿名用户上传文件权限<br><br>本地用户：<br><span class="hljs-attribute">local_enable</span>=<span class="hljs-literal">YES</span>|NO #本地用户登陆<br><span class="hljs-attribute">write_enable</span>=<span class="hljs-literal">YES</span>|NO #是否对登陆用户可写<br><span class="hljs-attribute">local_umask</span>=022 #本地用户上传文件权限<br><span class="hljs-attribute">userlist_enable</span>=<span class="hljs-literal">YES</span> #启用黑名单，名单文件为 user_list<br><span class="hljs-attribute">userlist_deny</span>=<span class="hljs-literal">YES</span> #拒绝 user_list 中的用户登录 【<span class="hljs-literal">NO</span> 运行 user_list 中用户登录】<br><br>限制本地用户浏览目录：<br><span class="hljs-attribute">chroot_local_user</span>=<span class="hljs-literal">YES</span> #所有用户被锁定到自己的家目录<br><br>用户黑名单建立（修改黑白名单不需要重启）<br><span class="hljs-attribute">chroot_local_user</span>=<span class="hljs-literal">NO</span><br><span class="hljs-attribute">chroot_list_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_list_file</span>=/etc/vsftpd/chroot_list<br><br>用户白名单建立<br><span class="hljs-attribute">chroot_local_user</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_list_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">chroot_list_file</span>=/etc/vsftpd/chroot_list<br><br>限制本地用户登陆<br>/etc/vsftpd/ftpusers #永久黑名单，优先级高于一切<br>/etc/vsftpd/user_list #临时黑名单<br><br>用户白名单设定<br><span class="hljs-attribute">userlist_deny</span>=<span class="hljs-literal">NO</span> # /etc/vsftpd/user_list 文件改变成白名单，与黑名单 ftpusers 中相同的用户，按照黑名单对待<br></code></pre></td></tr></table></figure><h3 id="2-2-匿名用户配置"><a href="#2-2-匿名用户配置" class="headerlink" title="2.2 匿名用户配置"></a>2.2 匿名用户配置</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-comment"># vi /etc/vsftpd/vsftpd.conf</span><br> <span class="hljs-attr">anon_root=/directory</span>         <span class="hljs-comment">#匿名用户家目录设置</span><br> <span class="hljs-attr">anonymous_enable=YES</span>         <span class="hljs-comment">#是否允许匿名登录</span><br> <span class="hljs-attr">anon_upload_enable=YES</span>       <span class="hljs-comment">#是否允许匿名上传</span><br> <span class="hljs-attr">anon_umask=022</span>               <span class="hljs-comment">#umask值</span><br> <span class="hljs-attr">anon_other_write_enable=YES</span>  <span class="hljs-comment">#匿名用户删除</span><br> <span class="hljs-attr">anon_world_readable_only=YES</span> <span class="hljs-comment">#匿名用户下载</span><br><span class="hljs-comment"># chown -Rf ftp /var/ftp/pub</span><br><span class="hljs-comment"># chmod -Rf 775 /var/ftp/pub</span><br><span class="hljs-comment"># ll -d /var/ftp/pub/</span><br>drwxr-xr-x <span class="hljs-number">2</span> ftp root <span class="hljs-number">20</span> Mar <span class="hljs-number">10</span> <span class="hljs-number">16</span>:<span class="hljs-number">47</span> /var/ftp/pub/<br></code></pre></td></tr></table></figure><h5>测试：</h5><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># yum -y install lftp</span><br>[root<span class="hljs-variable">@a</span> ftp]<span class="hljs-comment"># lftp 10.4.7.100 -u ftp</span><br><span class="hljs-symbol">Password:</span> <br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:~&gt;</span> ls          <br>drwxr-xr-x    <span class="hljs-number">2</span> <span class="hljs-number">14</span>       0               <span class="hljs-number">6</span> Mar <span class="hljs-number">10</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">14</span> pub<br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/&gt;</span> cd pub/<br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> ls<br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> mkdir a<br>mkdir ok, `a<span class="hljs-string">&#x27; created</span><br><span class="hljs-string">lftp ftp@10.4.7.100:/pub&gt; ls</span><br><span class="hljs-string">drwxr-xr-x    2 14       50              6 Mar 10 08:24 a</span><br><span class="hljs-string">lftp ftp@10.4.7.100:/pub&gt; rm -fr a/</span><br><span class="hljs-string">rm ok, `a/&#x27;</span> removed<br></code></pre></td></tr></table></figure><h4 id="1-匿名用户家目录修改"><a href="#1-匿名用户家目录修改" class="headerlink" title="1. 匿名用户家目录修改"></a>1. 匿名用户家目录修改</h4><blockquote><p><code>anon_root=/directory</code></p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># mkdir /directory</span><br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># touch /directory/a</span><br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># vi /etc/vsftpd/vsftpd.conf</span><br>anon_root=/directory<br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># systemctl restart vsftpd</span><br><span class="hljs-comment">#客户端</span><br>[root<span class="hljs-meta">@a</span> ftp]<span class="hljs-comment"># lftp 10.4.7.100 -u ftp</span><br>Password: <br>lftp ftp<span class="hljs-meta">@10.4.7.100:~&gt;</span> ls          <br>-rw-r--r--    1 0        0               0 Mar 10 08:27 a<br></code></pre></td></tr></table></figure><h4 id="2-匿名用户的上传-前提是本地用户可写"><a href="#2-匿名用户的上传-前提是本地用户可写" class="headerlink" title="2. 匿名用户的上传 前提是本地用户可写"></a>2. 匿名用户的上传 前提是本地用户可写</h4><blockquote><p><code>anon_upload_enable=YES|NO</code></p></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># anon_upload_enable=YES</span><br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> put /etc/passwd<br><span class="hljs-number">1208</span> bytes transferred    <br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> ls<br>-rw-r--r--    <span class="hljs-number">1</span> <span class="hljs-number">14</span>       <span class="hljs-number">50</span>           <span class="hljs-number">1208</span> Mar <span class="hljs-number">10</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">47</span> passwd<br></code></pre></td></tr></table></figure><h4 id="3-匿名用户建立目录"><a href="#3-匿名用户建立目录" class="headerlink" title="3. 匿名用户建立目录"></a>3. 匿名用户建立目录</h4><blockquote><p><code>anon_mkdir_write_enable=YES</code></p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># anon_mkdir_write_enable=YES</span><br>lftp ftp@10.4.7.100:/pub&gt; mkdir haha<br>mkdir ok, `haha&#x27; created<br>lftp ftp@10.4.7.100:/pub&gt; ls<br>drwxr-xr-x   <span class="hljs-number"> 2 </span>14      <span class="hljs-number"> 50 </span>            <span class="hljs-number"> 6 </span>Mar<span class="hljs-number"> 10 </span>08:49 haha<br>-rw-r--r--   <span class="hljs-number"> 1 </span>14      <span class="hljs-number"> 50 </span>         <span class="hljs-number"> 1208 </span>Mar<span class="hljs-number"> 10 </span>08:47 passwd<br></code></pre></td></tr></table></figure><h4 id="4-匿名用户下载"><a href="#4-匿名用户下载" class="headerlink" title="4. 匿名用户下载"></a>4. 匿名用户下载</h4><blockquote><p><code>anon_world_readable_only=YES</code></p></blockquote><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># anon_world_readable_only=YES</span><br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> ls<br>drwxr-xr-x    <span class="hljs-number">2</span> <span class="hljs-number">14</span>       <span class="hljs-number">50</span>              <span class="hljs-number">6</span> Mar <span class="hljs-number">10</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">49</span> haha<br>-rw-r--r--    <span class="hljs-number">1</span> <span class="hljs-number">14</span>       <span class="hljs-number">50</span>           <span class="hljs-number">1208</span> Mar <span class="hljs-number">10</span> 08<span class="hljs-symbol">:</span><span class="hljs-number">47</span> passwd<br>lftp ftp<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/pub&gt;</span> get passwd <br><span class="hljs-number">1208</span> bytes transferred <br></code></pre></td></tr></table></figure><h4 id="5-匿名用户删除"><a href="#5-匿名用户删除" class="headerlink" title="5. 匿名用户删除"></a>5. 匿名用户删除</h4><blockquote><p><code>anon_other_write_enable=YES</code></p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment"># anon_other_write_enable=YES</span><br>lftp ftp@10.4.7.100:/pub&gt; ls<br>drwxr-xr-x   <span class="hljs-number"> 2 </span>14      <span class="hljs-number"> 50 </span>            <span class="hljs-number"> 6 </span>Mar<span class="hljs-number"> 10 </span>08:49 haha<br>-rw-r--r--   <span class="hljs-number"> 1 </span>14      <span class="hljs-number"> 50 </span>         <span class="hljs-number"> 1208 </span>Mar<span class="hljs-number"> 10 </span>08:47 passwd<br>lftp ftp@10.4.7.100:/pub&gt; rm passwd <br>rm ok, `passwd&#x27; removed<br>lftp ftp@10.4.7.100:/pub&gt; ls<br>drwxr-xr-x   <span class="hljs-number"> 2 </span>14      <span class="hljs-number"> 50 </span>            <span class="hljs-number"> 6 </span>Mar<span class="hljs-number"> 10 </span>08:49 haha<br></code></pre></td></tr></table></figure><h4 id="6-服务最大连接数"><a href="#6-服务最大连接数" class="headerlink" title="6. 服务最大连接数"></a>6. 服务最大连接数</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> max_clients=2 <span class="hljs-comment">##服务的最大连接数</span></span><br></code></pre></td></tr></table></figure><h1 id="二、本地用户登录"><a href="#二、本地用户登录" class="headerlink" title="二、本地用户登录"></a>二、本地用户登录</h1><blockquote><p>设置白名单</p></blockquote><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># vi vsftpd.conf</span><br>anonymous_enable=NO <span class="hljs-comment">#拒绝匿名登录</span><br>local_enable=YES    <span class="hljs-comment">#开启本地登录</span><br>write_enable=YES    <span class="hljs-comment">#登录用户可写</span><br>local_umask=022     <span class="hljs-comment">#本地登录umask</span><br>userlist_enable=YES <span class="hljs-comment">#设置黑名单</span><br>userlist_deny=NO    <span class="hljs-comment">#设置白名单</span><br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># useradd lisi </span><br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># passwd lisi</span><br>[root<span class="hljs-meta">@a</span> vsftpd]<span class="hljs-comment"># tail -1 user_list </span><br>lisi<br>[root<span class="hljs-meta">@a</span> ftp]<span class="hljs-comment"># lftp 10.4.7.100 -u lisi</span><br>Password:    <br>lftp lisi<span class="hljs-meta">@10.4.7.100:~&gt;</span> mkdir a<br>mkdir ok, `a&#x27; created<br>lftp lisi<span class="hljs-meta">@10.4.7.100:~&gt;</span> ls<br>drwxr-xr-x    2 1002     1002            6 Mar 10 09:14 a<br>[root<span class="hljs-meta">@a</span> lisi]<span class="hljs-comment"># ll</span><br>drwxr-xr-x 2 lisi lisi 6 Mar 10 17:14 <br></code></pre></td></tr></table></figure><h1 id="三、虚拟用户模式"><a href="#三、虚拟用户模式" class="headerlink" title="三、虚拟用户模式"></a>三、虚拟用户模式</h1><p>​    虚拟用户模式是指登录 <code>FTP</code> 服务器的用户并不是操作系统中的账号，只是用于访问 <code>FTP</code> 服务器的存在于 <code>FTP</code> 服务器的账号。</p><p>配置步骤：</p><ul><li>建立虚拟 <code>FTP</code> 用户数据库文件。</li><li>创建 <code>FTP</code> 根目录及虚拟用户映射的系统用户。</li><li>建立支持虚拟用户的 <code>PAM</code> 认证文件。</li><li>在 <code>vsftpd.conf</code> 文件中添加支持配置。</li><li>为虚拟用户设置不同的权限。</li><li>重启 <code>vsftpd</code> 服务，验证试验效果。</li></ul><h2 id="1）建立虚拟-FTP-用户数据库文件"><a href="#1）建立虚拟-FTP-用户数据库文件" class="headerlink" title="1）建立虚拟 FTP 用户数据库文件"></a>1）建立虚拟 <code>FTP</code> 用户数据库文件</h2><blockquote><p>建立虚拟 <code>FTP</code> 用户数据库文件，其中奇数行为账号名，偶数行为密码。</p><p>新建两个账号 <code>zhangsan</code> 、<code>lisi</code>，密码都是 <code>123456</code>。</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> vsftpd]<span class="hljs-meta"># cat login.txt </span><br>zhangsan<br><span class="hljs-number">123456</span><br>lisi<br><span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>对 <code>login.txt</code> 文件进行哈希加密生成数据库文件。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@a</span> vsftpd]<span class="hljs-meta"># db_load -T -t hash -f login.txt login.db</span><br>[root<span class="hljs-symbol">@a</span> vsftpd]<span class="hljs-meta"># chmod 600 login.db</span><br>[root<span class="hljs-symbol">@a</span> vsftpd]<span class="hljs-meta"># rm -rf login.txt</span><br></code></pre></td></tr></table></figure><h2 id="2）创建-vsftpd-服务程序系统本地用户"><a href="#2）创建-vsftpd-服务程序系统本地用户" class="headerlink" title="2）创建 vsftpd 服务程序系统本地用户"></a>2）创建 <code>vsftpd</code> 服务程序系统本地用户</h2><blockquote><p>创建 <code>vsftpd</code> 服务程序用于存储文件的根目录以及虚拟用户映射的系统本地用户</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@a vsftpd]# useradd -d <span class="hljs-regexp">/var/</span>vftp -s <span class="hljs-regexp">/sbin/</span>nologin vftp<br></code></pre></td></tr></table></figure><h2 id="3）设定策略文件"><a href="#3）设定策略文件" class="headerlink" title="3）设定策略文件"></a>3）设定策略文件</h2><blockquote><p>进入 <code>/etc/pam.d/</code> 新建文件 <code>vmusersfile</code>（名字任意）写入 <code>pam</code> 服务的配置，<code>pam</code> 就是一种认证服务</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@a vsftpd]<span class="hljs-comment"># cd /etc/pam.d/</span><br>[root@a pam.d]<span class="hljs-comment"># cat vftp </span><br>auth        required     pam_userdb.so     db=<span class="hljs-regexp">/etc/</span>vsftpd/login<br>account     required     pam_userdb.so     db=<span class="hljs-regexp">/etc/</span>vsftpd/login<br></code></pre></td></tr></table></figure><h2 id="4）修改配置"><a href="#4）修改配置" class="headerlink" title="4）修改配置"></a>4）修改配置</h2><blockquote><p>在 <code>vsftpd.conf</code> 中修改 <code>vstpd</code> 服务的配置</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">anonymous_enable</span>=<span class="hljs-literal">NO</span> <br><span class="hljs-attribute">local_enable</span>=<span class="hljs-literal">YES</span>    <br><span class="hljs-attribute">guest_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attribute">guest_username</span>=vftp<br><span class="hljs-attribute">pam_service_name</span>=vftp.vu  #存放pam服务的策略文件<br><span class="hljs-attribute">allow_writeable_chroot</span>=<span class="hljs-literal">YES</span> #允许对禁锢的FTP根目录执行写入操作，而且不拒绝用户的登录请求<br><br><span class="hljs-comment"># 创建虚拟用户目录</span><br>mkdir /etc/vsftpd/vuser_dir<br><span class="hljs-attribute">user_config_dir</span>=/etc/vsftpd/vuser_dir<br></code></pre></td></tr></table></figure><h5>在指定的文件夹下创建虚拟用户配置文件：</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@a vuser_dir]<span class="hljs-comment"># ll</span><br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 0 </span>Mar<span class="hljs-number"> 10 </span>17:49 lisi<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 79 </span>Mar<span class="hljs-number"> 10 </span>17:50 zhangsan<br>[root@a vuser_dir]<span class="hljs-comment"># cat lisi </span><br>[root@a vuser_dir]<span class="hljs-comment"># cat zhangsan </span><br>anon_upload_enable=YES<br>anon_mkdir_write_enable=YES<br>anon_other_write_enable=YES<br></code></pre></td></tr></table></figure><h5>重启测试：</h5><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-comment"># systemctl restart vsftpd</span><br>[root<span class="hljs-variable">@c</span> ~]<span class="hljs-comment"># lftp 10.4.7.100 -u zhangsan</span><br><span class="hljs-symbol">Password:</span> <br>lftp zhangsan<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:~&gt;</span> ls     <br>lftp zhangsan<span class="hljs-variable">@10</span>.<span class="hljs-number">4.7</span>.<span class="hljs-number">100</span><span class="hljs-symbol">:/&gt;</span> mkdir a<br>mkdir ok, `a<span class="hljs-string">&#x27; created</span><br><span class="hljs-string">lftp zhangsan@10.4.7.100:/&gt; rm -r a</span><br><span class="hljs-string">rm ok, `a&#x27;</span> removed<br></code></pre></td></tr></table></figure><h5>虚拟用户配置解释：</h5><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">listen</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]  <span class="hljs-comment">#是否以独立运行的方式监听服务</span><br><span class="hljs-attr">listen_address</span>=IP地址                 <span class="hljs-comment">#设置要监听的IP地址</span><br><span class="hljs-attr">listen_port</span>=<span class="hljs-number">21</span>                      <span class="hljs-comment">#设置FTP服务的监听端口</span><br><span class="hljs-attr">download_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]         <span class="hljs-comment">#是否允许下载文件</span><br><span class="hljs-attr">local_root</span>=/var/ftp/virtual/username  <span class="hljs-comment">#指定虚拟用户的具体主路径</span><br><span class="hljs-attr">anonymous_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]     <span class="hljs-comment">#是否允许匿名用户访问</span><br><span class="hljs-attr">write_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]     <span class="hljs-comment">#是否允许写操作</span><br><span class="hljs-attr">local_umask</span>=<span class="hljs-number">022</span>       <span class="hljs-comment">#设定上传文件权限掩码</span><br><span class="hljs-attr">userlist_enable</span>=<span class="hljs-literal">YES</span>                  <span class="hljs-comment">#启用“用户名单”，名单文件为user_list，在/etc/vsftpd下有两个名单，分别为ftpusers、user-list。ftpusers不受任何配制项的影响，总是有效，是一个黑名单。</span><br><span class="hljs-attr">userlist_deny</span>=<span class="hljs-literal">YES</span>                   <span class="hljs-comment">#拒绝user_list中用户登录【NO运行user_list中用户登录】</span><br><span class="hljs-attr">local_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]              <span class="hljs-comment">#是否允许本地用户登录FTP</span><br><span class="hljs-attr">anon_world_readable_only</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]     <span class="hljs-comment">#是否可以浏览ftp目录和下载文件</span><br><span class="hljs-attr">anon_upload_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]           <span class="hljs-comment">#是否允许用户上传</span><br><span class="hljs-attr">max_clients</span>=<span class="hljs-number">0</span>                      <span class="hljs-comment">#最大客户端连接数，0为不限制</span><br><span class="hljs-attr">max_per_ip</span>=<span class="hljs-number">0</span>                      <span class="hljs-comment">#同一IP地址的最大连接数，0为不限制</span><br><span class="hljs-attr">chroot_local_user</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]          <span class="hljs-comment">#是否将用户权限禁锢在FTP目录，以确保安全</span><br><span class="hljs-attr">anon_mkdir_write_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]      <span class="hljs-comment">#是否允许用户建立目录</span><br><span class="hljs-attr">anon_other_write_enable</span>=[<span class="hljs-literal">YES</span>|<span class="hljs-literal">NO</span>]      <span class="hljs-comment">#是否具有文件改名和删除文件的权限</span><br><span class="hljs-attr">idle_session_timeout</span>=<span class="hljs-number">600</span>              <span class="hljs-comment">#设定空闲连接超时时间</span><br><span class="hljs-attr">data_connection_timeout</span>=<span class="hljs-number">120</span>           <span class="hljs-comment">#设定单次连续传输最大时间</span><br><span class="hljs-attr">max_clients</span>=<span class="hljs-number">10</span>                        <span class="hljs-comment">#设定并发客户端访问个数</span><br><span class="hljs-attr">max_per_ip</span>=<span class="hljs-number">5</span>            <span class="hljs-comment">#设定单个客户端的最大线程数，这个配置主要来照顾Flashget、迅雷等多线程下载软件</span><br><span class="hljs-attr">local_max_rate</span>=<span class="hljs-number">0</span>        <span class="hljs-comment">#设定该用户的最大传输速率，单位（字节/秒），0为不限制</span><br></code></pre></td></tr></table></figure><p>这样就可以使用虚拟用户登录，但是登录的位置是 <code>virtual</code> 的家目录，由于 <code>vsftpd</code> 修改了安全策略，在登录到家目录的时候有很多限制，一般看不到文件，最好是将目录修改到其它地方。</p><p>我们这里将虚拟用户登录目录修改到其它地方，进入虚拟用户配置目录，修改虚拟用户配置文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@a vuser_dir]</span><span class="hljs-comment"># cat zhangsan </span><br><span class="hljs-attr">anon_upload_enable</span>=<span class="hljs-literal">YES</span>        <span class="hljs-comment">#zhangsan用户是否可以上传</span><br><span class="hljs-attr">anon_mkdir_write_enable</span>=<span class="hljs-literal">YES</span>   <span class="hljs-comment">#zhangsan用户是否可以创建目录</span><br><span class="hljs-attr">anon_other_write_enable</span>=<span class="hljs-literal">YES</span>   <span class="hljs-comment">#zhangsan用户能否更改文件名和删除文件的权限</span><br><span class="hljs-attr">anon_world_readable_only</span>=<span class="hljs-literal">YES</span>  <span class="hljs-comment">#zhangsan用户是否能够下载</span><br><span class="hljs-attr">local_root</span>=/ftp/lanzige       <span class="hljs-comment">#zhangsan用户家目录</span><br><span class="hljs-attr">allow_writeable_chroot</span>=<span class="hljs-literal">YES</span>     <span class="hljs-comment">#</span><br><br><span class="hljs-comment"># mkdir /ftp/lanzige</span><br><span class="hljs-comment"># chown -Rf vftp:vftp /ftp/lanzige/</span><br></code></pre></td></tr></table></figure><h5>测试：</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment"># c.host.com</span><br>[root<span class="hljs-meta">@c</span> ~]<span class="hljs-comment"># lftp 10.4.7.100 -u zhangsan</span><br>Password: <br>lftp zhangsan<span class="hljs-meta">@10.4.7.100:~&gt;</span> mkdir c.host.com<br>mkdir ok, `c.host.com&#x27; created<br>lftp zhangsan<span class="hljs-meta">@10.4.7.100:/&gt;</span> ls<br>drwx------    2 1002     1002            6 Mar 10 11:42 c.host.com<br><br><span class="hljs-comment"># a.host.com</span><br>[root<span class="hljs-meta">@a</span> lanzige]<span class="hljs-comment"># pwd</span><br>/ftp/lanzige<br>[root<span class="hljs-meta">@a</span> lanzige]<span class="hljs-comment"># ls</span><br>c.host.com<br></code></pre></td></tr></table></figure><a class="btn" href="http://butatree.site/posts/93debf63/"  title="Linux-VSFTP部署(贰)" target="_blank">VSFTP(贰)</a>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Vsftp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shell-1-练习</title>
    <link href="/posts/4bcddc4c/"/>
    <url>/posts/4bcddc4c/</url>
    
    <content type="html"><![CDATA[<h5>1. 创建 .sh 结尾文件时，自动添加注释信息</h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@a ~]# <span class="hljs-keyword">cat</span> .vimrc <br><span class="hljs-keyword">set</span> ignorecase<br><span class="hljs-keyword">set</span> <span class="hljs-keyword">nu</span><br><span class="hljs-keyword">set</span> autoindent<br><span class="hljs-keyword">autocmd</span> BufNewFile *.<span class="hljs-keyword">sh</span> exec <span class="hljs-string">&quot;:call SetTitle()&quot;</span><br>func SetTitle()<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%:e&quot;</span>) == <span class="hljs-string">&#x27;sh&#x27;</span><br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;#!/bin/bash&quot;</span>)<br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">2</span>,<span class="hljs-string">&quot;#Author: &quot;</span>)<br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">3</span>,<span class="hljs-string">&quot;#Date： &quot;</span>.<span class="hljs-built_in">strftime</span>(<span class="hljs-string">&quot;%Y-%m-%d&quot;</span>))<br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">4</span>,<span class="hljs-string">&quot;#FileName： &quot;</span>.<span class="hljs-built_in">expand</span>(<span class="hljs-string">&quot;%&quot;</span>))<br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">5</span>,<span class="hljs-string">&quot;#Description： &quot;</span>)<br><span class="hljs-keyword">call</span> <span class="hljs-built_in">setline</span>(<span class="hljs-number">6</span>,<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-keyword">endif</span><br>endfunc<br><span class="hljs-keyword">autocmd</span> BufNewFile * <span class="hljs-keyword">normal</span> G<br></code></pre></td></tr></table></figure><h5>2. 通过位置传参方式, 创建 Linux 系统账户及密码，执行 var1.sh username password，控制最多传递两个参数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$#</span> -ne 2 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;USAGE: <span class="hljs-variable">$0</span> 请传递两个参数: [username | password] &quot;</span><br><span class="hljs-built_in">exit</span><br><span class="hljs-keyword">fi</span><br><br>useradd <span class="hljs-variable">$1</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> | passwd --stdin <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br></code></pre></td></tr></table></figure><h5>3. 使用 read 模拟 Linux 登录页面</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> $(hostnamectl |awk -F <span class="hljs-string">&quot;: &quot;</span> <span class="hljs-string">&#x27;/Operating/ &#123;print $2&#125;&#x27;</span>)<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;kernel <span class="hljs-subst">$(uname -r)</span> on an <span class="hljs-subst">$(uname -m)</span>&quot;</span><br><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;<span class="hljs-subst">$(hostname)</span> login:&quot;</span> user<br><span class="hljs-built_in">read</span> -s -t3 -p <span class="hljs-string">&quot;Password:&quot;</span> pw<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你输入的用户名为:<span class="hljs-variable">$user</span>   密码为：<span class="hljs-variable">$pw</span>&quot;</span><br></code></pre></td></tr></table></figure><h5>4. 使用 read编写一个备份脚本，需要用户传递2个参数，源和目标。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入你要备份的源文件或目录：&quot;</span> Dest<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入你要备份的目标位置：&quot;</span> Path<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你要备份的源文件为: <span class="hljs-variable">$Dest</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你要备份的目标位置为：<span class="hljs-variable">$Path</span>&quot;</span><br><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;你确定要备份吗？ [yes | no ]&quot;</span> Action<br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;yes&quot;</span> ];<span class="hljs-keyword">then</span><br>cp -rpv <span class="hljs-variable">$Dest</span> <span class="hljs-variable">$Path</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h5>5. 使用read编写一个探测主机存活脚本，需要用户传递测试的IP地址。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入探测主机的ip地址：&quot;</span> ip<br><br>ping -W1 -c1 <span class="hljs-variable">$ip</span> &amp;&gt; /dev/null<br><br><span class="hljs-keyword">if</span> [ $? -eq 0 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> is ok&quot;</span><br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$ip</span> is error&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h5>6. 使用read编写一个修改系统主机名称脚本。</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">    1.打印当前的主机名称<br>2.提示用户输入新的主机名称<br>3.询问用户是否修改?<br>4.确定修改,执行修改命令<br>5.不确定修改,退出脚本<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;当前的主机名为: <span class="hljs-subst">$(hostname)</span>&quot;</span><br><br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入新的主机名：&quot;</span> new_host<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;是否将<span class="hljs-subst">$(hostname)</span> 修改为<span class="hljs-variable">$&#123;new_host&#125;</span> [yes | no ]&quot;</span> Action<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;yes&quot;</span> ];<span class="hljs-keyword">then</span><br>hostname <span class="hljs-variable">$new_host</span><br>hostnamectl set-hostname <span class="hljs-variable">$new_host</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你的主机名称已修改为  <span class="hljs-variable">$&#123;new_host&#125;</span> &quot;</span><br><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h5>7. 如何替换 $PATH 中的/bin/替换为/BIN/</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># echo $&#123;PATH//bin/BIN&#125;</span><br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sBIN:/u</span>sr<span class="hljs-regexp">/local/</span>BIN:<span class="hljs-regexp">/usr/</span>sBIN:<span class="hljs-regexp">/usr/</span>BIN:<span class="hljs-regexp">/root/</span>BIN<br></code></pre></td></tr></table></figure><h5>8. 变量string=“Bigdata process is Hadoop, Hadoop is open source project”，执行脚本后，打印输出string变量，并给出用户以下选项</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">1)、打印string长度<br>2)、删除字符串中所有的Hadoop<br>3)、替换第一个Hadoop为Linux<br>4)、替换全部Hadoop为Linux<br>用户输入数字1|2|3|4，可以执行对应项的功能<br><br>string=<span class="hljs-string">&quot;Bigdata process is Hadoop, Hadoop is open source project&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1)、打印string长度&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;2)、删除字符串中所有的Hadoop&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;3)、替换第一个Hadoop为Linux&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;4)、替换全部Hadoop为Linux&quot;</span><br>until [ <span class="hljs-variable">$Action</span> == q  ] 2&gt; /dev/null<br><br><span class="hljs-keyword">do</span> <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入对应的选项：[ 1| 2| 3| 4| ]&quot;</span> Action<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;1&quot;</span> ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;#string&#125;</span>&quot;</span><br><br><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;2&quot;</span> ]; <span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string//Hadoop/&#125;</span>&quot;</span><br><br><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;3&quot;</span> ]; <span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string/Hadoop/Linux&#125;</span>&quot;</span><br><br><span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$Action</span> == <span class="hljs-string">&quot;4&quot;</span> ]; <span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string//Hadoop/Linux&#125;</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h5>9. 查看内存/当前使用状态，如果使用率超过80%则报警发邮件，思路如下:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.当前内存使用百分比是多少<br>2.进行判断比对  <br>如果大于80%  则触发邮件<br>否则,over<br>已使用的内存  /  总内存  * 100 = 使用的百分比<br>used=$(free -m |awk <span class="hljs-string">&#x27;/Mem/ &#123;print $3/$2*100&#125;&#x27;</span>)<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;used%.*&#125;</span> -ge 10 ];<span class="hljs-keyword">then</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你的内存超过了80%，目前内存的使用率为：<span class="hljs-variable">$used</span>&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h5>10. 根据系统时间，打印今年和明年时间</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;今年的时间为：<span class="hljs-subst">$(date +%Y)</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;明年的时间为: <span class="hljs-subst">$(($(date +%Y)</span>+1))&quot;</span><br></code></pre></td></tr></table></figure><h5>11. 根据系统时间获取今年还剩下多少星期，已经过了多少星期。思路如下:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[date +%j  已经过了多少天]()<br><br>一年有365天   已经过了 301 = 还剩下   365-301 = 64  / 7 = 还剩下多少周<br> 已经过了 301 天 / 7 = 已经过了多少周<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;今年已经过了<span class="hljs-subst">$(date +%j)</span> 天&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;今年已经过了$[<span class="hljs-subst">$(date +%j)</span>/7] 周&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;今年还剩下$[365-<span class="hljs-subst">$(date +%j)</span>/7] 周&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;从现在距离下一年还剩下$[365-<span class="hljs-subst">$(date +%j)</span>] 天&quot;</span><br></code></pre></td></tr></table></figure><h5>12. 查看系统当前有几个登陆的用户</h5><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">#List=w <span class="hljs-pattern-match">|awk &#x27;<span class="hljs-operator">/</span>up<span class="hljs-operator">/</span> &#123;print <span class="hljs-constructor">$4</span>&#125;&#x27;</span><br><span class="hljs-pattern-match">echo &quot;当前系统登录了<span class="hljs-constructor">$(<span class="hljs-params">w</span> |<span class="hljs-params">awk</span> &#x27;<span class="hljs-operator">/</span><span class="hljs-params">up</span><span class="hljs-operator">/</span> &#123;<span class="hljs-params">print</span> $4&#125;&#x27;)</span> 个用户 &quot;</span><br></code></pre></td></tr></table></figure><h5>13. 筛选出当前系统存在的僵尸进程</h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">Zombie=$(<span class="hljs-keyword">ps</span> aux |<span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;Z&#x27;</span>|egrep -v <span class="hljs-string">&#x27;VSZ|grep&#x27;</span>)<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;僵尸进程的个数为:$(ps aux |grep &#x27;Z&#x27;|egrep -v &#x27;VSZ|grep&#x27; |wc -l)个&quot;</span><br><span class="hljs-keyword">echo</span> <span class="hljs-comment">&quot;当前系统的僵尸进程为：</span><br>$Zombie<span class="hljs-comment">&quot;</span><br></code></pre></td></tr></table></figure><h5>14. 查看当前系统已使用磁盘的百分比</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">df</span> -h | awk &#x27;/<span class="hljs-number">40</span>G/ &#123;print $(NF-<span class="hljs-number">1</span>)&#125;&#x27;<br></code></pre></td></tr></table></figure><h5>15. 统计Nginx日志中每个IP的访问量有多少,日志如下:</h5><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.56.1</span> - - <span class="hljs-string">[21/May/2018:20:44:06 -0400]</span> <span class="hljs-string">&quot;<span class="hljs-keyword">GET</span> /index.html HTTP/1.0&quot;</span> <span class="hljs-number">404</span> <span class="hljs-number">169</span> <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-string">&quot;ApacheBench/2.3&quot;</span> <span class="hljs-string">&quot;-&quot;</span>/code/index.html`<br><br>awk &#x27;&#123;print $<span class="hljs-number">1</span>&#125;&#x27; access.log |sort  |uniq -c|sort -nr<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Shell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux网络IO流程</title>
    <link href="/posts/66e23140/"/>
    <url>/posts/66e23140/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Linux-网络-IO-流程"><a href="#一、Linux-网络-IO-流程" class="headerlink" title="一、Linux - 网络 IO 流程"></a>一、<code>Linux</code> - 网络 <code>IO</code> 流程</h1><p>我们访问一个网站，从我们在浏览器上打开输入网址到网页被打开，中间经历的哪些流程？如果网络比较好的情况下，通常在几秒之内就可以打开一个内容非常丰富的网站，但是背后的执行过程是非常复杂的，我们简单对其中的某些过程进行描述。而我们要描述的地方就是服务器网卡接收到用户请求数据开始，如何处理这些请求并将报文响应给用户。</p><p>这个过程我们省略了从用户发起请求一直到请求到达服务端的过程，这中间还涉及到<code>DNS</code>解析、路由查找等技术细节。</p><p>接收数据包是一个复杂的过程，涉及很多底层的技术细节，但大致需要以下几个步骤：</p><ol><li>网卡收到数据包。</li><li>将数据包从网卡硬件缓存转移到服务器内存中。</li><li>通知内核处理。</li><li>经过 <code>TCP/IP</code> 协议逐层处理。</li><li>应用程序通过 <code>read()</code> 从 <code>socket buffer</code> 读取数据。</li></ol><h6>详解：</h6><ol><li>数据包从外面的网络进入物理网卡。如果目的地不是该网卡，并且该网卡没有开启混杂模式，该包会被网卡丢弃。</li><li>网卡通过硬件中断(<code>IRQ</code>)告知 <code>CPU</code> 有数据来了。</li><li><code>CPU</code> 根据中断表，调用已经注册的中断函数，这个中断函数会调用驱动程序中相应的函数对数据进行处理。</li><li>驱动会一个接一个的读取网卡写到内存中的数据包，内存中数据包的格式只有驱动知道。</li><li>驱动程序将内存中的数据包转换成内核网络模块能识别的格式，数据包会被先存入到 <code>CPU</code> 的<code>input_pkt_queue</code> 队列中，如果队列满了数据会被丢弃（注意：我们可以通过调整系统参数 <code>net.core.netdev_max_backlog</code> 来调整队列大小）。</li><li>此时 <code>CPU</code> 从队列中获取数据并调用 <code>Linux</code> 网络协议栈相应的函数，将数据包交给协议栈处理。</li><li>通过协议分析将数据包传给链路层，此时放在该协议栈中的 <code>netfilter</code> 钩子函数（也就是我们通过<code>iptables</code>）设置的一些规则会对数据包进行处理，可以进行修改，也可能会进行丢弃。如果没有丢弃，则会继续交由网络层协议。</li><li>网络层协议对报文进行处理，查看 <code>IP</code> 地址是否为本机，为本机则接收。如果不为本机，要看是否开启了 <code>ip_forward</code> 即 <code>IP 转发功能</code> ，如果开启则进行网络报文转发，如果未开启则丢弃报文。假设报文的目的地址是本机，则会交由传输层协议进行处理，比如 <code>TCP</code> 或者 <code>UDP</code> 等。</li><li>传输层协议会根据数据包中的 <code>IP</code> 和端口来查找相应的 <code>socket</code>，如果没有找到则丢弃该报文，如果找到则将数据放到 <code>socket</code> 的队列中（<strong>这里还涉及到连接的建立，半连接和全连接队列</strong>），然后由操作系统内核通知相关的应用来进行数据读。</li><li>应用层将请求报文打开后，假如请求读取某个文件，则应用会通过系统调用来读取该文件。</li><li>当内核完成数据的处理后，会将数据复制到应用内存中供应用读取（<strong>从内核缓存区拷贝到应用缓冲区</strong>）。应用读取到数据，构建响应包，通过网络协议簇将报文进行封装，通过链路层发送到网卡缓冲区队列中。</li><li>网卡再次通过中断函数调用网卡驱动完成数据的发送。</li></ol><blockquote><p><strong>注意：上述步骤知识进行了简单描述，很多细节均没有提及，同时也省略了很多和协议以及硬件有关的描述.</strong></p></blockquote><p><img src="/img/blog_image/Linux_internetIO/IO.png" alt="1.0 Linux网络数据包的接收过程"></p><h1 id="二、Linux-网络-IO-模型"><a href="#二、Linux-网络-IO-模型" class="headerlink" title="二、Linux 网络 IO 模型"></a>二、<code>Linux</code> 网络 <code>IO</code> 模型</h1><p>上述内容即为 <code>Linux</code> 最简单的网络流程描述，或许你觉得已经很复杂了，但是下面我们介绍的内容只是整个流程中的很小很小一部分。</p><p>即：当 <code>应用</code> 接收到 <code>用户</code> 请求时，如何对请求进行处理，这里就设计到 <code>Linux</code> 网络 <code>IO</code> 模型。先来简单回一下用户空间和内核空间的关系：</p><p><img src="/img/blog_image/Linux_internetIO/Space.png" alt="2.0 用户空间和内核空间的关系"></p><ol><li>用户空间（<code>user space</code>）的应用程序通过系统调用让内核处理。</li><li>进入内核空间（<code>kernel space</code>）将数据从硬盘读取到自己的内存缓冲区，拷贝到 <code>user space</code> 的内存缓冲区</li><li><code>user space</code> 对数据进行处理</li></ol><h6>详解:</h6><p>即当用户空间的应用程序需要读写硬盘上的数据时，会通过系统调用的方式让内核去处理，此时进入内核空间，内核去将数据从硬盘读取到自己的内存缓冲区中，然后进行数据的读写处理。将数据准备好之后，会把数据拷贝到应用程序的内存缓冲区，此时进入用户空间由应用程序再对数据进行处理，比如数据封包等。在这里会涉及到两个阶段：</p><ul><li><strong>等待数据准备就绪（<code>Waiting for the data to be ready</code>）</strong></li><li><strong>将数据从内核缓冲区拷贝到进程缓冲区中（<code>Copying the data from the kernel to the process</code>）</strong></li></ul><p>正是因为这两个阶段，Linux系统产生了下面五种网络模式的方案：</p><ul><li><strong>阻塞式IO模型（<code>blocking IO model</code>）</strong></li><li><strong>非阻塞式IO模型（<code>nonblocking IO model</code>）</strong></li><li><strong>IO复用式IO模型（<code>IO multiplexing model</code>）</strong></li><li><strong>信号驱动式IO模型（<code>signal-driven IO model</code>）</strong></li><li><strong>异步IO式IO模型（<code>asynchronous IO model</code>）</strong></li></ul><h4 id="2-1-阻塞式IO模型（blocking-IO-model）"><a href="#2-1-阻塞式IO模型（blocking-IO-model）" class="headerlink" title="2.1 阻塞式IO模型（blocking IO model）"></a>2.1 阻塞式IO模型（<code>blocking IO model</code>）</h4><p>在 <code>Linux</code> 中，默认情况下所有的 <code>IO</code> 操作都是 <code>blocking</code>，一个典型的读操作流程大概是这样:</p><p><img src="/img/blog_image/Linux_internetIO/Blocking.png" alt="2.1 Blocking I/O Model"></p><p>当用户进程调用了 <code>recvfrom</code> 这个系统调用，<code>kernel</code> 就开始了 <code>IO</code> 的第一个阶段：准备数据（对于网络 <code>IO</code> 来说，很多时候数据在一开始还没有到达。比如：还没有收到一个完整的 <code>UDP</code> 包。这个时候 <code>kernel</code> 就要等待足够的数据到来），而数据被拷贝到操作系统内核的缓冲区中是需要一个过程的，这个过程需要等待。此时用户进程会被阻塞（当然，是进程自己选择的阻塞）。当 <code>kernel</code> 一直等到数据准备好了，它就会将数据从 <code>kernel</code> 中拷贝到用户空间的缓冲区以后，然后 <code>kernel</code> 返回结果，用户进程才解除 <code>block</code> 的状态，重新运行起来。</p><p>所以：<code>blocking IO</code>的特点就是在 <code>IO</code> 执行的下两个阶段都被 <code>block</code> 了。</p><ul><li><strong>等待数据准备就绪（<code>waiting for the data to be ready</code>）<code>「阻塞」</code></strong></li><li><strong>将数据从内核拷贝到进程中（<code>Copying the data from the kernel to the process</code>）<code>「阻塞」</code></strong></li></ul><h4 id="2-2-非阻塞I-O（nonblocking-IO）"><a href="#2-2-非阻塞I-O（nonblocking-IO）" class="headerlink" title="2.2 非阻塞I/O（nonblocking IO）"></a>2.2 非阻塞I/O（<code>nonblocking IO</code>）</h4><p>在 <code>Linux</code> 中，可以通过设置 <code>socket</code> 使其变为 <code>non-blocking</code>。</p><p><code>Socket</code> 设置为 <code>NONBLOCK</code> （非阻塞）就是告诉内核，当所有请求的 <code>I/O</code> 操作无法完成时，不要将进程睡眠，而是返回一个错误码（<code>EWOULDBLOCK</code>），这样请求就不会阻塞。当对一个 <code>non-blocking socket</code> 执行读操作时，流程是这个样子：</p><p><img src="/img/blog_image/Linux_internetIO/Non-blocking.png" alt="2.2 Non-Blocking I/O Model"></p><p>当用户进程调用了 <code>recvfrom</code> 这个系统调用，如果 <code>kernel</code> 中的数据还没有准备好，那么它并不会 <code>block</code> 用户进程，而是立刻返回一个 <code>EWOULDBLOCK</code> 错误代码。从用户进程角度讲，它发起一个 <code>read</code> 操作后，并不需要等待，而是马上得到了一个结果。用户进程判断结果是一个 <code>EWOULDBLOCK</code> 时，它就知道数据还没有准备好，此时用户进程可以进行其他操作。一旦 <code>kernel</code> 中的数据准备好了，并且又再次收到了用户进程的 <code>system call</code> ，那么它马上就将数据拷贝到了用户空间缓冲区，然后返回。</p><p>可以看到， <code>I/O</code> 操作函数将不断的测试数据是否已经准备好，如果没有准备好，继续轮询，直到数据准备好为止。整个 <code>I/O</code> 请求的过程中，虽然用户线程每次发起 <code>I/O</code> 请求后可以立即返回，但是为了等到数据，仍需要不断地轮询、重复请求，消耗了大量的 <code>CPU</code> 的资源。</p><p>所以，**<code>non blocking IO</code> 的特点是用户进程需要不断的主动询问 <code>kernel</code> 数据好了没有**：</p><ul><li><strong>等待数据准备就绪（<code>waiting for the data to be ready</code>）<code>非阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（<code>Copying the data from the kernel to the process</code>）<code>阻塞</code></strong></li></ul><p>一般很少直接使用这种模型，而是在其他 <code>I/O</code> 模型中使用非阻塞 <code>I/O</code> 这一特性。这种方式对单个 <code>I/O</code> 请求意义不大，但给 <code>I/O</code> 多路复用铺平了道路。</p><h4 id="2-3-I-O多路复用（I-O-multiplexing）"><a href="#2-3-I-O多路复用（I-O-multiplexing）" class="headerlink" title="2.3 I/O多路复用（I/O multiplexing）"></a>2.3 I/O多路复用（<code>I/O multiplexing</code>）</h4><p><code>IO multiplexing</code>在我们使用中基本这种模型的代表就是常见的<code>select，poll，epoll</code>，有些地方也称这种<code>IO</code>方式为事件驱动模型<code>event driven IO</code>。<code>select/poll/epoll</code>的好处就在于**单个系统<code>process</code>就可以同时处理多个网络连接的<code>IO</code>**。它的基本原理就是<code>select，poll，epool</code>这些个<code>function</code>会不断的轮询所负责的所有<code>socket</code>，当某个<code>socket</code>有数据到达了，就通知用户进程。</p><p><img src="/img/blog_image/Linux_internetIO/Multiple.png" alt="2.3 Multiple I/O Model"></p><p>当用户进程调用了 <code>select</code> ，那么整个进程会被 <code>block</code> ，而同时， <code>kernel</code> 会“监视”所有 <code>select</code> 负责的 <code>socket</code> ，当任何一个 <code>socket</code> 中的数据准备好了，<code>select</code> 就会返回。这个时候用户进程再调用 <code>read</code> 操作，将数据从 <code>kernel</code> 拷贝到用户进程。</p><p>所以，**<code>I/O</code> 多路复用的特点是通过一种机制一个进程能同时等待多个文件描述符，而这些文件描述符（套接字描述符）其中的任意一个进入读就绪状态，<code>select()</code> 函数就可以返回。**</p><p>这个图和 <code>blocking IO</code> 的图其实并没有太大的不同，事实上因为 <code>IO</code> 多路复用多了添加监视 <code>socket</code> ，以及调用 <code>select</code> 函数的额外操作，效率更差。还更差一些，因为这里需要使用两个 <code>system call</code> （<code>select</code>和<code>recvfrom</code>），而 <code>blocking IO</code> 只调用了一个 <code>system call</code> （<code>recvfrom</code>）。但是使用 <code>select</code> 以后最大的优势是用户可以在一个线程内同时处理多个 <code>socket</code> 的 <code>I/O</code> 请求。用户可以注册多个 <code>socket</code> ，然后不断地调用 <code>select</code> 读取被激活的 <code>socket</code> ，即可达到在同一个线程内同时处理多个 <code>I/O</code> 请求的目的。而在同步异阻塞模型中，必须通过多线程的凡是才能达到这个目的。</p><p><strong>所以，如果处理的连接数不是很高的话，使用 <code>select/epool</code> 的 <code>web server</code> 并没有性能优势，可能延迟还要更大。<code>select.epoll</code> 的优势并不是单个连接能处理得更快，而是在于能处理更多的连接</strong></p><p>在 <code>IO multipxing model</code> 中，实际中，对于每一个 <code>socket</code>，一般都设置为 <code>non-blocking</code>，但是，如上图所示，整个用户的 <code>process</code> 其实是一直被 <code>block</code> 的。只不过 <code>process</code> 是被 <code>select</code> 这个函数 <code>block</code>，而不是被 <code>socket IO</code> 给 <code>block</code>。</p><p>因此对于<code>IO</code>多路复用模型来说：</p><ul><li><strong>等待数据准备就绪（Waiting for the data to be ready）<code>阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（Copying the data from the kernel to the process）<code>阻塞</code></strong></li></ul><blockquote><p><strong>对于 <code>select/poll/epoll</code>  可以根据调用时指定的参数不同，而决定是阻塞或者非阻塞.</strong></p></blockquote><h4 id="2-4-信号驱动式IO模型（signal-driven-IO-model）"><a href="#2-4-信号驱动式IO模型（signal-driven-IO-model）" class="headerlink" title="2.4 信号驱动式IO模型（signal-driven IO model）"></a>2.4 信号驱动式IO模型（<code>signal-driven IO model</code>）</h4><p>首先我们运行 <code>socket</code> 进行信号驱动 <code>I/O</code>，并安装一个信号处理函数，进程继续运行并不阻塞。当数据准备好时，进程会收到一个 <code>SIGIO</code> 信号，可以在信号处理函数中调用 <code>I/O</code> 操作函数处理数据。</p><p><img src="/img/blog_image/Linux_internetIO/Signal.png" alt="2.4 Signal I/O Model"></p><h4 id="2-5-异步I-O（asynchronous-IO）"><a href="#2-5-异步I-O（asynchronous-IO）" class="headerlink" title="2.5 异步I/O（asynchronous IO）"></a>2.5 异步I/O（<code>asynchronous IO</code>）</h4><p>接下来我们看看 <code>asynchronous IO</code> 的流程：</p><p><img src="/img/blog_image/Linux_internetIO/Asynchronous.png" alt="2.5 Asynchronous I/O Model"></p><p>用户进程发起 <code>aio_read</code> 调用之后，立刻就可以开始去做其它的事。而另一方面，从 <code>kernel</code> 的角度，当它发现一个 <code>asynchronous read</code> 之后，首先它会立即返回，所以不会对用户进程产生任何 <code>block</code> 。然后，<code>kernel</code> 会等待数据准备完成，然后将数据拷贝到用户内存，当这一切都完成之后，<code>kernel</code> 会给用户进程发送一个 <code>signal</code>，告诉它 <code>read</code> 操作完成了。</p><p>异步 <code>I/O</code> 模型使用了 <code>Proactor</code> 设计模式实现了这一机制。</p><p>因此对异步 <code>IO</code> 模型来说：</p><ul><li><strong>等待数据准备就绪（waiting for the data to be ready）<code>非阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（Copying the data from the kernel to the process）<code>非阻塞</code></strong></li></ul><h4 id="2-6-各个-IO-model-的比较"><a href="#2-6-各个-IO-model-的比较" class="headerlink" title="2.6 各个 IO model 的比较"></a>2.6 各个 <code>IO model</code> 的比较</h4><p><img src="/img/blog_image/Linux_internetIO/every-model.png" alt="2.6 各个I/O Model的比较"></p><p>前四种模型的区别是阶段1不相同，阶段2基本相同（都是将数据从内核拷贝到调用者的缓冲区）。而异步<code>I/O</code>的两个阶段都不同于前四个模型。同步 <code>I/O</code> 操作引起请求进程阻塞，直到 <code>I/O</code> 操作完成。异步<code>I/O</code>操作不引起请求进程阻塞。</p><p>同时通过上面的图片，可以发现 <code>non-blocking IO</code> 和 <code>asynchronous IO</code> 的区别还是很明显的。在 <code>non-blocking IO</code> 中，虽然进程大部分时间都不会被 <code>block</code> ，但是它仍然要求进程主动的 <code>check</code>，并且当数据准备完成以后，也需要进程主动的再次调用 <code>recvfrom</code> 来将数据拷贝到用户内存。而 <code>asynchronous IO</code> 则完全不同。它就像是用户进程将整个 <code>IO</code> 操作交给了他人（<code>kernel</code>）完成，然后他人做完后发信号通知。在此期间，用户进程不需要去检查<code>IO</code>操作的状态，也不需要主动的去拷贝数据。</p><p>下面三种 <code>IO</code> 多路复用的对比，可以看到 <code>epool</code> 模型的性能比 <code>select/poll</code> 要高很多。</p><table><thead><tr><th>系统调用</th><th>select</th><th>poll</th><th>epoll</th></tr></thead><tbody><tr><td>操作方式</td><td>遍历</td><td>遍历</td><td>回调</td></tr><tr><td>底层实现</td><td>数组<code>bitmap</code></td><td>链表</td><td>哈希表</td></tr><tr><td>查找就绪<code>fd</code>时间复杂度</td><td>O(n)</td><td>O(n)</td><td>O(1)</td></tr><tr><td>最大支持文件描述符数</td><td>一般有最大值限制</td><td>65535</td><td>65535</td></tr><tr><td>工作模式</td><td>LT水平触发</td><td>LT水平触发</td><td>支持ET高效模式</td></tr><tr><td><code>fd</code>拷贝</td><td>每次调用 <code>select</code> 都需要把<code>fd</code>集合从用户态拷贝到内核态</td><td>每次调用 <code>poll</code> 都需要把<code>fd</code>集合从用户态拷贝到内核态</td><td>使用 <code>map()</code> 文件映射内存来加速与内核空间的消息传递，减少复制开销</td></tr></tbody></table><blockquote><p><strong>水平触发 LT：默认工作模式，即当epoll_wait检测到某描述符事件就绪并通知应用程序时，应用程序可以不立即处理该事件；下次调用epoll_wait时，会再次通知此事件。</strong></p><p><strong>边缘触发 ET：当epoll_wait检测到某描述符事件就绪并通知应用程序时，应用程序必须立即处理该事件。如果不处理，喜爱调用epoll_wait时，不会再次通知此事件。（直到你做了某些操作导致该描述符变成未就绪状态了，也就是说边缘触发只在状态由未就绪变为就绪时通知一次）。</strong></p></blockquote><p>下面是不同网络模型的性能对比：</p><p><img src="/img/blog_image/Linux_internetIO/Libevent_Benchmark.png" alt="2.7 Libevent_Benchmark"></p><blockquote><p>其中 <code>Kqueue</code> 是在 <code>FreeBSD</code> 平台上实现的 <code>I/O</code> 多路复用模型，跟 <code>Linux</code> 上的 <code>Epoll</code> 非常类似。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将GitHub中的Hexo部署到云服务器上（CentOS7）</title>
    <link href="/posts/ce41cac3/"/>
    <url>/posts/ce41cac3/</url>
    
    <content type="html"><![CDATA[<h1 id="一、登录云服务器安装-Git-和-Nginx"><a href="#一、登录云服务器安装-Git-和-Nginx" class="headerlink" title="一、登录云服务器安装 Git 和 Nginx"></a>一、登录云服务器安装 <code>Git</code> 和 <code>Nginx</code></h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta"> root </span>]<span class="hljs-meta"># yum -y install git nginx</span><br></code></pre></td></tr></table></figure><h1 id="二、修改默认打开页面"><a href="#二、修改默认打开页面" class="headerlink" title="二、修改默认打开页面"></a>二、修改默认打开页面</h1><p>找到 <code>Nginx</code> 配置文件，我这里是 <code>/etc/nginx/nginx.conf</code> ，记得先备份一下。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 在server段下修改root的目录即可。</span><br>[ root ]#  vim nginx.conf<br>...<br><span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">listen</span>       [::]:<span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">server_name</span>  _;<br>        <span class="hljs-attribute">root</span>         /data/www/hexo;<br>        <span class="hljs-attribute">index</span>        index.html index.htm;<br>&#125;<br>...<br></code></pre></td></tr></table></figure><p>检测配置文件并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> nginx -t</span><br><span class="hljs-meta">#</span><span class="bash"> nginx -s reload</span><br></code></pre></td></tr></table></figure><h1 id="三、创建一个-Git-裸库，保存-Repository"><a href="#三、创建一个-Git-裸库，保存-Repository" class="headerlink" title="三、创建一个 Git 裸库，保存 Repository"></a>三、创建一个 <code>Git</code> 裸库，保存 <code>Repository</code></h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta"> root </span>]<span class="hljs-meta"># cd ~</span><br>[<span class="hljs-meta"> root </span>]<span class="hljs-meta"># git init --bare &#123;你的仓库名称&#125;.git #我的仓库名称: My_repository.git</span><br></code></pre></td></tr></table></figure><p>使用 <code>Git-Hook</code> 同步网站根目录，这里使用的是 <code>Git</code> 中的 <code>post-receive</code> ，当有 <code>Git</code> 收发的时候会调用该脚本，自动将最新内容同步到网站跟目录中。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta"> root </span>]<span class="hljs-meta"># vim My_repository.git/post-receive</span><br></code></pre></td></tr></table></figure><p>将下面的语句写入文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git --work-tree=/data/www/hexo --git-dir=/data/hexo/My_repository.git checkout -f<br></code></pre></td></tr></table></figure><blockquote><p><code>--work-tree</code> ：博客文件存放目录。</p><p><code>--git-dir</code> ：<code>Git-Hook</code> 同步网站根目录。</p></blockquote><p>保存并赋予执行权限</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[ root ]# chmod +x <span class="hljs-regexp">/data/</span>hexo<span class="hljs-regexp">/My_repository.git/</span>hooks/post-receive<br></code></pre></td></tr></table></figure><h1 id="四、本地配置"><a href="#四、本地配置" class="headerlink" title="四、本地配置"></a>四、本地配置</h1><blockquote><p>这里以 <code>Windows</code> 为本地</p></blockquote><p>配置 <code>&quot;_config.yml&quot;</code></p><p>打开位于 <code>Hexo</code> 博客根目录下的 <code>&quot;_config.yml&quot;</code> ，在最后面知道到 <code>&quot;deploy&quot;</code> 并修改。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-symbol">deploy:</span><br>-  <span class="hljs-symbol">type:</span> git<br>   <span class="hljs-symbol">repository:</span> git<span class="hljs-variable">@github</span>.<span class="hljs-symbol">com:</span>ButATree/ButATree.github.io.git<br>   <span class="hljs-symbol">branch:</span> master<br>-  <span class="hljs-symbol">type:</span> git<br>   <span class="hljs-symbol">repository:</span> root@你的服务器IP地址<span class="hljs-symbol">:/data/hexo/My_repository</span>.git<br>   <span class="hljs-symbol">branch:</span> master   <span class="hljs-comment"># 分支</span><br></code></pre></td></tr></table></figure><blockquote><p>**注意若原来 <code>type: git</code> 前面没有 <code>-</code> 符号，需要手动添加上，不然后面会报错。 </p></blockquote><p>本地 <code>git</code> 软件中执行下命令即可</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>以后 <code>hexo d</code> 的时候就会推到 <code>GitHub</code> 和个人服务器上了。</p><h1 id="五、Hexo-d-免密"><a href="#五、Hexo-d-免密" class="headerlink" title="五、Hexo d 免密"></a>五、<code>Hexo d</code> 免密</h1><p>上述 <code>hexo d</code> 每次推到服务器上，都需要密码，通过添加密钥免密推送。可以在本地建立密钥上传到 <code>GitHub</code> 和你的服务器下的 <code>~/.ssh</code> 即可。</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vala">ssh-keygen -t rsa<br><span class="hljs-meta"># 一直回车即可，然后将 id_rsa.pub 中的密钥信息拷贝到 authorized_keys 即可。</span><br><span class="hljs-meta"># GitHub 中添加密钥：右上角个人信息 → SSH and GPG keys → New SSH key</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iptables基础详解</title>
    <link href="/posts/fae948f1/"/>
    <url>/posts/fae948f1/</url>
    
    <content type="html"><![CDATA[<h1 id="iptables-概念"><a href="#iptables-概念" class="headerlink" title="iptables 概念"></a><code>iptables</code> 概念</h1><p>从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙<br>主机防火墙：针对于单个主机进行防护。网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。<br>网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。</p><p>从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。<br>硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。</p><h2 id="iptables-用户→程序→内核→硬件"><a href="#iptables-用户→程序→内核→硬件" class="headerlink" title="iptables  (用户→程序→内核→硬件)"></a><code>iptables</code>  (用户→程序→内核→硬件)</h2><p><code>iptables</code> 其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过 <code>iptables</code> 这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫 <code>netfilter</code> 。</p><p><code>netfilter</code> 才是防火墙真正的安全框架（<code>framework</code>），<code>netfilter</code> 位于内核空间。<code>iptables</code> 其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。<code>netfilter/iptables</code>（下文中简称为<code>iptables</code>）组成 <code>Linux</code> 平台下的包过滤防火墙，与大多数的 <code>Linux</code> 软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（<code>NAT</code>）等功能。<code>Netfilter</code> 是 <code>Linux</code> 操作系统核心层内部的一个数据包处理模块，它具有如下功能：<br>网络地址转换(<code>Network Address Translate</code>)<br>数据包内容修改<br>以及数据包过滤的防火墙功能</p><p><code>iptables</code> 并没有一个守护进程，不能算是真正意义上的服务，而应该算是内核提供的功能。</p><h1 id="iptables-基础"><a href="#iptables-基础" class="headerlink" title="iptables 基础"></a><code>iptables</code> 基础</h1><h2 id="iptables-防火墙简介"><a href="#iptables-防火墙简介" class="headerlink" title="iptables 防火墙简介"></a><code>iptables</code> 防火墙简介</h2><p><code>Netfilter/iptables</code> (以下简称iptables)是<code>Unix/linux</code> 系统自带的优秀且完全免费的基于包过滤的防火墙工具、它的功能十分强大、使用非常灵活、可以对流入、流出及流经服务器的数据包进行精细的控制。特别是它可以在一台非常低配置下跑的非常好。提供400台机器的办公上网共享服务丝毫不逊色数万RMB企业级专业路由器防火墙</p><p><code>Iptables</code> 是 <code>linux 2.4</code>及<code>2.6</code>内核中集成的服务、其功能与安全性比老一辈<code>ipvfwadm</code> 、<code>ipchanins</code> 强大的多、一般认为 <code>iptables</code> 工作在OSI七层的、二、三层、四层。</p><p>首先介绍 <code>iptables</code> 的结构：<code>iptables</code>  → <code>Tables</code> → <code>Chains</code> → <code>Rules</code>. 简单地讲，<code>tables</code> 由 <code>chains</code> 组成，而 <code>chains</code> 又由 <code>rules</code> 组成。如下图所示。</p><p><img src="/img/blog_image/Linux_iptables_contentImage/tables_chain_rules.png"></p><h3 id="一、iptables-的表与链"><a href="#一、iptables-的表与链" class="headerlink" title="一、iptables 的表与链"></a>一、<code>iptables</code> 的表与链</h3><p><code>iptables</code> 具有 <code>Filter</code>、<code>NAT</code>、<code>Mangle</code>、<code>Raw</code> 四种内建表：</p><blockquote><p>4 个表的优先级由高到底：<code>Raw</code> &gt; <code>Mangle</code> &gt; <code>Nat</code> &gt; <code>Filter</code></p><ul><li><code>RAW</code> 表只使用在 <code>PREROUTING</code> 链和 <code>OUTPUT</code> 链上,因为优先级最高，从而可以对收到的数据包在连接跟踪前进行处理。一但用户使用了 <code>RAW</code> 表,在某个链上，<code>RAW</code> 表处理完后,将跳过 <code>NAT</code> 表和 <code>ip_conntrack</code> 处理,即不再做地址转换和数据包的链接跟踪处理了。</li><li><code>filter</code> 表是预设规则表，拥有 <code>INPUT</code>、<code>FORWARD</code> 和 <code>OUTPUT</code> 三个规则链，这个规则表顾名思义是用来进行封包过滤的理动作。</li><li><code>net</code> 表拥有 <code>prerouting</code> 和 <code>postrouting</code> 两个规则链， 主要功能为进行一对一、一对多、多对多等网址转译工作（<code>SNAT,DNAT</code>）。</li><li><code>mangle</code> 拥有 <code>prerouting</code>、<code>FORWARD</code>、<code>postrouting</code>三个规则链，除了进行网址转译工作会改写封包外，在某些特殊应用可能也必须去改写封包(<code>ITL</code>、<code>TOS</code>)或者是设定 <code>MARK</code> (将封包作记号，以进行后续的过滤)这时就必须将这些工作定义在 <code>mangles</code> 规则表中</li></ul></blockquote><h4 id="iptables-表"><a href="#iptables-表" class="headerlink" title="iptables 表"></a><code>iptables</code> 表</h4><h5 id="1-filter-表"><a href="#1-filter-表" class="headerlink" title="1. filter 表"></a>1. <code>filter</code> 表</h5><p><code>Filter</code> 表示 <code>iptables</code> 的默认表，因此如果你没有自定义表，那么就默认使用 <code>filter</code> 表，它具有以下三种内建链：</p><ul><li><code>INPUT</code>链 – 处理来自外部的数据。</li><li><code>FORWARD</code>链 – 将数据转发到本机的其他网卡设备上。</li><li><code>OUTPUT</code>链 – 处理向外发送的数据。</li></ul><h5 id="2-nat-表"><a href="#2-nat-表" class="headerlink" title="2. nat 表"></a>2. <code>nat</code> 表</h5><p><code>NAT</code>表有三种内建链：</p><ul><li><code>PREROUTING</code> 链 – 处理刚到达本机并在路由转发前的数据包。它会转换数据包中的目标IP地址（<code>destination ip address</code>），通常用于<code>DNAT</code>(<code>destination NAT</code>)。</li><li><code>OUTPUT</code> 链 – 处理本机产生的数据包。</li><li><code>POSTROUTING</code> 链 – 处理即将离开本机的数据包。它会转换数据包中的源IP地址（<code>source ip address</code>），通常用于<code>SNAT</code>（<code>source NAT</code>）。</li></ul><h5 id="3-mangle-表"><a href="#3-mangle-表" class="headerlink" title="3. mangle 表"></a>3. <code>mangle</code> 表</h5><p><code>Mangle</code> 表用于指定如何处理数据包。它能改变<code>TCP</code>头中的<code>QoS</code>位。<code>Mangle</code> 表具有5个内建链：</p><ul><li><code>PREROUTING</code></li><li><code>OUTPUT</code></li><li><code>FORWARD</code></li><li><code>INPUT</code></li><li><code>POSTROUTING</code></li></ul><h5 id="4-raw-表"><a href="#4-raw-表" class="headerlink" title="4. raw 表"></a>4. <code>raw</code> 表</h5><p><code>Raw</code>表用于处理异常，它具有2个内建链：</p><ul><li><code>PREROUTING chain</code></li><li><code>OUTPUT chain</code></li></ul><h6>常用命令</h6><ul><li><code>-A</code> ：追加 <code>iptables -A INPUT</code></li><li><code>-D</code> ：删除规则 <code>iptables -D INPUT 1(编号)</code></li><li><code>-R</code> ：修改规则 <code>iptables -R INPUT 1 -s 192.168.1.0 -j DROP</code> 取代取代现行规则，顺序不变(1是位置)</li><li><code>-I</code> ：插入规则 <code>iptables -I INPUT 1 --dport 80 -j ACCEPT</code>  插入一条规则，原本位置上的规则将会往后移动一个顺位</li><li><code>-L</code> ：查看规则 <code>iptables -L INPUT</code> 列出规则链中的所有规则</li><li><code>-N</code> ：新的规则 <code>iptables -N allowed</code> 定义新的规则</li></ul><h6>通用参数</h6><ul><li><code>-p</code> ：协议 <code>iptables -A INPUT -p tcp</code></li><li><code>-s</code> ：源地址 <code>iptables -A INPUT -s 192.168.1.1</code></li><li><code>-d</code> ：目的地址 <code>iptables -A INPUT -d 192.168.12.1</code></li><li><code>--sport</code> ：源端口 <code>iptables -A INPUT -p tcp --sport 22</code></li><li><code>--dport</code>：目的端口 <code>iptables -A INPUT -p tcp --dport 22</code></li><li><code>-i</code> ：指定入口网卡 <code>iptables -A INPUT -i eth0</code></li><li><code>-o</code> ：指定出口网卡 <code>iptables -A FORWARD -o eth0</code></li><li><code>-j</code> ： 定要进行的处理动作</li></ul><h6>常用的ACTION</h6><ul><li><code>DROP</code> ：丢弃</li><li><code>REJECT</code> ：明示拒绝</li><li><code>ACCEPT</code> ：接受</li><li><code>SNAT</code>： 基于原地址的转换</li><li><code>source</code> ：指定原地址</li></ul><blockquote><p>例子：</p><p> 比如我们现在要将所有 <code>192.168.10.0</code> 网段的 <code>IP</code> 在经过 <code>iptables</code> 的时候全都转换成 <code>172.16.100.1</code> 这个假设出来的外网地址：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -t nat -A POSTROUTING -s <span class="hljs-number">192.168.10.0</span>/<span class="hljs-number">24</span> -j SNAT --to-source <span class="hljs-number">172.16.100.1</span>(外网有效ip)<br></code></pre></td></tr></table></figure><p>这样，只要是来自本地网络的试图通过网卡访问网络的，都会被统统转换成 <code>172.16.100.1</code> 这个 <code>IP</code>。</p><p><code>MASQUERADE</code> (动态伪装）— 家用带宽获取的外网 <code>ip</code>，就是用到了动态伪装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -t nat -A POSTROUTING -s <span class="hljs-number">192.168.10.0</span>/<span class="hljs-number">24</span> -j MASQUERADE<br></code></pre></td></tr></table></figure><p><code>DNAT</code> ： 目标地址转换<br><code>destination</code> ： 指定目标地址</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">iptables</span> -t nat -A PREROUTING -d <span class="hljs-number">192.168.10.18</span> -p tcp --dport <span class="hljs-number">80</span> -j DNAT --to-destination <span class="hljs-number">172.16.100.2</span><br></code></pre></td></tr></table></figure><p><code>192.168.10.18</code> 访问80端口转换到 <code>172.16.100.2</code> 上<br><code>MASQUERADE</code> ：源地址伪装<br><code>REDIRECT</code> ：重定向：主要用于实现端口重定向<br><code>MARK</code> ：打防火墙标记的<br><code>RETURN </code>：返回 在自定义链执行完毕后使用返回，来返回原规则链。</p></blockquote><h5 id="5-小结"><a href="#5-小结" class="headerlink" title="5.小结"></a>5.小结</h5><p>下图展示了 <code>iptables</code> 的三个内建表：</p><p><img src="/img/blog_image/Linux_iptables_contentImage/iptables_sum.png"></p><hr><h4 id="iptables-链"><a href="#iptables-链" class="headerlink" title="iptables 链"></a><code>iptables</code> 链</h4><h5 id="1-链-chain"><a href="#1-链-chain" class="headerlink" title="1. 链   (chain)"></a>1. 链   (chain)</h5><p>每个表都有自己的一组内置链，可以对链进行自定义，这样就可以建立一组规则，<code>filter</code> 表中的 <code>input</code> 、<code>output</code> 和 <code>forward</code> 链。</p><h5 id="2-匹配（match）"><a href="#2-匹配（match）" class="headerlink" title="2. 匹配（match）"></a>2. 匹配（match）</h5><p>每个 <code>iptables</code> 规则都包含一组匹配以及一个目标，<code>iptables</code> 匹配指的是数据包必须匹配的条件，只有当数据包满足所有的匹配条件时，<code>iptables</code> 才能根据由该规则的目标所指定的动作来处理该数据包，匹配都在 <code>iptable</code> 的命令行中指定。</p><ul><li><code>source</code> ：匹配源ip地址或网络</li><li><code>destination (-d)</code> ：匹配目标 <code>ip</code> 地址或网络</li><li><code>protocol (-p)</code> ：匹配 <code>ip</code> 值 （<code>TCP</code>/<code>UDP</code>）</li><li><code>in-interface (-i)</code> ：流入接口(例如，<code>eth0</code> 、<code>ens32</code>)</li><li><code>out-interface (-o)</code> ：流出接口</li><li><code>state</code> ：匹配一组连接状态</li><li><code>string</code> ：匹配应用层数据字节序列</li><li><code>comment</code> ：在内核内存中为一个规则关联多达 <code>256</code> 个字节的注释数据</li></ul><h5 id="3-目标（target）"><a href="#3-目标（target）" class="headerlink" title="3. 目标（target）"></a>3. 目标（target）</h5><p><code>iptables</code> 支持一组目标，用于数据包匹配一条规则时触发一个动作</p><ul><li><code>ACCEPT</code> ：允许数据包通过</li><li><code>DROP</code> ：丢弃数据包，不对该数据包做进一步的处理，对接收栈而言，就好像该数据包从来没有被接收一样</li><li><code>LOG</code> ：将数据包信息记录到 <code>syslog</code></li><li><code>REJECT</code> ：丢弃数据包，同时发送适当的响应报文(针对 <code>TCP</code> 连接的 <code>TCP</code> 重要数据包或针对 <code>UDP</code> 数据包的 <code>ICMP</code> 端口不可达消息)</li><li><code>RETURN</code> ：在调用链中继续处理数据包</li></ul><h4 id="链管理命令（立即生效）"><a href="#链管理命令（立即生效）" class="headerlink" title="链管理命令（立即生效）"></a>链管理命令（立即生效）</h4><ul><li><p><code>-P</code> ：设置默认策略的（设定默认门是关着的还是开着的</p><p>默认策略一般只有两种</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">iptables</span> <span class="hljs-selector-tag">-P</span> <span class="hljs-selector-tag">INPUT</span> (DROP|ACCEPT)<br></code></pre></td></tr></table></figure><p>这就把默认规则给拒绝了。并且没有定义哪个动作，所以关于外界连接的所有规则包括 <code>Xshell</code> 连接之类的，远程连接都被拒绝了</p></li><li><p><code>-F </code> ： <code>FLASH</code>，清空规则链的(注意每个链的管理权限)</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">iptables -<span class="hljs-built_in">t</span> nat -F PREROUTING<br># iptables -<span class="hljs-built_in">t</span> nat -F 清空nat表的所有链<br></code></pre></td></tr></table></figure></li><li><p><code>-X</code> ： 用于删除用户自定义的空链<br>  使用方法跟 <code>-N</code> 相同，但是在删除之前必须要将里面的链给清空昂了</p></li><li><p><code>-N</code> ：<code>NEW</code> 支持用户新建一个链</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">iptables</span> -N inbound_tcp_web <br><span class="hljs-comment"># 表示附在tcp表上用于检查web的。</span><br></code></pre></td></tr></table></figure></li><li><p>-E：用来 <code>Rename chain</code> 主要是用来给用户自定义的链重命名</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -E oldname newname</span><br></code></pre></td></tr></table></figure></li><li><p><code>-Z</code> ：清空链，及链中默认规则的计数器的（有两个计数器，被匹配到多少个数据包，多少个字节）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">iptables</span> -Z <br><span class="hljs-comment">#清空</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="规则管理命令"><a href="#规则管理命令" class="headerlink" title="规则管理命令"></a>规则管理命令</h4><ul><li><p><code>-A</code> ：追加，在当前链的最后新增一个规则</p></li><li><p><code>-I num</code> ：插入，把当前规则插入为第几条。</p></li><li><p><code>-I 3</code> ：插入为第三条</p></li><li><p><code>-R num</code> ：<code>Replays</code> 替换/修改第几条规则</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-function"><span class="hljs-title">iptables</span></span> -R <span class="hljs-number">3</span> ...<br></code></pre></td></tr></table></figure></li><li><p><code>-D num</code> ：删除，明确指定删除第几条规则</p></li></ul><h4 id="查看管理命令-“-L”"><a href="#查看管理命令-“-L”" class="headerlink" title="查看管理命令 “-L”"></a>查看管理命令 “-L”</h4><blockquote><p>附加子命令<br><code>-n </code>：以数字的方式显示 <code>ip</code> ，它会将 <code>ip</code> 直接显示出来，如果不加 <code>-n</code> ，则会将 <code>ip</code> 反向解析成主机名。<br><code>-v</code>：显示详细信息<br><code>-vv</code><br><code>-vvv</code> :越多越详细<br><code>-x</code>：在计数器上显示精确值，不做单位换算<br><code>--line-numbers</code> : 显示规则的行号<br><code>-t nat</code>：显示所有的关卡的信息</p></blockquote><h4 id="详解匹配标准"><a href="#详解匹配标准" class="headerlink" title="详解匹配标准"></a>详解匹配标准</h4><h6>扩展匹配</h6><ol><li><p>隐含扩展：对协议的扩展</p><p><code>-p tcp</code> ：<code>TCP</code> 协议的扩展。一般有三种扩展</p><p><code>--dport XX-XX</code> ：指定目标端口,不能指定多个非连续端口,只能指定单个端口，比如</p><ul><li><p><code>--dport 21</code> 或者 <code>--dport 21-23</code> (此时表示21,22,23)</p></li><li><p><code>--sport</code> ：指定源端口</p></li><li><p><code>--tcp-fiags</code> ：<code>TCP</code> 的标志位（<code>SYN</code>、<code>ACK</code>、<code>FIN</code>、<code>PSH</code>、<code>RST</code> 、<code>URG</code>）<br>  对于它，一般要跟两个参数：</p><ul><li><p>   1.检查的标志位</p></li><li><p> 2.必须为1的标志位</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck">--<span class="hljs-comment">tcpflags</span> <span class="hljs-comment">syn</span><span class="hljs-string">,</span><span class="hljs-comment">ack</span><span class="hljs-string">,</span><span class="hljs-comment">fin</span><span class="hljs-string">,</span><span class="hljs-comment">rst</span> <span class="hljs-comment">syn</span>  <span class="hljs-comment">=</span>  --<span class="hljs-comment">syn</span><br><span class="hljs-comment">#</span> <span class="hljs-comment">表示检查这4个位，这4个位中syn必须为1，其他的必须为0。所以这个意思就是用于检测三次握手的第一次包的。对于这种专门匹配第一包的SYN为1的包，还有一种简写方式，叫做</span>--<span class="hljs-comment">syn</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p><code>-p udp</code> ：<code>UDP</code> 协议的扩展<br>  <code>--dport</code><br> <code>--sport</code></p></li><li><p><code>-p icmp</code> ：<code>icmp</code> 数据报文的扩展<br>  <code>--icmp-type</code>：<br>  <code>echo-request</code> (请求回显)，一般用 <code>8</code> 来表示<br>   所以 <code>--icmp-type 8</code> 匹配请求回显数据包<br>   <code>echo-reply</code>（响应的数据包）一般用 <code>0</code> 来表示</p></li></ul></li></ol><h6>显式扩展（-m）</h6><p><strong>扩展各种模块</strong><br><code>-m multiport</code> ：表示启用多端口扩展 之后我们就可以启用比如 </p><p><code>--dports 21,23,80</code></p><blockquote><p><strong>限制收发包的状态</strong></p><p><code>--state</code> ：<code>INVALID</code>, <code>ESTABLISHED</code>, <code>NEW</code>, <code>RELATED or UNTRACKED</code>。</p><p>​        <code>NEW</code> ：新连接请求；</p><p>​        <code>ESTABLISHED</code> ：已建立的连接；</p><p>​        <code>INVALID</code> ：无法识别的连接；</p><p>​        <code>RELATED</code> ：相关联的连接，当前连接是一个新请求，但附属于某个已存在的连接；</p><p>​        <code>UNTRACKED</code> ：未追踪的连接；</p><p><strong>state扩展：</strong></p><p>内核模块装载：<br>　　<code>nf_conntrack</code><br>　　<code>nf_conntrack_ipv4</code></p><p>手动装载：<br>　　<code>nf_conntrack_ftp</code></p><p>追踪到的连接：<br>　　<code>/proc/net/nf_conntrack</code></p><p>调整可记录的连接数量最大值：<br>　　<code>/proc/sys/net/nf_conntrack_max</code></p><p>超时时长：<br>　　<code>/proc/sys/net/netfilter/*timeout*</code></p></blockquote><h3 id="二、IPTABLES-规则-Rules"><a href="#二、IPTABLES-规则-Rules" class="headerlink" title="二、IPTABLES 规则(Rules)"></a>二、IPTABLES 规则(Rules)</h3><p>牢记以下三点式理解 <code>iptables</code> 规则的关键：</p><ul><li><code>Rules</code>包括一个条件和一个目标(<code>target</code>) </li><li>如果满足条件，就执行目标(<code>target</code>)中的规则或者特定值。</li><li>如果不满足条件，就判断下一条<code>Rules</code>。</li></ul><p><strong>目标值（<code>Target Values</code>）</strong></p><p>下面是你可以在 <code>target</code> 里指定的特殊值：</p><ul><li><code>ACCEPT</code> – 允许防火墙接收数据包</li><li><code>DROP</code> – 防火墙丢弃包</li><li><code>QUEUE</code> – 防火墙将数据包移交到用户空间</li><li><code>RETURN</code> – 防火墙停止执行当前链中的后续<code>Rules</code>，并返回到调用链(<code>the calling chain</code>)中。</li></ul><p>如果你执行 <code>iptables --list</code>你将看到防火墙上的可用规则。下例说明当前系统没有定义防火墙，你可以看到，它显示了默认的<code>filter</code>表，以及表内默认的<code>input</code>链, <code>forward</code>链, <code>output</code>链。</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cmake">[root@<span class="hljs-keyword">test</span> ~]<span class="hljs-comment"># iptables --list</span><br>Chain INPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain FORWARD (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination <br></code></pre></td></tr></table></figure><p>查看 <code>nat</code> 表：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cmake">[root@<span class="hljs-keyword">test</span> ~]<span class="hljs-comment"># iptables -t nat --list</span><br>Chain PREROUTING (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain INPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain POSTROUTING (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination<br></code></pre></td></tr></table></figure><p>查看 <code>mangle</code> 表：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cmake">[root@<span class="hljs-keyword">test</span> ~]<span class="hljs-comment"># iptables -t mangle --list</span><br>Chain PREROUTING (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain INPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain FORWARD (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain POSTROUTING (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination<br></code></pre></td></tr></table></figure><p>查看 <code>raw</code> 表：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cmake">[root@<span class="hljs-keyword">test</span> ~]<span class="hljs-comment"># iptables -t raw --list</span><br>Chain PREROUTING (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination<br></code></pre></td></tr></table></figure><blockquote><p>注意：如果不指定 <code>-t</code>选项，就只会显示默认的 <code>filter</code> 表。因此，以下两种命令形式是一个意思：</p></blockquote><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">iptables</span> <span class="hljs-title">[</span><span class="hljs-literal">-</span><span class="hljs-comment">t</span> <span class="hljs-comment">filter</span><span class="hljs-title">]</span> --<span class="hljs-comment">list</span> <span class="hljs-comment">/</span> <span class="hljs-comment">iptables</span>  --<span class="hljs-comment">list</span><br></code></pre></td></tr></table></figure><p>以下例子表明在 <code>filter</code> 表的 <code>input</code>链, <code>forward</code> 链, <code>output</code> 链中存在规则：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># iptables –list </span><br><span class="hljs-attribute">Chain</span> INPUT (policy ACCEPT) <br><span class="hljs-attribute">num</span>     target         prot   opt     source       destination <br><span class="hljs-attribute">1</span>  RH-Firewall-<span class="hljs-number">1</span>-INPUT   <span class="hljs-literal">all</span>    —     <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span><br><br><span class="hljs-attribute">Chain</span> FORWARD (policy ACCEPT)<br><span class="hljs-attribute">num</span>     target         prot   opt     source       destination<br><span class="hljs-attribute">1</span>    RH-Firewall-<span class="hljs-number">1</span>-INPUT  <span class="hljs-literal">all</span>     –    <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span><br><br><span class="hljs-attribute">Chain</span> OUTPUT (policy ACCEPT)<br><span class="hljs-attribute">num</span> target  prot opt source       destination<br><br><span class="hljs-attribute">Chain</span> RH-Firewall-<span class="hljs-number">1</span>-INPUT (<span class="hljs-number">2</span> references)<br><span class="hljs-attribute">num</span> target  prot opt source       destination<br><span class="hljs-attribute">1</span>  ACCEPT  <span class="hljs-literal">all</span> – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span><br><span class="hljs-attribute">2</span>  ACCEPT  icmp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     icmp type <span class="hljs-number">255</span><br><span class="hljs-attribute">3</span>  ACCEPT  esp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span><br><span class="hljs-attribute">4</span>  ACCEPT  ah – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span><br><span class="hljs-attribute">5</span>  ACCEPT  udp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">224.0.0.251</span>    udp dpt:<span class="hljs-number">5353</span><br><span class="hljs-attribute">6</span>  ACCEPT  udp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     udp dpt:<span class="hljs-number">631</span><br><span class="hljs-attribute">7</span>  ACCEPT  tcp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     tcp dpt:<span class="hljs-number">631</span><br><span class="hljs-attribute">8</span>  ACCEPT  <span class="hljs-literal">all</span> – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     state RELATED,ESTABLISHED<br><span class="hljs-attribute">9</span>  ACCEPT  tcp – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     state NEW tcp dpt:<span class="hljs-number">22</span><br><span class="hljs-attribute">10</span> REJECT  <span class="hljs-literal">all</span> – <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>      <span class="hljs-number">0.0.0.0</span>/<span class="hljs-number">0</span>     reject-with icmp-host-prohibited<br></code></pre></td></tr></table></figure><p>以上输出包含下列字段：</p><ul><li> <code>num</code> – 指定链中的规则编号</li><li><code>target</code> – 前面提到的 <code>target</code>的特殊值</li><li><code>prot</code> – 协议：<code>tcp</code>,<code>udp</code>,<code>icmp</code>等</li><li><code>source</code> – 数据包的源<code>IP</code>地址</li><li><code>destination</code> – 数据包的目标<code>IP</code>地址</li></ul><h3 id="三、清空所有iptables规则"><a href="#三、清空所有iptables规则" class="headerlink" title="三、清空所有iptables规则"></a>三、清空所有iptables规则</h3><p>在配置<code>iptables</code>之前，你通常需要用<code>iptables --list</code>命令或者<code>iptables --save</code>命令查看有无现存规则，因为有时需要删除现有的<code>iptables</code>规则：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-variable">iptables</span> -<span class="hljs-function"><span class="hljs-title">F</span>(--<span class="hljs-variable">flush</span>)</span><br></code></pre></td></tr></table></figure><p>这两条命令是等效的。但是并非执行后就万事大吉了。你仍然需要检查规则是不是真的清空了，因为有的 <code>linux</code> 发行版上这个命令不会清除 <code>NAT</code> 表中的规则，此时只能手动清除：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">iptables [-t FILTER<span class="hljs-regexp">/NAT/</span>MANGLE/RAW] -F<br></code></pre></td></tr></table></figure><h3 id="四、永久生效"><a href="#四、永久生效" class="headerlink" title="四、永久生效"></a>四、永久生效</h3><p>当你删除、添加规则后，这些更改并不能永久生效，这些规则很有可能在系统重启后恢复原样。为了让配置永久生效，根据平台的不同，具体操作也不同。下面进行简单介绍：</p><h4 id="1-Ubuntu"><a href="#1-Ubuntu" class="headerlink" title="1.Ubuntu"></a>1.Ubuntu</h4><p>首先，保存现有的规则：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">iptables-save &gt; <span class="hljs-regexp">/etc/i</span>ptables.rules<br></code></pre></td></tr></table></figure><p>然后新建一个<code>bash</code>脚本，并保存到 <code>/etc/network/if-pre-up.d/</code>目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash </span><br>iptables-restore &lt; /etc/iptables.rules<br></code></pre></td></tr></table></figure><p>这样，每次系统重启后 <code>iptables</code> 规则都会被自动加载。</p><blockquote><p>注意：不要尝试在 <code>.bashrc</code> 或者 <code>.profile</code> 中执行以上命令，因为用户通常不是 <code>root</code>，而且这只能在登录时加载 <code>iptables</code>规则。</p></blockquote><h4 id="2-CentOS-RedHat"><a href="#2-CentOS-RedHat" class="headerlink" title="2.CentOS, RedHat"></a>2.CentOS, RedHat</h4><p>保存 <code>iptables</code> 规则 </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service iptables save</span><br></code></pre></td></tr></table></figure><p>重启 <code>iptables</code> 服务</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">service iptables <span class="hljs-literal">stop</span><br>service iptables <span class="hljs-literal">start</span><br></code></pre></td></tr></table></figure><p>查看当前规则：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>sysconfig/iptables<br></code></pre></td></tr></table></figure><h3 id="五、追加iptables规则"><a href="#五、追加iptables规则" class="headerlink" title="五、追加iptables规则"></a>五、追加iptables规则</h3><p>可以使用 <code>iptables -A</code> 命令追加新规则，其中 <code>-A</code> 表示 <code>Append</code>。因此， 新的规则将追加到链尾。</p><p>一般而言，最后一条规则用于丢弃(<code>DROP</code>)所有数据包。如果你已经有这样的规则了，并且使用  <code>-A</code> 参数添加新规则，那么就是无用功。</p><h4 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">iptables -A chain firewall-<span class="hljs-keyword">rule</span><br>-A chain – 指定要追加规则的链<br>firewall-<span class="hljs-keyword">rule</span> – 具体的规则参数<br></code></pre></td></tr></table></figure><h4 id="2-描述规则的基本参数"><a href="#2-描述规则的基本参数" class="headerlink" title="2. 描述规则的基本参数"></a>2. 描述规则的基本参数</h4><p>以下这些规则参数用于描述数据包的协议、源地址、目的地址、允许经过的网络接口，以及如何处理这些数据包。这些描述是对规则的基本描述。</p><h5 id="p-协议（protocol）"><a href="#p-协议（protocol）" class="headerlink" title="-p 协议（protocol）"></a>-p 协议（protocol）</h5><ul><li>指定规则的协议，如<code>tcp</code>, <code>udp</code>, <code>icmp</code>等，可以使用<code>all</code>来指定所有协议。</li><li>如果不指定<code>-p</code>参数，则默认是<code>all</code>值。这并不明智，请总是明确指定协议名称。</li><li>可以使用协议名(如<code>tcp</code>)，或者是协议值（比如6代表<code>tcp</code>）来指定协议。映射关系请查看<code>/etc/protocols</code>。</li><li>还可以使用<code>--protocol</code>参数代替<code>-p</code>参数。</li></ul><h5 id="s-源地址（source）"><a href="#s-源地址（source）" class="headerlink" title="-s 源地址（source）"></a>-s 源地址（source）</h5><ul><li>指定数据包的源地址</li><li>参数可以使<code>IP</code>地址、网络地址、主机名</li><li>例如：<code>-s 192.168.1.101</code>指定IP地址</li><li>例如：<code>-s 192.168.1.10/24</code>指定网络地址</li><li>如果不指定<code>-s</code>参数，就代表所有地址</li><li>还可以使用<code>–src</code>或者<code>--source</code></li></ul><h5 id="d-目的地址（destination）"><a href="#d-目的地址（destination）" class="headerlink" title="-d 目的地址（destination）"></a>-d 目的地址（destination）</h5><ul><li>指定目的地址</li><li>参数和<code>-s</code>相同</li><li>还可以使用<code>–dst</code>或者<code>--destination</code></li></ul><h5 id="j-执行目标（jump-to-target）"><a href="#j-执行目标（jump-to-target）" class="headerlink" title="-j 执行目标（jump to target）"></a>-j 执行目标（jump to target）</h5><ul><li><code>-j</code>代表”<code>jump to target</code>”</li><li><code>-j</code>指定了当与规则(<code>Rule</code>)匹配时如何处理数据包</li><li>可能的值是<code>ACCEPT</code>, <code>DROP</code>, <code>QUEUE</code>, <code>RETURN</code>, <code>MASQUERADE</code></li><li>还可以指定其他链（<code>Chain</code>）作为目标</li><li>注：<code>MASQUERADE</code>，地址伪装，算是<code>snat</code>中的一种特例，可以实现自动化的<code>snat</code></li></ul><h5 id="i-输入接口（input-interface）"><a href="#i-输入接口（input-interface）" class="headerlink" title="-i 输入接口（input interface）"></a>-i 输入接口（input interface）</h5><ul><li><code>-i</code>代表输入接口(<code>input interface</code>)</li><li><code>-i</code>指定了要处理来自哪个接口的数据包</li><li>这些数据包即将进入<code>INPUT</code>, <code>FORWARD</code>, <code>PREROUTE</code>链</li><li>例如：<code>-i eth0</code>指定了要处理经由<code>eth0</code>进入的数据包</li><li>如果不指定<code>-i</code>参数，那么将处理进入所有接口的数据包</li><li>如果出现<code>! -i eth0</code>，那么将处理所有经由<code>eth0</code>以外的接口进入的数据包</li><li>如果出现<code>-i eth+</code>，那么将处理所有经由<code>eth开头的接口</code>进入的数据包</li><li>还可以使用<code>-in-interface</code>参数</li></ul><h5 id="o-输出（out-interface）"><a href="#o-输出（out-interface）" class="headerlink" title="-o 输出（out interface）"></a>-o 输出（out interface）</h5><ul><li><code>-o</code>代表<code>output interface</code></li><li><code>-o</code>指定了数据包由哪个接口输出</li><li>这些数据包即将进入<code>FORWARD</code>, <code>OUTPUT</code>, <code>POSTROUTING</code>链</li><li>如果不指定<code>-o</code>选项，那么系统上的所有接口都可以作为输出接口</li><li>如果出现<code>! -o eth0</code>，那么将从<code>eth0以外的接口</code>输出</li><li>如果出现<code>-i eth+</code>，那么将仅从<code>eth开头的接口</code>输出</li><li>还可以使用<code>-out-interface</code>参数</li></ul><h4 id="3-描述规则的扩展参数"><a href="#3-描述规则的扩展参数" class="headerlink" title="3. 描述规则的扩展参数"></a>3. 描述规则的扩展参数</h4><p>对规则有了一个基本描述之后，有时候我们还希望指定端口、<code>TCP</code>标志、<code>ICMP</code>类型等内容。</p><h5 id="–sport-源端口（source-port）针对-p-tcp-或者-p-udp"><a href="#–sport-源端口（source-port）针对-p-tcp-或者-p-udp" class="headerlink" title="–sport 源端口（source port）针对 -p tcp 或者 -p udp"></a>–sport 源端口（source port）针对 -p tcp 或者 -p udp</h5><ul><li>缺省情况下，将匹配所有端口</li><li>可以指定端口号或者端口名称，例如”<code>--sport 22</code>″与”<code>--sport ssh</code>”。</li><li><em>/etc/services</em>文件描述了上述映射关系。</li><li>从性能上讲，使用端口号更好</li><li>使用冒号可以匹配端口范围，如”<code>--sport 22:100</code>″</li><li>还可以使用”<code>--source-port</code>”</li></ul><h5 id="–dport-目的端口（destination-port）针对-p-tcp-或者-p-udp"><a href="#–dport-目的端口（destination-port）针对-p-tcp-或者-p-udp" class="headerlink" title="–dport 目的端口（destination port）针对-p tcp 或者 -p udp"></a>–dport 目的端口（destination port）针对-p tcp 或者 -p udp</h5><ul><li>参数和<code>--sport</code>类似</li><li>还可以使用”<code>--destination-port</code>”</li></ul><h5 id="–tcp-flags-TCP标志-针对-p-tcp"><a href="#–tcp-flags-TCP标志-针对-p-tcp" class="headerlink" title="–tcp-flags TCP标志 针对-p tcp"></a>–tcp-flags TCP标志 针对-p tcp</h5><ul><li>可以指定由逗号分隔的多个参数</li><li>有效值可以是：<code>SYN</code>,<code>ACK</code>, <code>FIN</code>, <code>RST</code>, <code>URG</code>, <code>PSH</code></li><li>可以使用<code>ALL</code>或者<code>NONE</code></li></ul><h5 id="–icmp-type-ICMP类型-针对-p-icmp"><a href="#–icmp-type-ICMP类型-针对-p-icmp" class="headerlink" title="–icmp-type ICMP类型 针对-p icmp"></a>–icmp-type ICMP类型 针对-p icmp</h5><ul><li><code>–icmp-type 0</code> 表示<code>Echo Reply</code></li><li><code>–icmp-type 8 </code> 表示<code>Echo</code></li></ul><h4 id="4-追加规则的完整实例：仅允许SSH服务"><a href="#4-追加规则的完整实例：仅允许SSH服务" class="headerlink" title="4. 追加规则的完整实例：仅允许SSH服务"></a>4. 追加规则的完整实例：仅允许SSH服务</h4><p>本例实现的规则将仅允许<code>SSH</code>数据包通过本地计算机，其他一切连接（包括<code>ping</code>）都将被拒绝。</p><h5 id="1-清空所有iptables规则"><a href="#1-清空所有iptables规则" class="headerlink" title="1. 清空所有iptables规则"></a>1. 清空所有iptables规则</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -F</span><br></code></pre></td></tr></table></figure><h5 id="2-接收目标端口为22的数据包"><a href="#2-接收目标端口为22的数据包" class="headerlink" title="2. 接收目标端口为22的数据包"></a>2. 接收目标端口为22的数据包</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">i</span> eth0 -<span class="hljs-selector-tag">p</span> tcp --dport <span class="hljs-number">22</span> -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="3-拒绝所有其他数据包"><a href="#3-拒绝所有其他数据包" class="headerlink" title="3.拒绝所有其他数据包"></a>3.拒绝所有其他数据包</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">INPUT</span> -j DROP<br></code></pre></td></tr></table></figure><h3 id="六、更改默认策略"><a href="#六、更改默认策略" class="headerlink" title="六、更改默认策略"></a>六、更改默认策略</h3><p>上例的例子仅对接收的数据包过滤，而对于要发送出去的数据包却没有任何限制。本节主要介绍如何更改链策略，以改变链的行为。</p><h4 id="1-默认链策略"><a href="#1-默认链策略" class="headerlink" title="1. 默认链策略"></a>1. 默认链策略</h4><p><code>警告</code>：请勿在远程连接的服务器、虚拟机上测试！</p><p>当我们使用<code>-L</code>选项验证当前规则是发现，所有的链旁边都有 <code>policy ACCEPT</code>标注，这表明当前链的默认策略为<code>ACCEPT</code>：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cmake">[root@<span class="hljs-keyword">test</span> ~]<span class="hljs-comment"># iptables -L</span><br>Chain INPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain FORWARD (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination         <br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT)<br><span class="hljs-keyword">target</span>     prot opt source               destination <br></code></pre></td></tr></table></figure><p>这种情况下，如果没有明确添加DROP规则，那么默认情况下将采用ACCEPT策略进行过滤。除非：</p><h6 id="a-为以上三个链单独添加DROP规则："><a href="#a-为以上三个链单独添加DROP规则：" class="headerlink" title="a)为以上三个链单独添加DROP规则："></a>a)为以上三个链单独添加DROP规则：</h6><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sas">iptables -A <span class="hljs-meta">INPUT</span> -j <span class="hljs-meta">DROP</span> <br>iptables -A <span class="hljs-meta">OUTPUT</span> -j <span class="hljs-meta">DROP</span> <br>iptables -A FORWARD -j <span class="hljs-meta">DROP</span><br></code></pre></td></tr></table></figure><h6 id="b-更改默认策略："><a href="#b-更改默认策略：" class="headerlink" title="b)更改默认策略："></a>b)更改默认策略：</h6><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sas">iptables -P <span class="hljs-meta">INPUT</span> <span class="hljs-meta">DROP</span> <br>iptables -P <span class="hljs-meta">OUTPUT</span> <span class="hljs-meta">DROP</span> <br>iptables -P FORWARD <span class="hljs-meta">DROP</span><br></code></pre></td></tr></table></figure><p>糟糕！！如果你严格按照上一节的例子配置了<code>iptables</code>，并且现在使用的是<code>SSH</code>进行连接的，那么会话恐怕已经被迫终止了！</p><p>为什么呢？因为我们已经把<code>OUTPUT</code>链策略更改为<code>DROP</code>了。此时虽然服务器能接收数据，但是无法发送数据：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@test ~]#iptables -L <br>Chain <span class="hljs-keyword">INPUT</span> (<span class="hljs-keyword">policy</span> <span class="hljs-keyword">DROP</span>)<br>target  prot opt source       destination <br>ACCEPT  tcp – anywhere      anywhere      tcp dpt:ssh <br><span class="hljs-keyword">DROP</span>   <span class="hljs-keyword">all</span> – anywhere      anywhere<br><br>Chain FORWARD (<span class="hljs-keyword">policy</span> <span class="hljs-keyword">DROP</span>)<br>target  prot opt source       destination<br><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> <span class="hljs-keyword">DROP</span>)<br>target  prot opt source       destination<br></code></pre></td></tr></table></figure><h3 id="七、配置应用程序规则"><a href="#七、配置应用程序规则" class="headerlink" title="七、配置应用程序规则"></a>七、配置应用程序规则</h3><h4 id="1-SSH"><a href="#1-SSH" class="headerlink" title="1. SSH"></a>1. SSH</h4><p>尽管已经介绍了如何初步限制除<code>SSH</code>以外的其他连接，但是那是在链默认策略为<code>ACCEPT</code>的情况下实现的，并且没有对输出数据包进行限 制。本节在上一节基础上，以<code>SSH</code>和<code>HTTP</code>所使用的端口为例，教大家如何在默认链策略为<code>DROP</code>的情况下，进行防火墙设置。在这里，我们将引进一种新的 参数<code>-m state</code>，并检查数据包的状态字段。</p><h5 id="1-1-允许接收远程主机的SSH请求"><a href="#1-1-允许接收远程主机的SSH请求" class="headerlink" title="1.1. 允许接收远程主机的SSH请求"></a>1.1. 允许接收远程主机的SSH请求</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A INPUT -i eth0 -p tcp --dport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="1-2-允许发送本地主机的SSH响应"><a href="#1-2-允许发送本地主机的SSH响应" class="headerlink" title="1.2. 允许发送本地主机的SSH响应"></a>1.2. 允许发送本地主机的SSH响应</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A OUTPUT -o eth0 -p tcp --sport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><ul><li><code>-m state</code>: 启用状态匹配模块（<code>state matching module</code>）</li><li><code>--state</code>: 状态匹配模块的参数。当<code>SSH</code>客户端第一个数据包到达服务器时，状态字段为<code>NEW</code>；建立连接后数据包的状态字段都是<code>ESTABLISHED</code></li><li><code>--sport 22</code>: <code>sshd</code>监听<code>22</code>端口，同时也通过该端口和客户端建立连接、传送数据。因此对于<code>SSH</code>服务器而言，源端口就是<code>22</code></li><li><code>--dport 22</code>: <code>ssh</code>客户端程序可以从本机的随机端口与<code>SSH</code>服务器的<code>22</code>端口建立连接。因此对于<code>SSH</code>客户端而言，目的端口就是<code>22</code></li></ul><p>如果服务器也需要使用<code>SSH</code>连接其他远程主机，则还需要增加以下配置：</p><h5 id="1-3-送出的数据包目的端口为22"><a href="#1-3-送出的数据包目的端口为22" class="headerlink" title="1.3. 送出的数据包目的端口为22"></a>1.3. 送出的数据包目的端口为22</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A OUTPUT -o eth0 -p tcp --dport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="1-4-接收的数据包源端口为22"><a href="#1-4-接收的数据包源端口为22" class="headerlink" title="1.4. 接收的数据包源端口为22"></a>1.4. 接收的数据包源端口为22</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A INPUT -i eth0 -p tcp --sport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="2-HTTP"><a href="#2-HTTP" class="headerlink" title="2. HTTP"></a>2. HTTP</h4><p><code>HTTP</code>的配置与<code>SSH</code>类似：</p><h5 id="1-允许接收远程主机的HTTP请求"><a href="#1-允许接收远程主机的HTTP请求" class="headerlink" title="1. 允许接收远程主机的HTTP请求"></a>1. 允许接收远程主机的HTTP请求</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A INPUT -i eth0 -p tcp --dport <span class="hljs-number">80</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="2-允许发送本地主机的HTTP响应"><a href="#2-允许发送本地主机的HTTP响应" class="headerlink" title="2. 允许发送本地主机的HTTP响应"></a>2. 允许发送本地主机的HTTP响应</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A OUTPUT -o eth0 -p tcp --sport <span class="hljs-number">80</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="3-完整的配"><a href="#3-完整的配" class="headerlink" title="3. 完整的配"></a>3. 完整的配</h4><h5 id="1-删除现有规则"><a href="#1-删除现有规则" class="headerlink" title="1. 删除现有规则"></a>1. 删除现有规则</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -F</span><br></code></pre></td></tr></table></figure><h5 id="2-配置默认链策略"><a href="#2-配置默认链策略" class="headerlink" title="2. 配置默认链策略"></a>2. 配置默认链策略</h5><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sas">iptables -P <span class="hljs-meta">INPUT</span> <span class="hljs-meta">DROP</span><br>iptables -P FORWARD <span class="hljs-meta">DROP</span><br>iptables -P <span class="hljs-meta">OUTPUT</span> <span class="hljs-meta">DROP</span><br></code></pre></td></tr></table></figure><h5 id="3-允许远程主机进行SSH连接"><a href="#3-允许远程主机进行SSH连接" class="headerlink" title="3. 允许远程主机进行SSH连接"></a>3. 允许远程主机进行SSH连接</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A INPUT -i eth0 -p tcp --dport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A OUTPUT -o eth0 -p tcp --sport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="4-允许本地主机进行SSH连接"><a href="#4-允许本地主机进行SSH连接" class="headerlink" title="4. 允许本地主机进行SSH连接"></a>4. 允许本地主机进行SSH连接</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A OUTPUT -o eth0 -p tcp --dport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A INPUT -i eth0 -p tcp --sport <span class="hljs-number">22</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="5-允许HTTP请求"><a href="#5-允许HTTP请求" class="headerlink" title="5.允许HTTP请求"></a>5.允许HTTP请求</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">iptables -A INPUT -i eth0 -p tcp --dport <span class="hljs-number">80</span> -m <span class="hljs-keyword">state</span> --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A OUTPUT -o eth0 -p tcp --sport <span class="hljs-number">80</span> -m <span class="hljs-keyword">state</span> --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><p><code>iptables</code>命令是<code>Linux</code>上常用的防火墙软件，是<code>netfilter</code>项目的一部分。可以直接配置，也可以通过许多前端和图形界面配置。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>iptables</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx-配置详解</title>
    <link href="/posts/5c96f5b1/"/>
    <url>/posts/5c96f5b1/</url>
    
    <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><blockquote><footer><strong>https://www.cnblogs.com/knowledgesea/p/5175711.html 转载文章</strong></footer></blockquote><p><code>Nginx(engine x)</code> 是一个高性能的 <code>HTTP</code> 和反向代理 <code>Web</code> 服务器，同时也提供了 <code>IMAP/POP3/SMTP</code> 服务。<code>Nginx</code> 是由伊戈尔·赛索耶夫为俄罗斯访问量第二的 <code>Rambler.ru</code> 站点（俄文：<code>Рамблер</code> ）开发的，第一个公开版本 <code>0.1.0</code> 发布于 <code>2004</code> 年 <code>10</code> 月 <code>4</code> 日。</p><p>其将源代码以类 <code>BSD</code> 许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。<code>2011</code> 年 <code>6</code> 月 <code>1</code> 日，<code>nginx 1.0.4</code> 发布。</p><p><code>Nginx</code> 是一款轻量级的 <code>Web</code> 服务器/反向代理服务器及电子邮件（<code>IMAP/POP3</code>）代理服务器，在 <code>BSD-like</code> 协议下发行。其特点是占有内存少，并发能力强，事实上 <code>nginx</code> 的并发能力在同类型的网页服务器中表现较好。</p><h1 id="Nginx-常用功能"><a href="#Nginx-常用功能" class="headerlink" title="Nginx 常用功能"></a><code>Nginx</code> 常用功能</h1><p>1<strong>、<code>Http</code> 代理，反向代理：作为 <code>web</code> 服务器最常用的功能之一，尤其是反向代理。</strong></p><p>这里我给来 <code>2</code> 张图，对正向代理与反响代理做个诠释，具体细节，大家可以翻阅下资料。</p><p><img src="/img/blog_image/Linux_Nginx_contentImage/1_1.jpg"></p><p><code>Nginx</code> 在做反向代理时，提供性能稳定，并且能够提供配置灵活的转发功能。<code>Nginx</code> 可以根据不同的正则匹配，采取不同的转发策略，比如图片文件结尾的走文件服务器，动态页面走 <code>Web</code> 服务器，只要你正则写的没问题，又有相对应的服务器解决方案，你就可以随心所欲的玩。并且 <code>Nginx</code> 对返回结果进行错误页跳转，异常判断等。如果被分发的服务器存在异常，他可以将请求重新转发给另外一台服务器，然后自动去除异常服务器。</p><p><strong>2、负载均衡</strong></p><p><code>Nginx</code> 提供的负载均衡策略有 <code>2</code> 种：内置策略和扩展策略。内置策略为轮询，加权轮询，<code>Ip hash</code> 。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。</p><p>上3个图，理解这三种负载均衡算法的实现</p><p><img src="/img/blog_image/Linux_Nginx_contentImage/2_1.jpg"></p><p><strong>3、web缓存</strong></p><p><code>Nginx</code> 可以对不同的文件做不同的缓存处理，配置灵活，并且支持<code>FastCGI_Cache</code>，主要用于对 <code>FastCGI</code> 的动态程序进行缓存。配合着第三方的<code>ngx_cache_purge</code> ，对制定的 <code>URL</code> 缓存内容可以的进行增删管理。</p><p><strong>4、<code>Nginx</code> 相关地址</strong></p><p>源码：<a href="https://trac.nginx.org/nginx/browser">https://trac.nginx.org/nginx/browser</a></p><p>官网：<a href="http://www.nginx.org/">http://www.nginx.org/</a></p><h1 id="Nginx-配置文件结构"><a href="#Nginx-配置文件结构" class="headerlink" title="Nginx 配置文件结构"></a><code>Nginx</code> 配置文件结构</h1><p>如果你下载好啦，你的安装文件，不妨打开 <code>conf</code> 文件夹的 <code>nginx.conf</code> 文件，<code>Nginx</code> 服务器的基础配置，默认的配置也存放在此。</p><p>在 <code>nginx.conf</code> 的注释符号位 <code>#</code></p><p><code>nginx</code> 文件的结构，这个对刚入门的同学，可以多看两眼。 </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#user  nobody;</span><br><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br><br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;<br>    <span class="hljs-attribute">default_type</span>  application/octet-stream;<br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    <span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;<br><br>    <span class="hljs-comment">#gzip  on;</span><br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        <span class="hljs-attribute">location</span> / &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-attribute">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br><br><br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p><code>nginx</code> 文件结构</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx">...              #全局块<br><br><span class="hljs-section">events</span> &#123;         <span class="hljs-comment">#events块</span><br>   ...<br>&#125;<br><br><span class="hljs-attribute">http</span>      <span class="hljs-comment">#http块</span><br>&#123;<br>    ...   #http全局块<br>    <span class="hljs-attribute">server</span>        <span class="hljs-comment">#server块</span><br>    &#123; <br>        ...       #server全局块<br>        <span class="hljs-attribute">location</span> [PATTERN]   <span class="hljs-comment">#location块</span><br>        &#123;<br>            ...<br>        &#125;<br>        <span class="hljs-attribute">location</span> [PATTERN] <br>        &#123;<br>            ...<br>        &#125;<br>    &#125;<br>    server<br>    &#123;<br>      ...<br>    &#125;<br>    ...     #http全局块<br>&#125;<br></code></pre></td></tr></table></figure><p>1、全局块：配置影响 <code>nginx</code> 全局的指令。一般有运行 <code>nginx</code> 服务器的用户组，<code>nginx</code> 进程 <code>pid</code> 存放路径，日志存放路径，配置文件引入，允许生成<code>worker process</code> 数等。</p><p>2、<code>events</code> 块：配置影响 <code>nginx</code> 服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</p><p>3、<code>http</code> 块：可以嵌套多个 <code>server</code> ，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，<code>mime-type</code> 定义，日志自定义，是否使用 <code>sendfile</code> 传输文件，连接超时时间，单连接请求数等。</p><p>4、<code>server</code> 块：配置虚拟主机的相关参数，一个 <code>http</code> 中可以有多个 <code>server</code>。</p><p>5、<code>location</code> 块：配置请求的路由，以及各种页面的处理情况。</p><p>下面给大家上一个配置文件，作为理解，同时也配入我搭建的一台测试机中，给大家示例。 </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">########### 每个指令必须有分号结束。#################</span><br><span class="hljs-comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span><br><span class="hljs-comment">#worker_processes 2;  #允许生成的进程数，默认为1</span><br><span class="hljs-comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span><br><span class="hljs-attribute">error_log</span> log/error.log <span class="hljs-literal">debug</span>;  <span class="hljs-comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">accept_mutex</span> <span class="hljs-literal">on</span>;   <span class="hljs-comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span><br>    <span class="hljs-attribute">multi_accept</span> <span class="hljs-literal">on</span>;  <span class="hljs-comment">#设置一个进程是否同时接受多个网络连接，默认为off</span><br>    <span class="hljs-comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span><br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;    <span class="hljs-comment">#最大连接数，默认为512</span><br>&#125;<br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;   <span class="hljs-comment">#文件扩展名与文件类型映射表</span><br>    <span class="hljs-attribute">default_type</span>  application/octet-stream; <span class="hljs-comment">#默认文件类型，默认为text/plain</span><br>    <span class="hljs-comment">#access_log off; #取消服务日志    </span><br>    <span class="hljs-attribute">log_format</span> myFormat <span class="hljs-string">&#x27;$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#x27;</span>; <span class="hljs-comment">#自定义格式</span><br>    <span class="hljs-attribute">access_log</span> log/access.log myFormat;  <span class="hljs-comment">#combined为日志格式的默认值</span><br>    <span class="hljs-attribute">sendfile</span> <span class="hljs-literal">on</span>;   <span class="hljs-comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span><br>    <span class="hljs-attribute">sendfile_max_chunk</span> <span class="hljs-number">100k</span>;  <span class="hljs-comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span><br>    <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">65</span>;  <span class="hljs-comment">#连接超时时间，默认为75s，可以在http，server，location块。</span><br><br>    <span class="hljs-attribute">upstream</span> mysvr &#123;   <br>      <span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:7878</span>;<br>      <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.10.121:3333</span> backup;  <span class="hljs-comment">#热备</span><br>    &#125;<br>    <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> https://www.baidu.com; <span class="hljs-comment">#错误页</span><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">keepalive_requests</span> <span class="hljs-number">120</span>; <span class="hljs-comment">#单连接请求上限次数。</span><br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">4545</span>;   <span class="hljs-comment">#监听端口</span><br>        <span class="hljs-attribute">server_name</span>  <span class="hljs-number">127.0.0.1</span>;   <span class="hljs-comment">#监听地址       </span><br>        <span class="hljs-attribute">location</span>  ~*^.+$ &#123;       <span class="hljs-comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span><br>           <span class="hljs-comment">#root path;  #根目录</span><br>           <span class="hljs-comment">#index vv.txt;  #设置默认页</span><br>           <span class="hljs-attribute">proxy_pass</span>  http://mysvr;  <span class="hljs-comment">#请求转向mysvr 定义的服务器列表</span><br>           <span class="hljs-attribute">deny</span> <span class="hljs-number">127.0.0.1</span>;  <span class="hljs-comment">#拒绝的ip</span><br>           <span class="hljs-attribute">allow</span> <span class="hljs-number">172.18.5.54</span>; <span class="hljs-comment">#允许的ip           </span><br>        &#125; <br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><p>一、上面是 <code>nginx</code> 的基本配置，需要注意的有以下几点：</p><p>​    1、<code>$remote_addr</code> 与 <code>$http_x_forwarded_for</code> 用以记录客户端的ip地址； </p><p>​    2、<code>$remote_user</code> ：用来记录客户端用户名称； </p><p>​    3、<code>$time_local</code> ： 用来记录访问时间与时区；</p><p>​    4、<code>$request</code> ： 用来记录请求的 <code>url</code> 与 <code>http</code> 协议；</p><p>​    5、<code>$status</code> ： 用来记录请求状态；成功是 <code>200</code>；</p><p>​    6、<code>$body_bytes_sent</code> ：记录发送给客户端文件主体内容大小；</p><p>​    7、<code>$http_referer</code> ：用来记录从那个页面链接访问过来的； </p><p>​    8、<code>$http_user_agent</code> ：记录客户端浏览器的相关信息；</p><p>二、惊群现象：一个网路连接到来，多个睡眠的进程被同事叫醒，但只有一个进程能获得链接，这样会影响系统性能。</p><p>3、每个指令必须有分号结束。</p><p><strong><font color=6633FF>未完待续…</font></strong></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-二进制部署</title>
    <link href="/posts/4f0e9cbe/"/>
    <url>/posts/4f0e9cbe/</url>
    
    <content type="html"><![CDATA[<h1 id="二进制部署Kubernetes集群-上"><a href="#二进制部署Kubernetes集群-上" class="headerlink" title="二进制部署Kubernetes集群(上)"></a>二进制部署Kubernetes集群(上)</h1><blockquote><footer><strong>Jarvis的BLOG</strong><cite><a href="https://www.cnblogs.com/wangchaolinux/p/11875124.html">转载文章</a></cite></footer></blockquote><h2 id="1-实验架构"><a href="#1-实验架构" class="headerlink" title="1.实验架构"></a>1.实验架构</h2><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119205100565.png" alt="实验架构"></p><h3 id="1-1-硬件环境"><a href="#1-1-硬件环境" class="headerlink" title="1.1.硬件环境"></a>1.1.硬件环境</h3><p>准备5台2c/2g/50g虚拟机，使用10.4.7.0/24 网络 。//因后期要直接向k8s交付java服务，因此运算节点需要4c8g。不交付服务，全部2c2g足够。</p><h3 id="1-2-软件环境"><a href="#1-2-软件环境" class="headerlink" title="1.2.软件环境"></a>1.2.软件环境</h3><p>操作系统：预装CentOS7.6操作系统。//因docker完美支持对内核有需求，所有操作系统全部CentOS 7.x（需要内核3.8以上），做好系统基础优化。</p><p><strong>关闭selinux，关闭firewalld服务</strong><br><strong>时间同步（chronyd）</strong><br><strong>调整Base源，Epel源</strong><br><strong>内核优化（文件描述符大小，内核转发，等等）</strong></p><h3 id="1-3-IP及架构规划"><a href="#1-3-IP及架构规划" class="headerlink" title="1.3.IP及架构规划"></a>1.3.IP及架构规划</h3><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th><th>部署服务与组件</th><th>硬件配置</th></tr></thead><tbody><tr><td>hdss7-11.host.com</td><td>k8s proxy 主</td><td>10.4.7.11</td><td>bind9、nginx（L4）、keepalived、supervisor</td><td>2C 2G 50G</td></tr><tr><td>hdss7-12.host.com</td><td>k8s proxy 备</td><td>10.4.7.12</td><td>etcd、nginx（L4）、keepalived、supervisor</td><td>2C 2G 50G</td></tr><tr><td>hdss7-21.host.com</td><td>k8s 运算节点1</td><td>10.4.7.21</td><td>etcd、kube-apiserver、kube-controller-manager、kube-scheduler kube-kubelet、kube-proxy，supervisor</td><td>4C 8G 50G</td></tr><tr><td>hdss7-22.host.com</td><td>k8s 运算节点2</td><td>10.4.7.22</td><td>etcd、kube-apiserver、kube-controller-manager、kube-scheduler、kube-kubelet、kube-proxy，supervisor</td><td>4C 8G 50G</td></tr><tr><td>hdss7-200.host.com</td><td>k8s 运维节点，docker仓库</td><td>10.4.7.200</td><td>docker 私有仓库、资源配置清单仓库、提供共享存储（NFS）、签发证书</td><td>2C 2G 50G</td></tr></tbody></table><h2 id="2-基础环境准备及网络设置"><a href="#2-基础环境准备及网络设置" class="headerlink" title="2.基础环境准备及网络设置"></a>2.基础环境准备及网络设置</h2><h3 id="2-1-网络设置"><a href="#2-1-网络设置" class="headerlink" title="2.1.网络设置"></a>2.1.网络设置</h3><h4 id="2-1-1-VM虚拟网络编辑器设置"><a href="#2-1-1-VM虚拟网络编辑器设置" class="headerlink" title="2.1.1.VM虚拟网络编辑器设置"></a>2.1.1.VM虚拟网络编辑器设置</h4><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119205830113.png" alt="VM虚拟网络编辑器设置"></p><h4 id="2-1-2-Windows网卡设置"><a href="#2-1-2-Windows网卡设置" class="headerlink" title="2.1.2.Windows网卡设置"></a>2.1.2.Windows网卡设置</h4><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119210222054.png" alt="Windows网卡设置"></p><h3 id="2-2-虚拟机操作系统设置"><a href="#2-2-虚拟机操作系统设置" class="headerlink" title="2.2.虚拟机操作系统设置"></a>2.2.虚拟机操作系统设置</h3><h4 id="2-2-1-设置主机名"><a href="#2-2-1-设置主机名" class="headerlink" title="2.2.1.设置主机名"></a>2.2.1.设置主机名</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">~]# hostnamectl <span class="hljs-keyword">set</span>-<span class="hljs-built_in">hostname</span> hdss7-xx.host.<span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><h4 id="2-2-2-关闭防火墙和selinux"><a href="#2-2-2-关闭防火墙和selinux" class="headerlink" title="2.2.2.关闭防火墙和selinux"></a>2.2.2.关闭防火墙和selinux</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">~]# systemctl stop firewalld<br>~]# systemctl disable firewalld<br>~]# setenforce <span class="hljs-number">0</span><br>~]# sed –i ‘s<span class="hljs-regexp">/SELINUX=enforcing/</span>SELINUX=disabled<span class="hljs-regexp">/g’ /</span>etc<span class="hljs-regexp">/selinux/</span>config<br></code></pre></td></tr></table></figure><h4 id="2-2-3-设置网卡"><a href="#2-2-3-设置网卡" class="headerlink" title="2.2.3.设置网卡"></a>2.2.3.设置网卡</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 <br><span class="hljs-attribute">TYPE</span>=Ethernet<br><span class="hljs-attribute">BOOTPROTO</span>=none<br><span class="hljs-attribute">NAME</span>=eth0<br><span class="hljs-attribute">DEVICE</span>=eth0<br><span class="hljs-attribute">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">IPADDR</span>=10.4.7.xx<br><span class="hljs-attribute">NETMASK</span>=255.255.255.0<br><span class="hljs-attribute">GATEWAY</span>=10.4.7.254<br><span class="hljs-attribute">DNS1</span>=10.4.7.xx<br></code></pre></td></tr></table></figure><h4 id="2-2-4-设置yum源"><a href="#2-2-4-设置yum源" class="headerlink" title="2.2.4.设置yum源"></a>2.2.4.设置yum源</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">~]# yum install epel-release<br>或者<br>~]# wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOS-Base.repo  http:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br>~]# wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/epel.repo  http:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/epel-<span class="hljs-number">7</span>.repo<br>~]# yum clean all<br>~]# yum makecache<br></code></pre></td></tr></table></figure><h4 id="2-2-5-安装常用工具"><a href="#2-2-5-安装常用工具" class="headerlink" title="2.2.5.安装常用工具"></a>2.2.5.安装常用工具</h4><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">~]# yum install wget <span class="hljs-built_in">net</span>-tools telnet <span class="hljs-built_in">tree</span> nmap sysstat lrzsz dos2unix bind-utils -y<br></code></pre></td></tr></table></figure><h3 id="2-3安装bind服务"><a href="#2-3安装bind服务" class="headerlink" title="2.3安装bind服务"></a>2.3安装bind服务</h3>            <input type="checkbox" disabled checked="checked">主节点hdss7-11.host.com 上          <h4 id="2-3-1-安装bind-9"><a href="#2-3-1-安装bind-9" class="headerlink" title="2.3.1.安装bind 9"></a>2.3.1.安装bind 9</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">~]#</span><span class="bash"> yum install <span class="hljs-built_in">bind</span> -y</span><br></code></pre></td></tr></table></figure><h4 id="2-3-2-配置bind-9"><a href="#2-3-2-配置bind-9" class="headerlink" title="2.3.2.配置bind 9"></a>2.3.2.配置bind 9</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-comment">//主配置文件</span><br>~]# vi /etc/named.conf<br>listen-on port <span class="hljs-number">53</span> &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;; <br>allow-query     &#123; any; &#125;;<br>forwarders      &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span>; &#125;;<br>recursion yes;<br>dnssec-enable no;<br>dnssec-validation no<br><br>##########参数说明#########<br>* dnssec-enable yes; ----&gt; dnssec-enable no; # 是否支持DNSSEC开关 PS：dnssec作用：<span class="hljs-number">1.</span>为DNS数据提供来源验证 <span class="hljs-number">2.</span>为数据提供完整性性验证 <span class="hljs-number">3.</span>为查询提供否定存在验证<br>* dnssec-validation yes; ----&gt; dnssec-validation no; #是否进行DNSSEC确认开关<br>* forwarders      &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.1</span>; &#125;; #用来指定上一层DNS地址，一般指定网关，确保服务能够访问公网<br>* listen-on-v6 port <span class="hljs-number">53</span> &#123; ::<span class="hljs-number">1</span>; &#125;; 如果不用IPV6，可以删除<br>*recursion 递归查询<br>#########################<br><br>~]# named-checkconf<br><br><span class="hljs-comment">//区域配置文件</span><br>~]# vi /etc/named.rfc1912.zones<br>zone <span class="hljs-string">&quot;host.com&quot;</span> IN &#123;<br>        type  master;<br>        file  <span class="hljs-string">&quot;host.com.zone&quot;</span>;<br>        allow-update &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;;<br>&#125;;<br><br>zone <span class="hljs-string">&quot;od.com&quot;</span> IN &#123;<br>        type  master;<br>        file  <span class="hljs-string">&quot;od.com.zone&quot;</span>;<br>        allow-update &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;;<br>&#125;;<br><br><span class="hljs-comment">//配置区域数据文件</span><br>    <span class="hljs-number">1.</span>配置主机域数据文件<br>~]# vi  /var/named/host.com.zone<br>$ORIGIN host.com.<br>$TTL <span class="hljs-number">600</span>; <span class="hljs-number">10</span> minutes<br>@       IN SOAdns.host.com. dnsadmin.host.com. (<br><span class="hljs-number">2019111001</span> ; serial<br><span class="hljs-number">10800</span>      ; refresh (<span class="hljs-number">3</span> hours)<br><span class="hljs-number">900</span>        ; retry (<span class="hljs-number">15</span> minutes)<br><span class="hljs-number">604800</span>     ; expire (<span class="hljs-number">1</span> week)<br><span class="hljs-number">86400</span>      ; minimum (<span class="hljs-number">1</span> day)<br>)<br>NS   dns.host.com.<br>$TTL <span class="hljs-number">60</span>; <span class="hljs-number">1</span> minute<br>dns                A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br>HDSS7<span class="hljs-number">-11</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br>HDSS7<span class="hljs-number">-12</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.12</span><br>HDSS7<span class="hljs-number">-21</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.21</span><br>HDSS7<span class="hljs-number">-22</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.22</span><br>HDSS7<span class="hljs-number">-200</span>          A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span>  <br>    <span class="hljs-number">2.</span>配置业务域数据文件<br>~]# vi  /var/named/od.com.zone<br>$ORIGIN od.com.<br>$TTL <span class="hljs-number">600</span>; <span class="hljs-number">10</span> minutes<br>@   IN SOAdns.od.com. dnsadmin.od.com. (<br><span class="hljs-number">2019111001</span> ; serial<br><span class="hljs-number">10800</span>      ; refresh (<span class="hljs-number">3</span> hours)<br><span class="hljs-number">900</span>        ; retry (<span class="hljs-number">15</span> minutes)<br><span class="hljs-number">604800</span>     ; expire (<span class="hljs-number">1</span> week)<br><span class="hljs-number">86400</span>      ; minimum (<span class="hljs-number">1</span> day)<br>)<br>NS   dns.od.com.<br>$TTL <span class="hljs-number">60</span>; <span class="hljs-number">1</span> minute<br>dns                A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>    <br></code></pre></td></tr></table></figure><h4 id="2-3-3-检查配置并启动bind-9"><a href="#2-3-3-检查配置并启动bind-9" class="headerlink" title="2.3.3.检查配置并启动bind 9"></a>2.3.3.检查配置并启动bind 9</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs elixir">~]<span class="hljs-comment"># named-checkconf</span><br>~]<span class="hljs-comment"># systemctl start named</span><br>~]<span class="hljs-comment"># netstat -nltup|grep 53</span><br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span>            0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">953</span>           0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">53</span>                   ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp6       0      0 ::<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">953</span>                 ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">18279</span>/named         <br>udp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span>            0.0.0.0<span class="hljs-symbol">:*</span>                           <span class="hljs-number">18279</span>/named         <br>udp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">53</span>                   ::<span class="hljs-symbol">:*</span>                                <span class="hljs-number">18279</span>/named <br></code></pre></td></tr></table></figure><h4 id="2-3-4-检查"><a href="#2-3-4-检查" class="headerlink" title="2.3.4.检查"></a>2.3.4.检查</h4><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">21</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span> +short<br><span class="hljs-number">10.4.7.21</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">200</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.200</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">11</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.11</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A dns.od.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.11</span><br></code></pre></td></tr></table></figure><h4 id="2-3-5-配置DNS客户端"><a href="#2-3-5-配置DNS客户端" class="headerlink" title="2.3.5.配置DNS客户端"></a>2.3.5.配置DNS客户端</h4><h5 id="linux主机所有"><a href="#linux主机所有" class="headerlink" title="linux主机所有"></a>linux主机所有</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-11</span> ~]# vi /etc/resolv.conf <br># <span class="hljs-keyword">Generated</span> <span class="hljs-keyword">by</span> NetworkManager<br><span class="hljs-keyword">search</span> host.com<br>nameserver <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br><br>~] systemctl <span class="hljs-keyword">restart</span> network 五台都设置重启<br></code></pre></td></tr></table></figure><h5 id="windows主机"><a href="#windows主机" class="headerlink" title="windows主机"></a>windows主机</h5><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">更改适配器设置  → 属性 → ipv4 → 更改dns <br>自动跃点 10 优先从vmnet 8出网<br></code></pre></td></tr></table></figure><h4 id="2-3-6-检查"><a href="#2-3-6-检查" class="headerlink" title="2.3.6.检查"></a>2.3.6.检查</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">~]<span class="hljs-comment"># ping hdss7-200.host.com</span><br>~]<span class="hljs-comment"># ping dns.od.com</span><br><span class="hljs-comment">#若windows ping不到，把本地网卡dns设置成10.4.7.11</span><br></code></pre></td></tr></table></figure><h3 id="2-4-准备签发证书环境"><a href="#2-4-准备签发证书环境" class="headerlink" title="2.4.准备签发证书环境"></a>2.4.准备签发证书环境</h3>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200.host.com 上          <h4 id="2-4-1-安装CFSSL"><a href="#2-4-1-安装CFSSL" class="headerlink" title="2.4.1.安装CFSSL"></a>2.4.1.安装CFSSL</h4><p><strong>证书签发工具CFSSL：R1.2</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs arduino">HDSS7<span class="hljs-number">-200</span>上:<br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/bin/cfssl          //cfssl下载地址</span></span><br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/bin/cfssl-json    //cfssl-json下载地址</span></span><br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/bin/cfssl-certinfo     //cfssl-certinfo下载地址</span></span><br>~]<span class="hljs-meta"># chmod +x /usr/bin/cfssl*</span><br></code></pre></td></tr></table></figure><h4 id="2-4-2-创建生成CA证书签名请求（csr）的json配置文件"><a href="#2-4-2-创建生成CA证书签名请求（csr）的json配置文件" class="headerlink" title="2.4.2.创建生成CA证书签名请求（csr）的json配置文件"></a>2.4.2.创建生成CA证书签名请求（csr）的json配置文件</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs clean">vi  /opt/certs/ca-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;OldboyEdu&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ],<br>    <span class="hljs-string">&quot;ca&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span><br>    &#125;<br>&#125;<br><br>##############配置说明###########<br>CN：Common Name，浏览器使用该字段验证网站是否合法，一般写的是域名，很重要，浏览器使用该字段验证网站是否合法<br>C：Country 国家<br>ST：State 州，省<br>L：Locality 地区，城市<br>O：Organization Name 组织名称，公司名称<br>OU：Organization Unit Name 组织单位名称，部门<br></code></pre></td></tr></table></figure><h4 id="2-4-3-生成CA证书和私钥"><a href="#2-4-3-生成CA证书和私钥" class="headerlink" title="2.4.3.生成CA证书和私钥"></a>2.4.3.生成CA证书和私钥</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clean">mkdir /opt/certs<br>cd /opt/certs<br>certs]#  cfssl gencert -initca ca-csr.json | cfssl-json -bare ca<br>certs]# ll<br>ca.csr  <br>ca-csr.json  <br>ca-key.pem                                 <span class="hljs-comment">//根证书的私钥  </span><br>ca.pem                                      <span class="hljs-comment">//根证书</span><br>##########<br>ca.pem     <span class="hljs-comment">//根证书</span><br>ca-key.pem:<br></code></pre></td></tr></table></figure><h3 id="2-5-部署docker环境"><a href="#2-5-部署docker环境" class="headerlink" title="2.5.部署docker环境"></a>2.5.部署docker环境</h3>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com 上                      <input type="checkbox" disabled checked="checked">hdss7-21.host.com 上                      <input type="checkbox" disabled checked="checked">hdss7-22.host.com 上          <h4 id="2-5-1-安装"><a href="#2-5-1-安装" class="headerlink" title="2.5.1.安装"></a>2.5.1.安装</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> ~]<span class="hljs-comment"># curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><br><span class="hljs-comment"># Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca32c1</span><br>+ sh -c <span class="hljs-string">&#x27;yum install -y -q yum-utils&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&#x27;</span><br>Loaded plugins: fastestmirror<br>adding repo from: https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo<br>grabbing file https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo to <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>repo saved to <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>+ <span class="hljs-string">&#x27;[&#x27;</span> stable <span class="hljs-string">&#x27;!=&#x27;</span> stable <span class="hljs-string">&#x27;]&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum makecache&#x27;</span><br>Loaded plugins: fastestmirror<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.aliyun.com<br> * extras: mirrors.aliyun.com<br> * updates: mirrors.aliyun.com<br>base                                                                                                   | <span class="hljs-number">3.6</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>docker-ce-stable                                                                                       | <span class="hljs-number">3.5</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>epel                                                                                                   | <span class="hljs-number">5.4</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>extras                                                                                                 | <span class="hljs-number">2.9</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>updates                                                                                                | <span class="hljs-number">2.9</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">1</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/updateinfo                                                             |   <span class="hljs-number">55</span> B  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">2</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/filelists_db                                                           |  <span class="hljs-number">18</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">3</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/primary_db                                                             |  <span class="hljs-number">37</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">4</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/other_db                                                               | <span class="hljs-number">111</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">5</span><span class="hljs-regexp">/14): epel/</span>x86_64/prestodelta                                                                        | <span class="hljs-number">4.0</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">6</span><span class="hljs-regexp">/14): base/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                         | <span class="hljs-number">2.6</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">7</span><span class="hljs-regexp">/14): epel/</span>x86_64/other_db                                                                           | <span class="hljs-number">3.3</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">02</span>     <br>(<span class="hljs-number">8</span><span class="hljs-regexp">/14): extras/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                       | <span class="hljs-number">100</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">9</span><span class="hljs-regexp">/14): extras/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                   | <span class="hljs-number">207</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">10</span><span class="hljs-regexp">/14): updates/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                     | <span class="hljs-number">243</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">11</span><span class="hljs-regexp">/14): epel/</span>x86_64/updateinfo_zck                                                                    | <span class="hljs-number">1.5</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">12</span><span class="hljs-regexp">/14): updates/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                 | <span class="hljs-number">2.1</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">13</span><span class="hljs-regexp">/14): base/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                    | <span class="hljs-number">7.3</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">04</span>     <br>(<span class="hljs-number">14</span><span class="hljs-regexp">/14): epel/</span>x86_64/filelists_db                                                                      |  <span class="hljs-number">12</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">05</span>     <br>Metadata Cache Created<br>+ <span class="hljs-string">&#x27;[&#x27;</span> -n <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;]&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum install -y -q docker-ce&#x27;</span><br>warning: <span class="hljs-regexp">/var/</span>cache<span class="hljs-regexp">/yum/</span>x86_64<span class="hljs-regexp">/7/</span>docker-ce-stable<span class="hljs-regexp">/packages/</span>docker-ce-<span class="hljs-number">19.03</span>.<span class="hljs-number">5</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID <span class="hljs-number">621</span>e9f35: NOKEY<br>Public key <span class="hljs-keyword">for</span> docker-ce-<span class="hljs-number">19.03</span>.<span class="hljs-number">5</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm is not installed<br>Importing GPG key <span class="hljs-number">0</span>x621E9F35:<br> Userid     : <span class="hljs-string">&quot;Docker Release (CE rpm) &lt;docker@docker.com&gt;&quot;</span><br> Fingerprint: <span class="hljs-number">060</span>a <span class="hljs-number">61</span>c5 <span class="hljs-number">1</span>b55 <span class="hljs-number">8</span>a7f <span class="hljs-number">742</span>b <span class="hljs-number">77</span>aa c52f eb6b <span class="hljs-number">621</span>e <span class="hljs-number">9</span>f35<br> From       : https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/g</span>pg<br>setsebool:  SELinux is disabled.<br>If you would like to use Docker as a non-root user, you should now consider<br>adding your user to the <span class="hljs-string">&quot;docker&quot;</span> group with something like:<br><br>  sudo usermod -aG docker your-user<br><br>Remember that you will have to log out and back <span class="hljs-keyword">in</span> <span class="hljs-keyword">for</span> this to take effect!<br><br>WARNING: Adding a user to the <span class="hljs-string">&quot;docker&quot;</span> group will grant the ability to run<br>         containers which can be used to obtain root privileges on the<br>         docker host.<br>         Refer to https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>security<span class="hljs-regexp">/security/</span><span class="hljs-comment">#docker-daemon-attack-surface</span><br>         <span class="hljs-keyword">for</span> more information.<br></code></pre></td></tr></table></figure><p>报错：<br><img src="/img/blog_image/Linux_k8S_Bin_contentImage/error.png" alt="报错"></p><p>解决：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -f  <span class="hljs-regexp">/etc/yum</span>.repos.d/local.repo   <span class="hljs-comment">#再重新安装</span><br></code></pre></td></tr></table></figure><h4 id="2-5-2-配置"><a href="#2-5-2-配置" class="headerlink" title="2.5.2.配置"></a>2.5.2.配置</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs clean">mkdir  /etc/docker<br>vi  /etc/docker/daemon.json<br>&#123;<br>  <span class="hljs-string">&quot;graph&quot;</span>: <span class="hljs-string">&quot;/data/docker&quot;</span>,<br>  <span class="hljs-string">&quot;storage-driver&quot;</span>: <span class="hljs-string">&quot;overlay2&quot;</span>,<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;registry.access.redhat.com&quot;</span>,<span class="hljs-string">&quot;quay.io&quot;</span>,<span class="hljs-string">&quot;harbor.od.com&quot;</span>],<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://q2gr04ke.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;bip&quot;</span>: <span class="hljs-string">&quot;172.7.21.1/24&quot;</span>,<br>  <span class="hljs-string">&quot;exec-opts&quot;</span>: [<span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span>],<br>  <span class="hljs-string">&quot;live-restore&quot;</span>: true<br>&#125;<br>############配置说明###############<br>bip要根据宿主机ip变化 <br>注意：hdss7<span class="hljs-number">-21.</span>host.com   bip <span class="hljs-number">172.7</span><span class="hljs-number">.21</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>     hdss7<span class="hljs-number">-22.</span>host.com   bip <span class="hljs-number">172.7</span><span class="hljs-number">.22</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>     hdss7<span class="hljs-number">-200.</span>host.com  bip <span class="hljs-number">172.7</span><span class="hljs-number">.200</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>#################################<br></code></pre></td></tr></table></figure><h4 id="2-5-3-启动"><a href="#2-5-3-启动" class="headerlink" title="2.5.3.启动"></a>2.5.3.启动</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">docker]#</span> <span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">/data/docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">systemctl</span> <span class="hljs-string">start</span> <span class="hljs-string">docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">systemctl</span> <span class="hljs-string">enable</span> <span class="hljs-string">docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">--version</span><br><span class="hljs-string">Docker</span> <span class="hljs-string">version</span> <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><span class="hljs-string">,</span> <span class="hljs-string">build</span> <span class="hljs-string">9013bf583a</span><br>[<span class="hljs-string">root@hdss7-200</span> <span class="hljs-string">docker</span>]<span class="hljs-comment"># docker version</span><br><span class="hljs-attr">Client:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Engine</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Community</span><br> <span class="hljs-attr">Version:</span>           <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><br> <span class="hljs-attr">API version:</span>       <span class="hljs-number">1.40</span><br> <span class="hljs-attr">Go version:</span>        <span class="hljs-string">go1.12.10</span><br> <span class="hljs-attr">Git commit:</span>        <span class="hljs-string">9013bf583a</span><br> <span class="hljs-attr">Built:</span>             <span class="hljs-string">Fri</span> <span class="hljs-string">Oct</span> <span class="hljs-number">18</span> <span class="hljs-number">15</span><span class="hljs-string">:52:22</span> <span class="hljs-number">2019</span><br> <span class="hljs-attr">OS/Arch:</span>           <span class="hljs-string">linux/amd64</span><br> <span class="hljs-attr">Experimental:</span>      <span class="hljs-literal">false</span><br><br><span class="hljs-attr">Server:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Engine</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Community</span><br> <span class="hljs-attr">Engine:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">19.03</span><span class="hljs-number">.5</span><br>  <span class="hljs-attr">API version:</span>      <span class="hljs-number">1.40</span> <span class="hljs-string">(minimum</span> <span class="hljs-string">version</span> <span class="hljs-number">1.12</span><span class="hljs-string">)</span><br>  <span class="hljs-attr">Go version:</span>       <span class="hljs-string">go1.12.12</span><br>  <span class="hljs-attr">Git commit:</span>       <span class="hljs-string">633a0ea</span><br>  <span class="hljs-attr">Built:</span>            <span class="hljs-string">Wed</span> <span class="hljs-string">Nov</span> <span class="hljs-number">13</span> <span class="hljs-number">07</span><span class="hljs-string">:24:18</span> <span class="hljs-number">2019</span><br>  <span class="hljs-attr">OS/Arch:</span>          <span class="hljs-string">linux/amd64</span><br>  <span class="hljs-attr">Experimental:</span>     <span class="hljs-literal">false</span><br> <span class="hljs-attr">containerd:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">1.2</span><span class="hljs-number">.10</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">b34a5c8af56e510852c35414db4c1f4fa6172339</span><br> <span class="hljs-attr">runc:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">1.0</span><span class="hljs-number">.0</span><span class="hljs-string">-rc8+dev</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">3e425f80a8c931f88e6d94a8c831b9d5aa481657</span><br> <span class="hljs-attr">docker-init:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">0.18</span><span class="hljs-number">.0</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">fec3683</span><br></code></pre></td></tr></table></figure><h3 id="2-6-部署docker镜像私有仓库harbor"><a href="#2-6-部署docker镜像私有仓库harbor" class="headerlink" title="2.6.部署docker镜像私有仓库harbor"></a>2.6.部署docker镜像私有仓库harbor</h3>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200.host.com 上          <h4 id="2-6-1-下载软件二进制包并解压"><a href="#2-6-1-下载软件二进制包并解压" class="headerlink" title="2.6.1.下载软件二进制包并解压"></a>2.6.1.下载软件二进制包并解压</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">强烈建议下载<span class="hljs-number">1.7</span>.<span class="hljs-number">5</span>以上版本<br>harbor官网github地址<br>http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/goharbor/harbor<br><br>src]# tar xf harbor-offline-installer-v1.<span class="hljs-number">8.3</span>.tgz -C /<span class="hljs-keyword">opt</span>/<br><span class="hljs-keyword">opt</span>]# mv harbor/ harbor-v1.<span class="hljs-number">8.3</span><br><span class="hljs-keyword">opt</span>]# <span class="hljs-keyword">ln</span> -s /<span class="hljs-keyword">opt</span>/harbor-v1.<span class="hljs-number">8.3</span>/ /<span class="hljs-keyword">opt</span>/harbor<br></code></pre></td></tr></table></figure><h4 id="2-6-2-配置"><a href="#2-6-2-配置" class="headerlink" title="2.6.2.配置"></a>2.6.2.配置</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@hdss7<span class="hljs-number">-200</span> opt]<span class="hljs-meta"># vi /opt/harbor/harbor.yml</span><br><span class="hljs-symbol">hostname:</span> harbor.od.com<br><span class="hljs-symbol">http:</span><br><span class="hljs-symbol">  port:</span> <span class="hljs-number">180</span><br><span class="hljs-symbol"> harbor_admin_password:</span>Harbor12345<br><span class="hljs-symbol">data_volume:</span> <span class="hljs-meta-keyword">/data/</span>harbor<br><span class="hljs-symbol">log:</span><br><span class="hljs-symbol">    level:</span>  info<br><span class="hljs-symbol">    rotate_count:</span>  <span class="hljs-number">50</span><br><span class="hljs-symbol">    rotate_size:</span><span class="hljs-number">200</span>M<br><span class="hljs-symbol">    location:</span> <span class="hljs-meta-keyword">/data/</span>harbor/logs<br><br>[root@hdss7<span class="hljs-number">-200</span> opt]<span class="hljs-meta"># mkdir -p /data/harbor/logs</span><br></code></pre></td></tr></table></figure><h4 id="2-6-3-安装docker-compose"><a href="#2-6-3-安装docker-compose" class="headerlink" title="2.6.3.安装docker-compose"></a>2.6.3.安装docker-compose</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> <span class="hljs-keyword">opt</span>]# yum install docker-compose -<span class="hljs-keyword">y</span><br>Loaded plugin<span class="hljs-variable">s:</span> fastestmirror<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.aliyun.<span class="hljs-keyword">com</span><br> * extra<span class="hljs-variable">s:</span> mirrors.aliyun.<span class="hljs-keyword">com</span><br> * <span class="hljs-keyword">update</span><span class="hljs-variable">s:</span> mirrors.aliyun.<span class="hljs-keyword">com</span><br>Package docker-compose-<span class="hljs-number">1.18</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el7.noarch already installed <span class="hljs-built_in">and</span> latest <span class="hljs-keyword">version</span><br>Nothing <span class="hljs-keyword">to</span> <span class="hljs-keyword">do</span><br></code></pre></td></tr></table></figure><h4 id="2-6-4-安装harbor"><a href="#2-6-4-安装harbor" class="headerlink" title="2.6.4.安装harbor"></a>2.6.4.安装harbor</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs gams">[root@hdss7<span class="hljs-number">-200</span> harbor]# ./install.sh <br><br>[Step <span class="hljs-number">0</span>]: checking installation environment ...<br><br>Note: docker version: <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><br><br>Note: docker-compose version: <span class="hljs-number">1.18</span><span class="hljs-number">.0</span><br>................<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-portal ... done<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> nginx ... done<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> registry ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> registryctl ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-db ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> redis ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-core ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-portal ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-jobservice ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> nginx ... <br><br>?.----Harbor has been installed <span class="hljs-keyword">and</span> started successfully.----<br><br>Now you should be able to visit the admin portal at http:<span class="hljs-comment">//harbor.od.com. </span><br><span class="hljs-keyword">For</span> more details, please visit https:<span class="hljs-comment">//github.com/goharbor/harbor .</span><br></code></pre></td></tr></table></figure><h4 id="2-6-5-检查harbor启动情况"><a href="#2-6-5-检查harbor启动情况" class="headerlink" title="2.6.5.检查harbor启动情况"></a>2.6.5.检查harbor启动情况</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@hdss7-200 harbor]# docker-compose ps                     <span class="hljs-comment">//docker给起了一堆容器，单机编排</span><br>      Name                     Command               State             Ports          <br>--------------------------------------------------------------------------------------<br>harbor-core         /harbor/start.<span class="hljs-keyword">sh</span>                 Up                               <br>harbor-<span class="hljs-keyword">db</span>           /entrypoint.<span class="hljs-keyword">sh</span> postgres          Up      5432/tcp                 <br>harbor-jobservice   /harbor/start.<span class="hljs-keyword">sh</span>                 Up                               <br>harbor-<span class="hljs-keyword">log</span>          /bin/<span class="hljs-keyword">sh</span> -c /usr/<span class="hljs-keyword">local</span>/bin/ ...   Up      127.0.0.1:1514-&gt;10514/tcp<br>harbor-portal       nginx -<span class="hljs-keyword">g</span> daemon off;             Up      80/tcp                   <br>nginx               nginx -<span class="hljs-keyword">g</span> daemon off;             Up      0.0.0.0:180-&gt;80/tcp      <br>redis               docker-entrypoint.<span class="hljs-keyword">sh</span> redis ...   Up      6379/tcp                 <br>registry            /entrypoint.<span class="hljs-keyword">sh</span> /etc/regist ...   Up      5000/tcp   <br><br><br>[root@hdss7-200 harbor]# docker ps -a                               <span class="hljs-comment">//可以看到180映射到本机80port                     </span><br>CONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS                   PORTS                       NAMES<br>d6880cca7143        goharbor/nginx-photon:v1.8.3                        &quot;nginx -<span class="hljs-keyword">g</span> &#x27;daemon of??   3 minutes ago       Up 3 minutes (healthy)   0.0.0.0:180-&gt;80/tcp         nginx<br>a5d166ffb68e        goharbor/harbor-jobservice:v1.8.3                   <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes                                         harbor-jobservice<br>e0ab65359cc4        goharbor/harbor-portal:v1.8.3                       &quot;nginx -<span class="hljs-keyword">g</span> &#x27;daemon of??   3 minutes ago       Up 3 minutes (healthy)   80/tcp                      harbor-portal<br>ef032bf896c0        goharbor/harbor-core:v1.8.3                         <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes (healthy)                               harbor-core<br>6c334c42ac9d        goharbor/redis-photon:v1.8.3                        &quot;docker-entrypoint.s??   3 minutes ago       Up 3 minutes             6379/tcp                    redis<br>257f4c4ef4d7        goharbor/harbor-<span class="hljs-keyword">db</span>:v1.8.3                           &quot;/entrypoint.<span class="hljs-keyword">sh</span> <span class="hljs-keyword">post</span>??   3 minutes ago       Up 3 minutes (healthy)   5432/tcp                    harbor-<span class="hljs-keyword">db</span><br>7e741324bb39        goharbor/registry-photon:v2.7.1-patch-2819-v1.8.3   &quot;/entrypoint.<span class="hljs-keyword">sh</span> /etc??   3 minutes ago       Up 3 minutes (healthy)   5000/tcp                    registry<br>a468bf625584        goharbor/harbor-registryctl:v1.8.3                  <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes (healthy)                               registryctl<br>41a1e79fc5d1        goharbor/harbor-<span class="hljs-keyword">log</span>:v1.8.3                          &quot;/bin/<span class="hljs-keyword">sh</span> -c /usr/<span class="hljs-keyword">loc</span>??   3 minutes ago       Up 3 minutes (healthy)   127.0.0.1:1514-&gt;10514/tcp   harbor-<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><h4 id="2-6-6-配置harbor的dns内网解析"><a href="#2-6-6-配置harbor的dns内网解析" class="headerlink" title="2.6.6.配置harbor的dns内网解析"></a>2.6.6.配置harbor的dns内网解析</h4>            <input type="checkbox" disabled checked="checked">hdss7-11.host.com 上          <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># vi /var/named/od.com.zone</span><br><span class="hljs-number">2019111002</span> ; serial<br>harbor             A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span><br><span class="hljs-comment">//注意serial前滚一个序号</span><br><br>[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># systemctl restart named</span><br>[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># dig -t A harbor.od.com +short</span><br><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span><br></code></pre></td></tr></table></figure><h4 id="2-6-7-安装nginx并配置"><a href="#2-6-7-安装nginx并配置" class="headerlink" title="2.6.7.安装nginx并配置"></a>2.6.7.安装nginx并配置</h4><blockquote><p>注意所在主机</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># yum install nginx</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># vi /etc/nginx/conf.d/harbor.od.com.conf</span><br>server &#123;<br>    listen       <span class="hljs-number">80</span>;<br>    server_name  harbor.od.com;<br><br>    client_max_body_size <span class="hljs-number">1000</span>m;<br><br>    location / &#123;<br>        proxy_pass http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">180</span>;<br>    &#125;<br>&#125;<br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># systemctl start nginx</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># systemctl enable nginx</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/nginx.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service.<br></code></pre></td></tr></table></figure><h4 id="2-6-8-浏览器打开http：-harbor-od-com"><a href="#2-6-8-浏览器打开http：-harbor-od-com" class="headerlink" title="2.6.8.浏览器打开http：//harbor.od.com"></a>2.6.8.浏览器打开http：<a href="http://harbor.od.com/">//harbor.od.com</a></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-11 ~]# curl harbor.od.com<br><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Harbor<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;favicon.ico?v=2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;styles.c1fdd265f24063370a49.css&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">harbor-app</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;spinner spinner-lg app-loading&quot;</span>&gt;</span><br>            Loading...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">harbor-app</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;runtime.26209474bfa8dc87a77c.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts.c04548c4e6d1db502313.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;main.144e8ccd474a28572e81.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>1、浏览器输入：harbor.od.com 用户名：admin 密码：Harbor12345</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/login.png" alt="登录"></p><p><strong>2、新建项目</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/new_P.png" alt="新建项目"></p><p><strong>3、下载测试镜像并打给镜像打一个tag</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> harbor]# docker pull nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br><span class="hljs-number">1.7</span>.<span class="hljs-number">9</span>: Pulling from library/nginx<br>Image docker.io/library/nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span> uses outdated schema1 manifest format. Please upgrade <span class="hljs-keyword">to</span> <span class="hljs-keyword">a</span> schema2 image <span class="hljs-keyword">for</span> better future compatibility. More information at http<span class="hljs-variable">s:</span>//docs.docker.<span class="hljs-keyword">com</span>/registry/spec/deprecated-schema-v1/<br>a3ed95caeb02: Pull <span class="hljs-built_in">complete</span> <br><span class="hljs-number">6</span>f5424ebd796: Pull <span class="hljs-built_in">complete</span> <br>d15444df170<span class="hljs-variable">a:</span> Pull <span class="hljs-built_in">complete</span> <br>e83f073daa67: Pull <span class="hljs-built_in">complete</span> <br>a4d93e421023: Pull <span class="hljs-built_in">complete</span> <br><span class="hljs-number">084</span>adbca2647: Pull <span class="hljs-built_in">complete</span> <br>c9cec474c523: Pull <span class="hljs-built_in">complete</span> <br>Diges<span class="hljs-variable">t:</span> <span class="hljs-built_in">sha256</span>:e3456c851a152494c3e4ff5fcc26f240206abac0c9d794affb40e0714846c451<br>Statu<span class="hljs-variable">s:</span> Downloaded newer image <span class="hljs-keyword">for</span> nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>docker.io/library/nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]# docker images |<span class="hljs-keyword">grep</span> <span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>nginx                           <span class="hljs-number">1.7</span>.<span class="hljs-number">9</span>                      <span class="hljs-number">84581</span>e99d807        <span class="hljs-number">4</span> years ago         <span class="hljs-number">91.7</span>MB<br>[root@hdss7-<span class="hljs-number">200</span> harbor]# docker <span class="hljs-keyword">tag</span> <span class="hljs-number">84581</span>e99d807 harbor.od.<span class="hljs-keyword">com</span>/public/nginx:v1.<span class="hljs-number">7.9</span><br></code></pre></td></tr></table></figure><p><strong>4、登陆harbor并推送到仓库</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># docker login harbor.od.com</span><br>Username: admin<br>Password: <br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.docker/config.json.<br>Configure a credential helper to remove this warning. See<br>https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>reference<span class="hljs-regexp">/commandline/</span>login/<span class="hljs-comment">#credentials-store</span><br><br>Login Succeeded<br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># docker push harbor.od.com/public/nginx:v1.7.9</span><br>The push refers to repository [harbor.od.com<span class="hljs-regexp">/public/</span>nginx]<br><span class="hljs-number">5</span>f70bf18a086: Pushed <br><span class="hljs-number">4</span>b26ab29a475: Pushed <br>ccb1d68e3fb7: Pushed <br>e387107e2065: Pushed <br><span class="hljs-number">63</span>bf84221cce: Pushed <br>e02dce553481: Pushed <br>dea2e4984e29: Pushed <br>v1.<span class="hljs-number">7.9</span>: digest: sha256:b1f5935eb2e9e2ae89c0b3e2e148c19068d91ca502e857052f14db230443e4c2 size: <span class="hljs-number">3012</span><br></code></pre></td></tr></table></figure><h4 id="2-6-9-检查"><a href="#2-6-9-检查" class="headerlink" title="2.6.9.检查"></a>2.6.9.检查</h4><p><strong>可以看到nginx镜像已推送到public下</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/nginx.png" alt="Public"></p><h2 id="3-部署Master节点服务"><a href="#3-部署Master节点服务" class="headerlink" title="3.部署Master节点服务"></a>3.部署Master节点服务</h2><h3 id="3-1-部署etcd集群"><a href="#3-1-部署etcd集群" class="headerlink" title="3.1.部署etcd集群"></a>3.1.部署etcd集群</h3><h4 id="3-1-1-集群规划"><a href="#3-1-1-集群规划" class="headerlink" title="3.1.1.集群规划"></a>3.1.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip地址</th></tr></thead><tbody><tr><td>hdss7-12.host.com</td><td>etcd lead</td><td>10.4.7.12</td></tr><tr><td>hdss7-21.host.com</td><td>etcd follow</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>etcd follow</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以hdss7-12.host.com为例，另外两台部署方法类似</strong></p><h4 id="3-1-2-创建基于根证书的config配置文件"><a href="#3-1-2-创建基于根证书的config配置文件" class="headerlink" title="3.1.2.创建基于根证书的config配置文件"></a>3.1.2.创建基于根证书的config配置文件</h4>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com 上          <figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> ~]# vi /opt/certs/ca-config.json<br>&#123;<br>    <span class="hljs-string">&quot;signing&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;default&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span><br>        &#125;,<br>        <span class="hljs-string">&quot;profiles&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;server&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;server auth&quot;</span><br>                ]<br>            &#125;,<br>            <span class="hljs-string">&quot;client&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;client auth&quot;</span><br>                ]<br>            &#125;,<br>            <span class="hljs-string">&quot;peer&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;server auth&quot;</span>,<br>                    <span class="hljs-string">&quot;client auth&quot;</span><br>                ]<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;    <br></code></pre></td></tr></table></figure><h4 id="3-1-3-创建生成自签证书的签名请求（csr）的-json配置文件"><a href="#3-1-3-创建生成自签证书的签名请求（csr）的-json配置文件" class="headerlink" title="3.1.3.创建生成自签证书的签名请求（csr）的 json配置文件"></a>3.1.3.创建生成自签证书的签名请求（csr）的 json配置文件</h4><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> ~]# vi /opt/certs/etcd-peer-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-etcd&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>        <span class="hljs-string">&quot;10.4.7.11&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.12&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.22&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-1-4-生成etcd证书和私钥"><a href="#3-1-4-生成etcd证书和私钥" class="headerlink" title="3.1.4.生成etcd证书和私钥"></a>3.1.4.生成etcd证书和私钥</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-200</span> ~]# cd /opt/certs/<br>[root@hdss7<span class="hljs-number">-200</span> certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd-peer-csr.json |cfssl-<span class="hljs-type">json</span> -bare etcd-peer<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] generate received request<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] received CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] generating key: rsa<span class="hljs-number">-2048</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] encoded CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] signed certificate <span class="hljs-keyword">with</span> <span class="hljs-type">serial</span> number <span class="hljs-number">319260464385476820097369736582871670367101389147</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-built_in">WARNING</span>] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable <span class="hljs-keyword">for</span><br>websites. <span class="hljs-keyword">For</span> more information see the Baseline Requirements <span class="hljs-keyword">for</span> the Issuance <span class="hljs-keyword">and</span> Management<br><span class="hljs-keyword">of</span> Publicly-<span class="hljs-keyword">Trusted</span> Certificates, v<span class="hljs-number">.1</span><span class="hljs-number">.1</span><span class="hljs-number">.6</span>, <span class="hljs-keyword">from</span> the CA/Browser Forum (https://cabforum.org);<br>specifically, section <span class="hljs-number">10.2</span><span class="hljs-number">.3</span> (&quot;Information Requirements&quot;).<br></code></pre></td></tr></table></figure><h4 id="3-1-5-检查生成的证书和私钥"><a href="#3-1-5-检查生成的证书和私钥" class="headerlink" title="3.1.5.检查生成的证书和私钥"></a>3.1.5.检查生成的证书和私钥</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 36<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-1-6-创建etcd用户"><a href="#3-1-6-创建etcd用户" class="headerlink" title="3.1.6.创建etcd用户"></a>3.1.6.创建etcd用户</h4>            <input type="checkbox" disabled checked="checked">hdss7-12.host.com 上          <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-12 opt]</span><span class="hljs-comment"># useradd -s /sbin/nologin -M etcd</span><br><span class="hljs-section">[root@hdss7-12 opt]</span><span class="hljs-comment"># id etcd</span><br><span class="hljs-attr">uid</span>=<span class="hljs-number">1000</span>(etcd) gid=<span class="hljs-number">1000</span>(etcd) groups=<span class="hljs-number">1000</span>(etcd)<br></code></pre></td></tr></table></figure><h4 id="3-1-7-下载软件，解压，做软链接"><a href="#3-1-7-下载软件，解压，做软链接" class="headerlink" title="3.1.7.下载软件，解压，做软链接"></a>3.1.7.下载软件，解压，做软链接</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tap">https://github.com/etcd-io/etcd/tags   //这里用的3.1.20版本，目前不建议超过3.3的版本<br>[root@hdss7-12 src]<span class="hljs-comment"># tar xf etcd-v3.1.20-linux-amd64.tar.gz -C /opt/</span><br>[root@hdss7-12 src]<span class="hljs-comment"># cd ..</span><br>[root@hdss7-12 opt]<span class="hljs-comment"># mv etcd-v3.1.20-linux-amd64/ etcd-v3.1.20</span><br>[root@hdss7-12 opt]<span class="hljs-comment"># ln -s /opt/etcd-v3.1.20/ /opt/etcd</span><br>[root@hdss7-12 opt]<span class="hljs-comment"># ll</span><br>total 0<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root   root  <span class="hljs-number"> 18 </span>Nov<span class="hljs-number"> 16 </span>14:22 etcd -&gt; /opt/etcd-v3.1.20/<br>drwxr-xr-x<span class="hljs-number"> 3 </span>478493<span class="hljs-number"> 89939 </span>123 Oct<span class="hljs-number"> 11 </span><span class="hljs-number"> 2018 </span>etcd-v3.1.20<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root   root  <span class="hljs-number"> 45 </span>Nov<span class="hljs-number"> 16 </span>14:20 src<br></code></pre></td></tr></table></figure><h4 id="3-1-8-创建目录，拷贝证书，私钥"><a href="#3-1-8-创建目录，拷贝证书，私钥" class="headerlink" title="3.1.8.创建目录，拷贝证书，私钥"></a>3.1.8.创建目录，拷贝证书，私钥</h4><h5 id="创建证书目录、数据目录、日志目录"><a href="#创建证书目录、数据目录、日志目录" class="headerlink" title="创建证书目录、数据目录、日志目录"></a>创建证书目录、数据目录、日志目录</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">12</span> opt]# mkdir -p <span class="hljs-regexp">/opt/</span>etcd<span class="hljs-regexp">/certs /</span>data<span class="hljs-regexp">/etcd /</span>data<span class="hljs-regexp">/logs/</span>etcd-server<br></code></pre></td></tr></table></figure><h5 id="拷贝3-1-4生成的证书文件"><a href="#拷贝3-1-4生成的证书文件" class="headerlink" title="拷贝3.1.4生成的证书文件"></a>拷贝3.1.4生成的证书文件</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-12 certs]<span class="hljs-comment"># scp hdss7-200:/opt/certs/ca.pem .</span><br>[root@hdss7-12 certs]<span class="hljs-comment"># scp hdss7-200:/opt/certs/etcd-peer.pem .</span><br>[root@hdss7-12 certs]<span class="hljs-comment"># scp hdss7-200:/opt/certs/etcd-peer-kry.pem .</span><br>[root@hdss7-12 certs]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 16 </span>14:31 ca.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:34 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:33 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-1-9-创建etcd服务启动脚本"><a href="#3-1-9-创建etcd服务启动脚本" class="headerlink" title="3.1.9.创建etcd服务启动脚本"></a>3.1.9.创建etcd服务启动脚本</h4><p><strong>etcd集群各主机启动配置略有不同，配置其他节点时注意修改</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># vi /opt/etcd/etcd-server-startup.sh</span><br><span class="hljs-comment">#!/bin/sh</span><br>./etcd --name etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span> \<br>       --data-dir <span class="hljs-regexp">/data/</span>etcd/etcd-server \<br>       --listen-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --listen-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --quota-backend-bytes <span class="hljs-number">8000000000</span> \<br>       --initial-advertise-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --advertise-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --initial-cluster  etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> \<br>       --ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --client-cert-auth  \<br>       --trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --peer-key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --peer-client-cert-auth \<br>       --peer-trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --log-output stdout<br>       <br>       <span class="hljs-comment">#############配置说明#########</span><br>       --listen-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \            <span class="hljs-regexp">//</span>内部通信起的<span class="hljs-number">2380</span>端口                                                   <br>       --listen-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \ <span class="hljs-regexp">//</span>对外通信起的<span class="hljs-number">2379</span>端口<br>       --quota-backend-bytes <span class="hljs-number">8000000000</span> \                        <span class="hljs-regexp">//</span> 后端配额       <br>       --initial-advertise-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --advertise-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --initial-cluster  etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> \<br>       --ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --client-cert-auth  \<br>       --trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --peer-key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --peer-client-cert-auth \<br>       --peer-trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --log-output stdout<br> <br>[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># chmod +x /opt/etcd/etcd-server.startup.sh </span><br>[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># ll /opt/etcd/etcd-server.startup.sh </span><br>-rwxr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">981</span> Nov <span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">39</span> <span class="hljs-regexp">/opt/</span>etcd/etcd-server.startup.sh   <br></code></pre></td></tr></table></figure><h4 id="3-1-10-调整目录权限"><a href="#3-1-10-调整目录权限" class="headerlink" title="3.1.10.调整目录权限"></a>3.1.10.调整目录权限</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">12</span> ~]# chown -R etcd.etcd <span class="hljs-regexp">/opt/</span>etcd-v3.<span class="hljs-number">1.20</span><span class="hljs-regexp">/   /</span>data<span class="hljs-regexp">/etcd/</span>  <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/etcd-server/</span><br></code></pre></td></tr></table></figure><h4 id="3-1-11-安装supervison软件"><a href="#3-1-11-安装supervison软件" class="headerlink" title="3.1.11.安装supervison软件"></a>3.1.11.安装supervison软件</h4><p><strong>supervison是一个管理后台进程的软件，etcd进程掉了会自动拉起来</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># yum install supervisor -y</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># systemctl start supervisord</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># systemctl enable supervisord</span><br></code></pre></td></tr></table></figure><h4 id="3-1-12-创建etcd-server的启动配置"><a href="#3-1-12-创建etcd-server的启动配置" class="headerlink" title="3.1.12.创建etcd-server的启动配置"></a>3.1.12.创建etcd-server的启动配置</h4><p><strong>etcd集群各主机启动配置略有不同，配置其他节点时注意修改</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-12 ~]</span><span class="hljs-comment"># vi /etc/supervisord.d/etcd-server.ini</span><br><br><span class="hljs-section">[program:etcd-server-7-12]</span><br><span class="hljs-attr">command</span>=/opt/etcd/etcd-server-startup.sh                        <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                      <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/etcd                                             <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                  <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                    <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                  <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                   <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                 <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                 <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=etcd                                                       <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                            <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/etcd-server/etcd.stdout.log           <span class="hljs-comment">; stdout log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                    <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                        <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                     <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                     <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-1-13-启动etcd服务并检查"><a href="#3-1-13-启动etcd服务并检查" class="headerlink" title="3.1.13.启动etcd服务并检查"></a>3.1.13.启动etcd服务并检查</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl update</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>: added process group<br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>                 STARTING  <br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>                 RUNNING   pid <span class="hljs-number">20350</span>, uptime 0<span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">14</span><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># netstat -luntp|grep etcd</span><br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><span class="hljs-symbol">:</span><span class="hljs-number">2379</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd        <br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">2379</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd        <br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><span class="hljs-symbol">:</span><span class="hljs-number">2380</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd RTING  <br></code></pre></td></tr></table></figure><h4 id="3-1-14-安装部署启动检查所有集群"><a href="#3-1-14-安装部署启动检查所有集群" class="headerlink" title="3.1.14.安装部署启动检查所有集群"></a>3.1.14.安装部署启动检查所有集群</h4><p><strong>和上述无区别,最主要是修改两个配置文件:</strong><br>1、/opt/etcd/etcd-server-startup.sh的ip地址，<br>2、/etc/supervisord.d/etcd-server.ini</p><p><strong>//修改supervisord启动ini文件的program标签，是为了更好区分主机，生产规范，强迫症患者的福音，不修改不会造成启动失败</strong></p><h4 id="3-1-15-检查集群状态"><a href="#3-1-15-检查集群状态" class="headerlink" title="3.1.15.检查集群状态"></a>3.1.15.检查集群状态</h4><p><strong>任意节点输入</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> etcd]<span class="hljs-comment"># ./etcdctl  cluster-health</span><br>member <span class="hljs-number">988139385</span>f78284 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>member <span class="hljs-number">5</span>a0ef2a004fc4349 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>member f4a0cb0a765574a8 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>cluster is healthy<br><br><br>[root@hdss7-<span class="hljs-number">21</span> etcd]<span class="hljs-comment"># ./etcdctl member list</span><br><span class="hljs-number">988139385</span>f78284: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2379</span> isLeader=false<br><span class="hljs-number">5</span>a0ef2a004fc4349: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2379</span> isLeader=false<br>f4a0cb0a765574a8: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span> isLeader=true<br></code></pre></td></tr></table></figure><h3 id="3-2-部署kube-apiserver集群"><a href="#3-2-部署kube-apiserver集群" class="headerlink" title="3.2.部署kube-apiserver集群"></a>3.2.部署kube-apiserver集群</h3><h4 id="3-2-1-集群规划"><a href="#3-2-1-集群规划" class="headerlink" title="3.2.1.集群规划"></a>3.2.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th><th>vip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-apiserver</td><td>10.4.7.21</td><td>无</td></tr><tr><td>hdss7-22.host.com</td><td>kube-apiserver</td><td>10.4.7.22</td><td>无</td></tr><tr><td>hdss7-11.host.com</td><td>L4</td><td>10.4.7.11</td><td>10.4.7.10</td></tr><tr><td>hdss7-12.host.com</td><td>L4</td><td>10.4.7.12</td><td>10.4.7.10</td></tr></tbody></table><p>注意：hdss7-11和hdss7-12使用nginx做4层负载均衡器，keepalived跑一个VIP：10.4.7.10，代理两个kube-apiserver，实现高可用。<br><strong>这里以hdss21为例，另外一台运算节点部署方法类似</strong></p><h4 id="3-2-2-下载软件，解压，做软链接"><a href="#3-2-2-下载软件，解压，做软链接" class="headerlink" title="3.2.2.下载软件，解压，做软链接"></a>3.2.2.下载软件，解压，做软链接</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs tap">官方github地址：github.com/kubernetes/releasses/tag/v1.15.4    //这里是v1.15.2版本<br>下载方法：点击版本号 → CHANGELOG-1.15.md → DOWNLOAD → server binaries → 找到kubenetes-server-linux-amd64.tar.gz<br><br>[root@hdss7-21 src]<span class="hljs-comment"># tar xf kubernetes-server-linux-amd64-v1.15.2.tar.gz  -C /opt</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># mv kubernetes/ kubernetes-v1.15.2</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># ln -s /opt/kubernetes-v1.15.2/ /opt/kubernetes</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># ll</span><br>total 0<br>drwx--x--x<span class="hljs-number"> 4 </span>root root <span class="hljs-number"> 28 </span>Nov<span class="hljs-number"> 16 </span>03:06 containerd<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 18 </span>Nov<span class="hljs-number"> 16 </span>15:44 etcd -&gt; /opt/etcd-v3.1.20/<br>drwxr-xr-x<span class="hljs-number"> 4 </span>etcd etcd<span class="hljs-number"> 166 </span>Nov<span class="hljs-number"> 17 </span>00:39 etcd-v3.1.20<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 24 </span>Nov<span class="hljs-number"> 17 </span>01:35 kubernetes -&gt; /opt/kubernetes-v1.15.2/<br>drwxr-xr-x<span class="hljs-number"> 4 </span>root root <span class="hljs-number"> 79 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubernetes-v1.15.2<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 306 </span>Nov<span class="hljs-number"> 16 </span>15:41 src<br><br><br>//删掉无用的源码包，bin下无用的tag，tar文件，不用adm方式部署，所以可以删除<br>[root@hdss7-21 opt]<span class="hljs-comment"># cd kubernetes</span><br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># ls</span><br>addons  kubernetes-src.tar.gz  LICENSES  server<br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># rm -rf kubernetes-src.tar.gz </span><br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># ll</span><br>total 1180<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root      <span class="hljs-number"> 6 </span>Aug <span class="hljs-number"> 5 </span>18:01 addons<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1205293 </span>Aug <span class="hljs-number"> 5 </span>18:01 LICENSES<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root     <span class="hljs-number"> 17 </span>Aug <span class="hljs-number"> 5 </span>17:57 server<br>[root@hdss7-21 bin]<span class="hljs-comment"># rm -f *.tar</span><br>[root@hdss7-21 bin]<span class="hljs-comment"># rm -f *_tag</span><br>[root@hdss7-21 bin]<span class="hljs-comment"># ll</span><br>total 884636<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 43534816 </span>Aug <span class="hljs-number"> 5 </span>18:01 apiextensions-apiserver<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 100548640 </span>Aug <span class="hljs-number"> 5 </span>18:01 cloud-controller-manager<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 200648416 </span>Aug <span class="hljs-number"> 5 </span>18:01 hyperkube<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 40182208 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubeadm<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 164501920 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-apiserver<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 116397088 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-controller-manager<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 42985504 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubectl<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 119616640 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubelet<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 36987488 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-proxy<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 38786144 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-scheduler<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1648224 </span>Aug <span class="hljs-number"> 5 </span>18:01 mounter<br></code></pre></td></tr></table></figure><h4 id="3-2-3-签发client证书"><a href="#3-2-3-签发client证书" class="headerlink" title="3.2.3.签发client证书"></a>3.2.3.签发client证书</h4>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200上          <h5 id="3-2-3-1-创建生成证书签名请求（csr）的json配置文件"><a href="#3-2-3-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="3.2.3.1.创建生成证书签名请求（csr）的json配置文件"></a>3.2.3.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]#  vi /opt/certs/client-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-node&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-2-3-2-生成clent证书和私钥"><a href="#3-2-3-2-生成clent证书和私钥" class="headerlink" title="3.2.3.2.生成clent证书和私钥"></a>3.2.3.2.生成clent证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=client client-csr.json |cfssl-json -bare client<br></code></pre></td></tr></table></figure><h5 id="3-2-3-3-检查生成的证书和私钥"><a href="#3-2-3-3-检查生成的证书和私钥" class="headerlink" title="3.2.3.3.检查生成的证书和私钥"></a>3.2.3.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 52<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 280 </span>Nov<span class="hljs-number"> 16 </span>17:45 client-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:47 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-2-4-签发kube-apiserver证书"><a href="#3-2-4-签发kube-apiserver证书" class="headerlink" title="3.2.4.签发kube-apiserver证书"></a>3.2.4.签发kube-apiserver证书</h4>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200上          <h5 id="3-2-4-1-创建生成证书签名请求（csr）的-json配置文件"><a href="#3-2-4-1-创建生成证书签名请求（csr）的-json配置文件" class="headerlink" title="3.2.4.1.创建生成证书签名请求（csr）的 json配置文件"></a>3.2.4.1.创建生成证书签名请求（csr）的 json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]# vi /opt/certs/apiserver-csr.json <br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-apiserver&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br><span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br><span class="hljs-string">&quot;192.168.0.1&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc.cluster&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc.cluster.local&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.10&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.22&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.23&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-2-4-2-生成kube-apiserver证书和私钥"><a href="#3-2-4-2-生成kube-apiserver证书和私钥" class="headerlink" title="3.2.4.2.生成kube-apiserver证书和私钥"></a>3.2.4.2.生成kube-apiserver证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=server apiserver-csr.json |cfssl-json -bare apiserver<br></code></pre></td></tr></table></figure><h5 id="3-2-4-3-检查生成的证书和私钥"><a href="#3-2-4-3-检查生成的证书和私钥" class="headerlink" title="3.2.4.3.检查生成的证书和私钥"></a>3.2.4.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 68<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1249 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 567 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1598 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 280 </span>Nov<span class="hljs-number"> 16 </span>17:45 client-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:47 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-2-5-拷贝证书至各运算节点，并创建配置"><a href="#3-2-5-拷贝证书至各运算节点，并创建配置" class="headerlink" title="3.2.5.拷贝证书至各运算节点，并创建配置"></a>3.2.5.拷贝证书至各运算节点，并创建配置</h4><h5 id="3-2-5-1-拷贝3套证书到…-bin-cert目录"><a href="#3-2-5-1-拷贝3套证书到…-bin-cert目录" class="headerlink" title="3.2.5.1.拷贝3套证书到…/bin/cert目录"></a>3.2.5.1.拷贝3套证书到…/bin/cert目录</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/ca.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/ca-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/client.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/client-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/apiserver.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/apiserver-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># ll</span><br>total 24<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:11 apiserver-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1598 </span>Nov<span class="hljs-number"> 17 </span>02:08 apiserver.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:07 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 17 </span>02:06 ca.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:08 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 17 </span>02:07 client.pem<br></code></pre></td></tr></table></figure><h5 id="3-2-5-2-创建配置"><a href="#3-2-5-2-创建配置" class="headerlink" title="3.2.5.2.创建配置"></a>3.2.5.2.创建配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">bin</span>]<span class="hljs-comment"># mkdir conf</span><br>[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">conf</span>]<span class="hljs-comment"># vi audit.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">audit.k8s.io/v1beta1</span> <span class="hljs-comment"># This is required.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Policy</span><br><span class="hljs-comment"># Don&#x27;t generate audit events for all requests in RequestReceived stage.</span><br><span class="hljs-attr">omitStages:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;RequestReceived&quot;</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-comment"># Log pod changes at RequestResponse level</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">RequestResponse</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-comment"># Resource &quot;pods&quot; doesn&#x27;t match requests to any subresource of pods,</span><br>      <span class="hljs-comment"># which is consistent with the RBAC policy.</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;pods&quot;</span>]<br>  <span class="hljs-comment"># Log &quot;pods/log&quot;, &quot;pods/status&quot; at Metadata level</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;pods/log&quot;</span>, <span class="hljs-string">&quot;pods/status&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log requests to a configmap called &quot;controller-leader&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;configmaps&quot;</span>]<br>      <span class="hljs-attr">resourceNames:</span> [<span class="hljs-string">&quot;controller-leader&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log watch requests by the &quot;system:kube-proxy&quot; on endpoints or services</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">users:</span> [<span class="hljs-string">&quot;system:kube-proxy&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;watch&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;endpoints&quot;</span>, <span class="hljs-string">&quot;services&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log authenticated requests to certain non-resource URL paths.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">userGroups:</span> [<span class="hljs-string">&quot;system:authenticated&quot;</span>]<br>    <span class="hljs-attr">nonResourceURLs:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/api*&quot;</span> <span class="hljs-comment"># Wildcard matching.</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/version&quot;</span><br><br>  <span class="hljs-comment"># Log the request body of configmap changes in kube-system.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Request</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;configmaps&quot;</span>]<br>    <span class="hljs-comment"># This rule only applies to resources in the &quot;kube-system&quot; namespace.</span><br>    <span class="hljs-comment"># The empty string &quot;&quot; can be used to select non-namespaced resources.</span><br>    <span class="hljs-attr">namespaces:</span> [<span class="hljs-string">&quot;kube-system&quot;</span>]<br><br>  <span class="hljs-comment"># Log configmap and secret changes in all other namespaces at the Metadata level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;secrets&quot;</span>, <span class="hljs-string">&quot;configmaps&quot;</span>]<br><br>  <span class="hljs-comment"># Log all other resources in core and extensions at the Request level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Request</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;extensions&quot;</span> <span class="hljs-comment"># Version of group should NOT be included.</span><br><br>  <span class="hljs-comment"># A catch-all rule to log all other requests at the Metadata level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-comment"># Long-running requests like watches that fall under this rule will not</span><br>    <span class="hljs-comment"># generate an audit event in RequestReceived.</span><br>    <span class="hljs-attr">omitStages:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;RequestReceived&quot;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-6-创建apiserver启动脚本"><a href="#3-2-6-创建apiserver启动脚本" class="headerlink" title="3.2.6.创建apiserver启动脚本"></a>3.2.6.创建apiserver启动脚本</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">[root@hdss7-21 bin]<span class="hljs-comment"># vi /opt/kubernetes/server/bin/kube-apiserver.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-string">./kube-apiserver</span> \<br>  <span class="hljs-params">--apiserver-count</span> 2 \<br>  <span class="hljs-params">--audit-log-path</span> <span class="hljs-string">/data/logs/kubernetes/kube-apiserver/audit-log</span> \<br>  <span class="hljs-params">--audit-policy-file</span> <span class="hljs-string">./conf/audit.yaml</span> \<br>  <span class="hljs-params">--authorization-mode</span> RBAC \<br>  <span class="hljs-params">--client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--requestheader-client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--enable-admission-plugins</span> NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \<br>  <span class="hljs-params">--etcd-cafile</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--etcd-certfile</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--etcd-keyfile</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--etcd-servers</span> https:<span class="hljs-string">//10.4.7.12</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.21</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.22</span><span class="hljs-function">:2379</span> \<br>  <span class="hljs-params">--service-account-key-file</span> <span class="hljs-string">./cert/ca-key.pem</span> \<br>  <span class="hljs-params">--service-cluster-ip-range</span> 192.168.0.0/16 \<br>  <span class="hljs-params">--service-node-port-range</span> 3000-29999 \<br>  <span class="hljs-params">--target-ram-mb=1024</span> \<br>  <span class="hljs-params">--kubelet-client-certificate</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--kubelet-client-key</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--log-dir</span>  <span class="hljs-string">/data/logs/kubernetes/kube-apiserver</span> \<br>  <span class="hljs-params">--tls-cert-file</span> <span class="hljs-string">./cert/apiserver.pem</span> \<br>  <span class="hljs-params">--tls-private-key-file</span> <span class="hljs-string">./cert/apiserver-key.pem</span> \<br>  <span class="hljs-params">--v</span> 2<br> <br> <span class="hljs-comment">#################参数说明############</span><br>    <span class="hljs-params">--apiserver-count</span> 2 \                     <span class="hljs-string">//</span> apiserver数量，有资源可以给3个                 <br>  <span class="hljs-params">--audit-log-path</span> <span class="hljs-string">/data/logs/kubernetes/kube-apiserver/audit-log</span> \   <span class="hljs-string">//</span>日志目录<br>  <span class="hljs-params">--audit-policy-file</span> <span class="hljs-string">./conf/audit.yaml</span> \                   <span class="hljs-string">//</span>日志审计规则<br>  <span class="hljs-params">--authorization-mode</span> RBAC \                           <span class="hljs-string">//RBAC</span> --基于角色访问的控制<br>  <span class="hljs-params">--client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--requestheader-client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--enable-admission-plugins</span> NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \<br>  <span class="hljs-params">--etcd-cafile</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--etcd-certfile</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--etcd-keyfile</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--etcd-servers</span> https:<span class="hljs-string">//10.4.7.12</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.21</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.22</span><span class="hljs-function">:2379</span> \<br>  <span class="hljs-params">--service-account-key-file</span> <span class="hljs-string">./cert/ca-key.pem</span> \<br>  <span class="hljs-params">--service-cluster-ip-range</span> 192.168.0.0/16 \<br>  <span class="hljs-params">--service-node-port-range</span> 3000-29999 \<br>  <span class="hljs-params">--target-ram-mb=1024</span> \                                              <br>  <span class="hljs-params">--kubelet-client-certificate</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--kubelet-client-key</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--log-dir</span>  <span class="hljs-string">/data/logs/kubernetes/kube-apiserver</span> \<br>  <span class="hljs-params">--tls-cert-file</span> <span class="hljs-string">./cert/apiserver.pem</span> \<br>  <span class="hljs-params">--tls-private-key-file</span> <span class="hljs-string">./cert/apiserver-key.pem</span> \<br>  <span class="hljs-params">--v</span> 2                                 <span class="hljs-string">//log</span> Level  是v 2 <br>  更多说明请看例子：<br>  [root@hdss7-21 bin]<span class="hljs-comment"># ./kube-apiserver  --help|grep -A 5 target-ram-mb</span><br>      <span class="hljs-params">--target-ram-mb</span> int                            Memory limit for apiserver in MB <span class="hljs-params">(used to configure sizes of caches, etc.)</span><br><br>Etcd flags:<br><br>      <span class="hljs-params">--default-watch-cache-size</span> int             Default watch cache size. If zero, watch cache will be disabled for resources that do not have a default watch size <span class="hljs-keyword">set</span>. <span class="hljs-params">(default 100)</span><br>      <span class="hljs-params">--delete-collection-workers</span> int            Number of workers spawned for DeleteCollection call. These are used to speed up namespace cleanup. <span class="hljs-params">(default 1)</span><br></code></pre></td></tr></table></figure><h4 id="3-2-7-调整权限和目录"><a href="#3-2-7-调整权限和目录" class="headerlink" title="3.2.7.调整权限和目录"></a>3.2.7.调整权限和目录</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-meta"># chmod +x kube-apiserver.sh</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-meta"># mkdir -p /data/logs/kubernetes/kube-apiserver</span><br></code></pre></td></tr></table></figure><h4 id="3-2-8-创建supervisor配置"><a href="#3-2-8-创建supervisor配置" class="headerlink" title="3.2.8.创建supervisor配置"></a>3.2.8.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment">#  vi /etc/supervisord.d/kube-apiserver.ini</span><br><span class="hljs-section">[program:kube-apiserver-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-apiserver.sh            <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                      <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                            <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                  <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                    <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                  <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                   <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                 <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                 <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                       <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                            <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-apiserver/apiserver.stdout.log        <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                    <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                        <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                     <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                     <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-2-9-启动服务并检查"><a href="#3-2-9-启动服务并检查" class="headerlink" title="3.2.9.启动服务并检查"></a>3.2.9.启动服务并检查</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># supervisorctl update</span><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-21</span>                 RUNNING   pid <span class="hljs-number">1716</span>, uptime <span class="hljs-number">2</span><span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">19</span><br>kube-apiserver<span class="hljs-number">-7</span><span class="hljs-number">-21</span>              RUNNING   pid <span class="hljs-number">2032</span>, uptime 0<span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">33</span><br><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># netstat -nltup|grep kube-api</span><br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">8080</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">2033</span>/./kube-apiserv <br>tcp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">6443</span>                 ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">2033</span>/./kube-apiserv <br></code></pre></td></tr></table></figure><h4 id="3-2-10-安装部署启动检查所有集群"><a href="#3-2-10-安装部署启动检查所有集群" class="headerlink" title="3.2.10.安装部署启动检查所有集群"></a>3.2.10.安装部署启动检查所有集群</h4><p><strong>hdss7-22 跟上述基本相同</strong><br>/etc/supervisord.d/kube-apiserver.ini<br>需要更改成[program:kube-apiserver-7-22]</p><h4 id="3-2-11-配四层反向代理"><a href="#3-2-11-配四层反向代理" class="headerlink" title="3.2.11.配四层反向代理"></a>3.2.11.配四层反向代理</h4><p><strong>VIP 10.4.7.10：7443代理 两台apiserver的6443端口，此处会用到keepalived</strong></p><h5 id="3-2-11-1安装nginx和keepalived"><a href="#3-2-11-1安装nginx和keepalived" class="headerlink" title="3.2.11.1安装nginx和keepalived"></a>3.2.11.1安装nginx和keepalived</h5><h6 id="hdss7-11和hdss7-12都安装nginx和keepalived"><a href="#hdss7-11和hdss7-12都安装nginx和keepalived" class="headerlink" title="hdss7-11和hdss7-12都安装nginx和keepalived"></a>hdss7-11和hdss7-12都安装nginx和keepalived</h6><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> etcd]<span class="hljs-meta"># yum install nginx -y</span><br></code></pre></td></tr></table></figure><h6 id="hdss7-11和hdss7-12配置nginx-conf"><a href="#hdss7-11和hdss7-12配置nginx-conf" class="headerlink" title="hdss7-11和hdss7-12配置nginx.conf"></a>hdss7-11和hdss7-12配置nginx.conf</h6><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@hdss7<span class="hljs-number">-11</span> conf.d]<span class="hljs-meta"># vi /etc/nginx/nginx.conf        <span class="hljs-comment">//最后追加</span></span><br><span class="hljs-class">stream </span>&#123;<br>    upstream kube-<span class="hljs-class">apiserver </span>&#123;<br>        server <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.21</span>:<span class="hljs-number">6443</span>     max_fails=<span class="hljs-number">3</span> fail_timeout=<span class="hljs-number">30</span>s;<br>        server <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.22</span>:<span class="hljs-number">6443</span>     max_fails=<span class="hljs-number">3</span> fail_timeout=<span class="hljs-number">30</span>s;<br>    &#125;<br>    <span class="hljs-class">server </span>&#123;<br>        listen <span class="hljs-number">7443</span>;<br>        proxy_connect_timeout <span class="hljs-number">2</span>s;<br>        proxy_timeout <span class="hljs-number">900</span>s;<br>        proxy_pass kube-apiserver;<br>    &#125;<br>&#125;<br>[root@hdss7<span class="hljs-number">-12</span> etcd]<span class="hljs-meta"># nginx -t</span><br><span class="hljs-symbol">nginx:</span> the configuration file <span class="hljs-meta-keyword">/etc/</span>nginx/nginx.conf syntax is ok<br><span class="hljs-symbol">nginx:</span> configuration file <span class="hljs-meta-keyword">/etc/</span>nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><h6 id="hdss7-11和hdss7-12配置keepalived"><a href="#hdss7-11和hdss7-12配置keepalived" class="headerlink" title="hdss7-11和hdss7-12配置keepalived"></a>hdss7-11和hdss7-12配置keepalived</h6><p>检查脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># vi /etc/keepalived/check_port.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#keepalived 监控端口脚本</span><br><span class="hljs-comment">#使用方法：</span><br><span class="hljs-comment">#在keepalived的配置文件中</span><br><span class="hljs-comment">#vrrp_script check_port &#123;#创建一个vrrp_script脚本,检查配置</span><br><span class="hljs-comment">#    script &quot;/etc/keepalived/check_port.sh 6379&quot; #配置监听的端口</span><br><span class="hljs-comment">#    interval 2 #检查脚本的频率,单位（秒）</span><br><span class="hljs-comment">#&#125;</span><br>CHK_PORT=<span class="hljs-variable">$1</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;$CHK_PORT&quot;</span> ];then<br>        PORT_PROCESS=`ss -lnt|grep <span class="hljs-variable">$CHK_PORT</span>|wc -l`<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$PORT_PROCESS</span> -eq <span class="hljs-number">0</span> ];then<br>                echo <span class="hljs-string">&quot;Port $CHK_PORT Is Not Used,End.&quot;</span><br>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>        fi<br><span class="hljs-keyword">else</span><br>        echo <span class="hljs-string">&quot;Check Port Cant Be Empty!&quot;</span><br>fi<br><br>[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># chmod +x /etc/keepalived/check_port.sh </span><br></code></pre></td></tr></table></figure><p>配置文件</p><blockquote><p>interface eth0  eth0要和系统网卡名称匹配</p></blockquote><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs puppet">keepalived 主:<br>[root@hdss7-11 conf.d]<span class="hljs-comment"># vi /etc/keepalived/keepalived.conf </span><br><br>! Configuration File for keepalived<br><br><span class="hljs-keyword">global_defs</span> &#123;<br>   router_id <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><br><br>&#125;<br><br><span class="hljs-keyword">vrrp_script</span> <span class="hljs-keyword">chk_nginx</span> &#123;<br>    script <span class="hljs-string">&quot;/etc/keepalived/check_port.sh 7443&quot;</span><br>    interval <span class="hljs-number">2</span><br>    weight -<span class="hljs-number">20</span><br>&#125;<br><br><span class="hljs-keyword">vrrp_instance</span> <span class="hljs-keyword">VI_1</span> &#123;<br>    state MASTER<br>    interface eth<span class="hljs-number">0</span> ←----------------------------这个要和系统网卡名称匹配<br>    virtual_router_id <span class="hljs-number">251</span><br>    <span class="hljs-literal">priority</span> <span class="hljs-number">100</span><br>    advert_int <span class="hljs-number">1</span><br>    mcast_src_ip <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><br>    nopreempt<br><br>    authentication &#123;<br>        <span class="hljs-literal">auth_type</span> PASS<br>        auth_pass <span class="hljs-number">11111111</span><br>    &#125;<br>    <span class="hljs-keyword">track_script</span> &#123;<br>         chk_nginx<br>    &#125;<br>    <span class="hljs-keyword">virtual_ipaddress</span> &#123;<br>        <span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span><br>    &#125;<br>&#125;<br><br><br><br>keepalived从:<br>[root@hdss7-12 conf.d]<span class="hljs-comment"># vi /etc/keepalived/keepalived.conf </span><br><br>! Configuration File for keepalived<br><span class="hljs-keyword">global_defs</span> &#123;<br>router_id <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><br>&#125;<br><span class="hljs-keyword">vrrp_script</span> <span class="hljs-keyword">chk_nginx</span> &#123;<br>script <span class="hljs-string">&quot;/etc/keepalived/check_port.sh 7443&quot;</span><br>interval <span class="hljs-number">2</span><br>weight -<span class="hljs-number">20</span><br>&#125;<br><span class="hljs-keyword">vrrp_instance</span> <span class="hljs-keyword">VI_1</span> &#123;<br>state BACKUP<br>interface eth<span class="hljs-number">0</span><br>virtual_router_id <span class="hljs-number">251</span><br>mcast_src_ip <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><br><span class="hljs-literal">priority</span> <span class="hljs-number">90</span><br>advert_int <span class="hljs-number">1</span><br>authentication &#123;<br><span class="hljs-literal">auth_type</span> PASS<br>auth_pass <span class="hljs-number">11111111</span><br>&#125;<br><span class="hljs-keyword">track_script</span> &#123;<br>chk_nginx<br>&#125;<br><span class="hljs-keyword">virtual_ipaddress</span> &#123;<br><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-2-12-启动代理并检查"><a href="#3-2-12-启动代理并检查" class="headerlink" title="3.2.12.启动代理并检查"></a>3.2.12.启动代理并检查</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>hdss7-<span class="hljs-number">11</span>和hdss7-<span class="hljs-number">12</span>上启动nginx<br>~]<span class="hljs-comment"># systemctl start nginx</span><br>~]<span class="hljs-comment"># systemctl enable nginx</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/nginx.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service.<br>~]<span class="hljs-comment"># netstat -nltup|grep nginx</span><br>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">80</span>              <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:*               LISTEN      <span class="hljs-number">21520</span>/nginx: master <br>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">7443</span>            <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:*               LISTEN      <span class="hljs-number">21520</span>/nginx: master <br>tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> :::<span class="hljs-number">80</span>                   :::*                    LISTEN      <span class="hljs-number">21520</span>/nginx: master <br><br><span class="hljs-regexp">//</span>hdss7-<span class="hljs-number">11</span>和hdss7-<span class="hljs-number">12</span>上启动keepalived<br>~]<span class="hljs-comment"># systemctl start keepalived.service</span><br>~]<span class="hljs-comment"># systemctl enable  keepalived</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/keepalived.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>keepalived.service.<br><br><span class="hljs-regexp">//</span>检查<br>[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># ip addr</span><br><span class="hljs-number">2</span>: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="hljs-number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>c:f4:<span class="hljs-number">9</span>e brd ff:ff:ff:ff:ff:ff<br>    inet <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">10.4</span>.<span class="hljs-number">7.255</span> scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet <span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>/<span class="hljs-number">32</span> scope global eth0<br>       valid_lft forever preferred_lft forever<br><br><span class="hljs-regexp">//</span>VIP漂移测试<br>nginx -s stop测试，略。。。<br></code></pre></td></tr></table></figure><p><strong>注意：keepalived hdss7-11配置 nopreempt，意为非抢占式</strong><br><strong>原因：如果抢占式，假如生产网络抖动原因，check_port脚本探测不到，VIP有可能会动触发报警，VIP漂移在生产上属于重大生产事故，是要写故障报告的，是无法忍受的</strong></p><h3 id="3-3-部署controller-manager"><a href="#3-3-部署controller-manager" class="headerlink" title="3.3.部署controller-manager"></a>3.3.部署controller-manager</h3><h4 id="3-3-1-集群规划"><a href="#3-3-1-集群规划" class="headerlink" title="3.3.1.集群规划"></a>3.3.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>controller-manager</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>controller-manager</td><td>10.4.7.21</td></tr></tbody></table><p>注意：这里部署文档以hdss7-21为例，另外一台类似</p><h4 id="3-3-2-创建启动脚本"><a href="#3-3-2-创建启动脚本" class="headerlink" title="3.3.2.创建启动脚本"></a>3.3.2.创建启动脚本</h4><ul><li><input disabled="" type="checkbox"> <strong>hdss7-21.host.com上</strong></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-controller-manager.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kube-controller-manager \<br>  --cluster-cidr <span class="hljs-number">172.7</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  --leader-elect <span class="hljs-keyword">true</span> \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-controller-manager \<br>  --master http:<span class="hljs-comment">//127.0.0.1:8080 \</span><br>  --service-account-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca-key.pem \<br>  --service-cluster-ip-range <span class="hljs-number">192.168</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  --root-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --v <span class="hljs-number">2</span> <br></code></pre></td></tr></table></figure><h4 id="3-3-3-调整文件权限，创建目录"><a href="#3-3-3-调整文件权限，创建目录" class="headerlink" title="3.3.3.调整文件权限，创建目录"></a>3.3.3.调整文件权限，创建目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-controller-manager.sh <br>[root@hdss7-<span class="hljs-number">21</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-controller-manager<br></code></pre></td></tr></table></figure><h4 id="3-3-4-创建supervisor配置"><a href="#3-3-4-创建supervisor配置" class="headerlink" title="3.3.4.创建supervisor配置"></a>3.3.4.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-conntroller-manager.ini</span><br><span class="hljs-section">[program:kube-controller-manager-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-controller-manager.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                                        <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                              <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                                    <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                                  <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                                      <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                                    <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                                     <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                                   <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                                   <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                                         <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                              <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-controller-manager/controller.stdout.log  <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                                      <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                                          <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                                       <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                                       <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-3-5-启动服务并检查"><a href="#3-3-5-启动服务并检查" class="headerlink" title="3.3.5.启动服务并检查"></a>3.3.5.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br><br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 1716, uptime 3:44:21<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 2032, uptime 1:44:35<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 2196, uptime 0:00:50<br></code></pre></td></tr></table></figure><h4 id="3-3-6-安装部署启动检查所有集群规划主机"><a href="#3-3-6-安装部署启动检查所有集群规划主机" class="headerlink" title="3.3.6.安装部署启动检查所有集群规划主机"></a>3.3.6.安装部署启动检查所有集群规划主机</h4><ul><li><input disabled="" type="checkbox"> <strong>hdss7-22.host.com 跟上述基本相同</strong><br>/etc/supervisord.d/ kube-conntroller-manager.ini<br>需要更改成[program:kube-conntroller-manager-7-22]</li></ul><h3 id="3-4-部署kube-scheduler"><a href="#3-4-部署kube-scheduler" class="headerlink" title="3.4.部署kube-scheduler"></a>3.4.部署kube-scheduler</h3><h4 id="3-4-1-集群规划"><a href="#3-4-1-集群规划" class="headerlink" title="3.4.1.集群规划"></a>3.4.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-scheduler</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kube-scheduler</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以hdss7-21为例，另一运算节点类似</strong></p><h4 id="3-4-2-创建启动脚本"><a href="#3-4-2-创建启动脚本" class="headerlink" title="3.4.2.创建启动脚本"></a>3.4.2.创建启动脚本</h4><p><strong>hdss7-21上</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-scheduler.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kube-scheduler \<br>  --leader-elect  \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-scheduler \<br>  --master http:<span class="hljs-comment">//127.0.0.1:8080 \</span><br>  --v <span class="hljs-number">2</span><br>  <br>  <br>  <br>  <span class="hljs-comment">//如果主控节点组件在不同的地方，是需要证书验证的，实验环境是在一个宿主机，所以这里无需证书</span><br></code></pre></td></tr></table></figure><h4 id="3-4-3-调整文件权限，创建目录"><a href="#3-4-3-调整文件权限，创建目录" class="headerlink" title="3.4.3.调整文件权限，创建目录"></a>3.4.3.调整文件权限，创建目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x  <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-scheduler.sh<br>[root@hdss7-<span class="hljs-number">21</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-scheduler<br></code></pre></td></tr></table></figure><h4 id="3-4-4-创建supervisor配置"><a href="#3-4-4-创建supervisor配置" class="headerlink" title="3.4.4.创建supervisor配置"></a>3.4.4.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-scheduler.ini</span><br><span class="hljs-section">[program:kube-scheduler-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-scheduler.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                               <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                     <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                           <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                         <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                             <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                           <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                            <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                          <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                          <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                                <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                     <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-scheduler/scheduler.stdout.log <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                             <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                                 <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                              <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                              <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-4-5-启动服务并检查"><a href="#3-4-5-启动服务并检查" class="headerlink" title="3.4.5.启动服务并检查"></a>3.4.5.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 1716, uptime 4:11:22<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2032, uptime 2:11:36<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2196, uptime 0:27:51<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2284, uptime 0:00:33<br></code></pre></td></tr></table></figure><h4 id="3-4-6-安装部署启动检查所有集群规划主机"><a href="#3-4-6-安装部署启动检查所有集群规划主机" class="headerlink" title="3.4.6.安装部署启动检查所有集群规划主机"></a>3.4.6.安装部署启动检查所有集群规划主机</h4>            <input type="checkbox" disabled checked="checked">hdss7-22.host.com跟上述基本相同          <p>  /etc/supervisord.d/ kube-scheduler.ini<br>  需要更改成[program:kube-scheduler-7-22]</p><h3 id="3-5-检查主控节点"><a href="#3-5-检查主控节点" class="headerlink" title="3.5.检查主控节点"></a>3.5.检查主控节点</h3><h4 id="3-5-1-建立kubectl软链接"><a href="#3-5-1-建立kubectl软链接" class="headerlink" title="3.5.1.建立kubectl软链接"></a>3.5.1.建立kubectl软链接</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> bin]#  ln -s <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/kubectl /u</span>sr<span class="hljs-regexp">/bin/</span>kubectl<br></code></pre></td></tr></table></figure><h4 id="3-5-2-检查主控节点"><a href="#3-5-2-检查主控节点" class="headerlink" title="3.5.2.检查主控节点"></a>3.5.2.检查主控节点</h4><h5 id="检查集群健康状态-cs（cluster-status）"><a href="#检查集群健康状态-cs（cluster-status）" class="headerlink" title="检查集群健康状态 cs（cluster status）"></a>检查集群健康状态 cs（cluster status）</h5><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs puppet">[root@hdss7-21 bin]<span class="hljs-comment"># kubectl get cs</span><br>NAME                 STATUS    MESSAGE              ERROR<br>controller-manager   Healthy   ok                   <br>scheduler            Healthy   ok                   <br>etcd-2               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br><span class="hljs-keyword">etcd</span>-0               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br><span class="hljs-keyword">etcd</span>-1               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125; <br></code></pre></td></tr></table></figure><h2 id="4-部署node节点服务"><a href="#4-部署node节点服务" class="headerlink" title="4.部署node节点服务"></a>4.部署node节点服务</h2><h3 id="4-1-部署kubelet"><a href="#4-1-部署kubelet" class="headerlink" title="4.1.部署kubelet"></a>4.1.部署kubelet</h3><h4 id="4-1-1-集群规划"><a href="#4-1-1-集群规划" class="headerlink" title="4.1.1.集群规划"></a>4.1.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kubelet</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kubelet</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以 hdss7-21主机为例，另外一台运算节点安装部署方法类似</strong></p><h4 id="4-1-2-签发kubelet证书"><a href="#4-1-2-签发kubelet证书" class="headerlink" title="4.1.2.签发kubelet证书"></a>4.1.2.签发kubelet证书</h4><ul><li><input disabled="" type="checkbox"> <strong>运维主机hdss7-200上</strong></li></ul><h5 id="4-1-2-1-创建生成证书签名请求（csr）的json配置文件"><a href="#4-1-2-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="4.1.2.1.创建生成证书签名请求（csr）的json配置文件"></a>4.1.2.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]# vi kubelet-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-kubelet&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.10&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.22&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.23&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.24&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.25&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.26&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.27&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.28&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-2-2-生成kubelet证书和私钥"><a href="#4-1-2-2-生成kubelet证书和私钥" class="headerlink" title="4.1.2.2.生成kubelet证书和私钥"></a>4.1.2.2.生成kubelet证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=server kubelet-csr.json | cfssl-json -bare kubelet<br></code></pre></td></tr></table></figure><h5 id="4-1-2-3-检查生成的证书和私钥"><a href="#4-1-2-3-检查生成的证书和私钥" class="headerlink" title="4.1.2.3.检查生成的证书和私钥"></a>4.1.2.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 84<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1115 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 452 </span>Nov<span class="hljs-number"> 16 </span>21:59 kubelet-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1468 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet.pem<br></code></pre></td></tr></table></figure><h4 id="4-1-3-拷贝证书到各运算节点，并创建配置"><a href="#4-1-3-拷贝证书到各运算节点，并创建配置" class="headerlink" title="4.1.3.拷贝证书到各运算节点，并创建配置"></a>4.1.3.拷贝证书到各运算节点，并创建配置</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com 上          <h5 id="4-1-3-1-拷贝证书，私钥，注意私钥文件属性600"><a href="#4-1-3-1-拷贝证书，私钥，注意私钥文件属性600" class="headerlink" title="4.1.3.1.拷贝证书，私钥，注意私钥文件属性600"></a>4.1.3.1.拷贝证书，私钥，注意私钥文件属性600</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kubelet.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kubelet-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># ll</span><br>total 32<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:11 apiserver-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1598 </span>Nov<span class="hljs-number"> 17 </span>02:08 apiserver.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:07 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 17 </span>02:06 ca.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:08 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 17 </span>02:07 client.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>06:12 kubelet-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1468 </span>Nov<span class="hljs-number"> 17 </span>06:11 kubelet.pem<br></code></pre></td></tr></table></figure><h5 id="4-1-3-2-创建配置—分四步"><a href="#4-1-3-2-创建配置—分四步" class="headerlink" title="4.1.3.2.创建配置—分四步"></a>4.1.3.2.创建配置—分四步</h5>            <input type="checkbox" disabled checked="checked">都在conf目录下          <h6 id="4-1-3-2-1-set-cluster"><a href="#4-1-3-2-1-set-cluster" class="headerlink" title="4.1.3.2.1.set-cluster"></a>4.1.3.2.1.set-cluster</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-cluster myk8s \</span><br>--certificate-authority=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>ca.pem \<br>--embed-certs=true \<br>--server=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>:<span class="hljs-number">7443</span> \<br>--kubeconfig=kubelet.kubeconfig<br><br>返回结果：<br>Cluster <span class="hljs-string">&quot;myk8s&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-2-set-credentials"><a href="#4-1-3-2-2-set-credentials" class="headerlink" title="4.1.3.2.2.set-credentials"></a>4.1.3.2.2.set-credentials</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-credentials k8s-node \</span><br>--client-certificate=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>client.pem \<br>--client-key=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>client-key.pem \<br>--embed-certs=true \<br>--kubeconfig=kubelet.kubeconfig <br><br>返回结果：<br>User <span class="hljs-string">&quot;k8s-node&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-3-set-context"><a href="#4-1-3-2-3-set-context" class="headerlink" title="4.1.3.2.3.set-context"></a>4.1.3.2.3.set-context</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-21 conf]# kubectl<span class="hljs-built_in"> config </span>set-context myk8s-context \<br><span class="hljs-attribute">--cluster</span>=myk8s \<br><span class="hljs-attribute">--user</span>=k8s-node \<br><span class="hljs-attribute">--kubeconfig</span>=kubelet.kubeconfig<br><br>返回结果：<br>Context <span class="hljs-string">&quot;myk8s-context&quot;</span> created.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-4-use-context"><a href="#4-1-3-2-4-use-context" class="headerlink" title="4.1.3.2.4.use-context"></a>4.1.3.2.4.use-context</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">[root@hdss7-<span class="hljs-number">21</span> conf]# kubectl config <span class="hljs-keyword">use</span>-<span class="hljs-keyword">context</span> myk8s-<span class="hljs-keyword">context</span> <span class="hljs-comment">--kubeconfig=kubelet.kubeconfig</span><br><br>返回结果：<br>Switched <span class="hljs-keyword">to</span> <span class="hljs-keyword">context</span> <span class="hljs-string">&quot;myk8s-context&quot;</span>.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-5-查看生成的kubelet-kubeconfig"><a href="#4-1-3-2-5-查看生成的kubelet-kubeconfig" class="headerlink" title="4.1.3.2.5.查看生成的kubelet.kubeconfig"></a>4.1.3.2.5.查看生成的kubelet.kubeconfig</h6><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 conf]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 2223 </span>Nov<span class="hljs-number"> 17 </span>02:18 audit.yaml<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 6199 </span>Nov<span class="hljs-number"> 17 </span>06:32 kubelet.kubeconfig<br></code></pre></td></tr></table></figure><p><strong>cat下面的这段实际上就是ca.pem 经过base64编译以后的编码</strong></p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code1.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code2.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code3.png"></div></div></div><h6 id="4-1-3-2-6-k8s-node-yaml"><a href="#4-1-3-2-6-k8s-node-yaml" class="headerlink" title="4.1.3.2.6.k8s-node.yaml"></a>4.1.3.2.6.k8s-node.yaml</h6><p><strong>1、创建配置文件</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">conf</span>]<span class="hljs-comment"># vi k8s-node.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">k8s-node</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">system:node</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">User</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">k8s-node</span><br></code></pre></td></tr></table></figure><p><strong>2、根据配置文件创建用户</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl create -f k8s-node.yaml            //-f 指定配置文件</span><br>clusterrolebinding.rbac.authorization.k8s.io/k8s-<span class="hljs-keyword">node</span> <span class="hljs-title">created</span>    //创建角色后会存到etcd里<br></code></pre></td></tr></table></figure><p><strong>3、查询集群角色和查看角色属性</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl get clusterrolebinding k8s-node</span><br>NAME       AGE<br>k8s-<span class="hljs-keyword">node</span>   <span class="hljs-title">7m54s</span><br><br>[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl get clusterrolebinding k8s-node -o yaml</span><br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding                       //定义了一个集群绑定资源，k8s一切皆资源<br>metadata:<br>  creationTimestamp: <span class="hljs-string">&quot;2019-11-16T22:53:06Z&quot;</span><br>  name: k8s-<span class="hljs-keyword">node</span>                                <span class="hljs-title">//资源的名称为k8s-node</span><br>  resourceVersion: <span class="hljs-string">&quot;11262&quot;</span><br>  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/k8s-<span class="hljs-keyword">node</span><span class="hljs-title"></span><br><span class="hljs-title">  uid</span>: <span class="hljs-number">2</span>b87d554-de37-<span class="hljs-number">494</span>d-b6dd-<span class="hljs-number">7</span>c5d0ecdd5d6<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: system:<span class="hljs-keyword">node</span>                                  <span class="hljs-title">//给k8s-node</span>集群用户绑定了一个集群角色，叫system：<span class="hljs-keyword">node</span><span class="hljs-title">，意思是让下面k8s-node</span>用户具备这个集群里运算节点的权限<br>subjects:<br>- apiGroup: rbac.authorization.k8s.io<br>  kind: User<br>  name: k8s-<span class="hljs-keyword">node</span>                                 <span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p><strong>4、拷贝kubelet.kubeconfig 到hdss7-22上</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-22 conf]<span class="hljs-comment"># scp hdss7-21:/opt/kubernetes/server/bin/conf/kubelet.kubeconfig .</span><br>[root@hdss7-22 conf]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 2223 </span>Nov<span class="hljs-number"> 16 </span>18:48 audit.yaml<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 6199 </span>Nov<span class="hljs-number"> 16 </span>23:14 kubelet.kubeconfig<br></code></pre></td></tr></table></figure><h4 id="4-1-4-准备pause基础镜像"><a href="#4-1-4-准备pause基础镜像" class="headerlink" title="4.1.4.准备pause基础镜像"></a>4.1.4.准备pause基础镜像</h4>            <input type="checkbox" disabled checked="checked">运维主机 hdss7-200.host.com上          <p><strong>为什么需要这个pause基础镜像？</strong><br>原因：需要用一个pause基础镜像把这台机器的pod拉起来，因为kubelet是干活的节点，它帮我们调度docker引擎，边车模式，让kebelet控制一个小镜像，先于我们的业务容器起来，让它帮我们业务容器去设置：UTC、NET、IPC，让它先把命名空间占上，业务容易还没起来的时候，pod的ip已经分配出来了。</p><h5 id="4-1-4-1-下载pause镜像"><a href="#4-1-4-1-下载pause镜像" class="headerlink" title="4.1.4.1.下载pause镜像"></a>4.1.4.1.下载pause镜像</h5>            <input type="checkbox" disabled checked="checked">运维主机 hdss7-200.host.com上          <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> ~]# docker pull kubernetes/pause<br>Using default <span class="hljs-keyword">ta</span><span class="hljs-variable">g:</span> latest<br>lates<span class="hljs-variable">t:</span> Pulling from kubernetes/pause<br><span class="hljs-number">4</span>f4fb700ef54: Pull <span class="hljs-built_in">complete</span> <br>b9c8ec465f6<span class="hljs-variable">b:</span> Pull <span class="hljs-built_in">complete</span> <br>Diges<span class="hljs-variable">t:</span> <span class="hljs-built_in">sha256</span>:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105<br>Statu<span class="hljs-variable">s:</span> Downloaded newer image <span class="hljs-keyword">for</span> kubernetes/pause:latest<br>docker.io/kubernetes/pause:latest<br></code></pre></td></tr></table></figure><h5 id="4-1-4-2-提交至docker私有仓库（harbor）中"><a href="#4-1-4-2-提交至docker私有仓库（harbor）中" class="headerlink" title="4.1.4.2.提交至docker私有仓库（harbor）中"></a>4.1.4.2.提交至docker私有仓库（harbor）中</h5><h6 id="4-1-4-2-1-给镜像打tag"><a href="#4-1-4-2-1-给镜像打tag" class="headerlink" title="4.1.4.2.1.给镜像打tag"></a>4.1.4.2.1.给镜像打tag</h6><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">200</span> ~]<span class="hljs-comment"># docker tag f9d5de079539 harbor.od.com/public/pause:latest</span><br>[root@hdss7-<span class="hljs-number">200</span> ~]<span class="hljs-comment"># docker images -a</span><br>REPOSITORY                      <span class="hljs-keyword">TAG</span>                        <span class="hljs-title">IMAGE</span> ID            CREATED             SIZE<br>...                                                                     <br>kubernetes/pause                latest                     f9d5de079539        <span class="hljs-number">5</span> years ago         <span class="hljs-number">240</span>kB<br>harbor.od.com/public/pause      latest                     f9d5de079539        <span class="hljs-number">5</span> years ago         <span class="hljs-number">240</span>kB<br></code></pre></td></tr></table></figure><h6 id="4-1-4-2-2-推到harbor上"><a href="#4-1-4-2-2-推到harbor上" class="headerlink" title="4.1.4.2.2.推到harbor上"></a>4.1.4.2.2.推到harbor上</h6><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">200</span> ~]# docker <span class="hljs-keyword">push</span> harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest<br>The <span class="hljs-keyword">push</span> refers to repository [harbor.od.com<span class="hljs-regexp">/public/</span>pause]<br><span class="hljs-number">5</span>f70bf18a086: Mounted <span class="hljs-keyword">from</span> <span class="hljs-keyword">public</span>/nginx <br>e16a89738269: Pushed <br>latest: digest: sha256:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105 <span class="hljs-keyword">size</span>: <span class="hljs-number">938</span><br></code></pre></td></tr></table></figure><h4 id="4-1-5-创建kubelet启动脚本"><a href="#4-1-5-创建kubelet启动脚本" class="headerlink" title="4.1.5.创建kubelet启动脚本"></a>4.1.5.创建kubelet启动脚本</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> conf]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kubelet.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kubelet \<br>  --anonymous-auth=<span class="hljs-keyword">false</span> \<br>  --cgroup-driver systemd \<br>  --cluster-dns <span class="hljs-number">192.168</span>.<span class="hljs-number">0.2</span> \<br>  --cluster-domain cluster.local \<br>  --<span class="hljs-keyword">runtime</span>-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --kubelet-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --fail-swap-on=<span class="hljs-string">&quot;false&quot;</span> \<br>  --client-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --tls-cert-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet.pem \<br>  --tls-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet-key.pem \<br>  --hostname-override hdss7-<span class="hljs-number">21</span>.host.com \<br>  --image-gc-high-threshold <span class="hljs-number">20</span> \<br>  --image-gc-low-threshold <span class="hljs-number">10</span> \<br>  --kubeconfig .<span class="hljs-regexp">/conf/</span>kubelet.kubeconfig \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet \<br>  --pod-infra-container-image harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest \<br>  --root-dir <span class="hljs-regexp">/data/</span>kubelet<br>  <br>  ###################参数说明############<br>    --anonymous-auth=<span class="hljs-keyword">false</span> \                                  <span class="hljs-comment">//匿名登陆，这里不允许</span><br>  --cgroup-driver systemd \                                    <span class="hljs-comment">//这里和docker的daemon.json保持一直</span><br>  --cluster-dns <span class="hljs-number">192.168</span>.<span class="hljs-number">0.2</span> \                                   <br>  --cluster-domain cluster.local \<br>  --<span class="hljs-keyword">runtime</span>-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --kubelet-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --fail-swap-on=<span class="hljs-string">&quot;false&quot;</span> \                                  <span class="hljs-comment">//正常是关闭swap分区的。这里不关，没有关闭swap分区正常启动，没有报错</span><br>  --client-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --tls-cert-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet.pem \<br>  --tls-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet-key.pem \<br>  --hostname-override hdss7-<span class="hljs-number">21</span>.host.com \           <br>  --image-gc-high-threshold <span class="hljs-number">20</span> \<br>  --image-gc-low-threshold <span class="hljs-number">10</span> \<br>  --kubeconfig .<span class="hljs-regexp">/conf/</span>kubelet.kubeconfig \          <br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet \<br>  --pod-infra-container-image harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest \<br>  --root-dir <span class="hljs-regexp">/data/</span>kubelet<br></code></pre></td></tr></table></figure><p><strong>注意：kubelet集群个主机的启动脚本略不同，其他节点注意修改：–hostname-override</strong></p><h4 id="4-1-6-检查配置，权限，创建日志目录"><a href="#4-1-6-检查配置，权限，创建日志目录" class="headerlink" title="4.1.6.检查配置，权限，创建日志目录"></a>4.1.6.检查配置，权限，创建日志目录</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> conf]# ls -l|<span class="hljs-keyword">grep</span> kubelet<br>-rw------- <span class="hljs-number">1</span> root root <span class="hljs-number">6199</span> Nov <span class="hljs-number">17</span> <span class="hljs-number">06</span>:<span class="hljs-number">32</span> kubelet.kubeconfig<br><br>[root@hdss7-<span class="hljs-number">21</span> conf]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kubelet.sh <br>[root@hdss7-<span class="hljs-number">21</span> conf]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet   <span class="hljs-regexp">/data/</span>kubelet<br></code></pre></td></tr></table></figure><h4 id="4-1-7-创建supervisor配置"><a href="#4-1-7-创建supervisor配置" class="headerlink" title="4.1.7.创建supervisor配置"></a>4.1.7.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 conf]</span><span class="hljs-comment">#  vi /etc/supervisord.d/kube-kubelet.ini</span><br><span class="hljs-section">[program:kube-kubelet-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kubelet.sh     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                        <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin              <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                    <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                  <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                      <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                    <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                     <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                   <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                   <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                         <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                              <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-kubelet/kubelet.stdout.log   <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                      <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                          <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                       <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                       <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><p><strong>注意：其他主机部署时请注意修改program标签</strong></p><h4 id="4-1-8-启动服务并检查"><a href="#4-1-8-启动服务并检查" class="headerlink" title="4.1.8.启动服务并检查"></a>4.1.8.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> conf]# supervisorctl  update<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 3270, uptime 0:00:46<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3273, uptime 0:00:46<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 3267, uptime 0:00:46<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                RUNNING   pid 3268, uptime 0:00:46<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3269, uptime 0:00:46<br><br>遇到一个问题，没起来：<br>查看日志原来是我的docker服务没起，systemctl  start docker    systemctl enable docker<br></code></pre></td></tr></table></figure><h4 id="4-1-9-检查运算节点"><a href="#4-1-9-检查运算节点" class="headerlink" title="4.1.9.检查运算节点"></a>4.1.9.检查运算节点</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-21</span> bin]# tailf /data/logs/kubernetes/kube-kubelet/kubelet.stdout.<span class="hljs-keyword">log</span> <br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.074479</span>    <span class="hljs-number">3272</span> kubelet_node_status.go:<span class="hljs-number">72</span>] Attempting <span class="hljs-keyword">to</span> register node hdss7<span class="hljs-number">-21.</span>host.com<br>E1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.088198</span>    <span class="hljs-number">3272</span> kubelet.go:<span class="hljs-number">2248</span>] node &quot;hdss7-21.host.com&quot; <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span><br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.088590</span>    <span class="hljs-number">3272</span> kubelet_node_status.go:<span class="hljs-number">75</span>] Successfully registered node hdss7<span class="hljs-number">-21.</span>host.com<br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.119351</span>    <span class="hljs-number">3272</span> cpu_manager.go:<span class="hljs-number">155</span>] [cpumanager] starting <span class="hljs-keyword">with</span> <span class="hljs-keyword">none</span> <span class="hljs-keyword">policy</span><br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.119363</span>    <span class="hljs-number">3272</span> cpu_manager.go:<span class="hljs-number">156</span>] [cpumanager] reconciling every <span class="hljs-number">10</span>s<br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.119382</span>    <span class="hljs-number">3272</span> policy_none.go:<span class="hljs-number">42</span>] [cpumanager] <span class="hljs-keyword">none</span> <span class="hljs-keyword">policy</span>: <span class="hljs-keyword">Start</span><br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.155413</span>    <span class="hljs-number">3272</span> kubelet.go:<span class="hljs-number">1822</span>] skipping pod synchronization - container runtime status <span class="hljs-keyword">check</span> may <span class="hljs-keyword">not</span> have completed yet<br>W1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.374787</span>    <span class="hljs-number">3272</span> manager.go:<span class="hljs-number">546</span>] Failed <span class="hljs-keyword">to</span> retrieve <span class="hljs-keyword">checkpoint</span> <span class="hljs-keyword">for</span> &quot;kubelet_internal_checkpoint&quot;: <span class="hljs-keyword">checkpoint</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span><br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.375126</span>    <span class="hljs-number">3272</span> plugin_manager.go:<span class="hljs-number">116</span>] Starting Kubelet Plugin Manager<br>I1117 <span class="hljs-number">08</span>:<span class="hljs-number">24</span>:<span class="hljs-number">38.690595</span>    <span class="hljs-number">3272</span> reconciler.go:<span class="hljs-number">150</span>] Reconciler: <span class="hljs-keyword">start</span> <span class="hljs-keyword">to</span> sync state<br></code></pre></td></tr></table></figure><h4 id="4-1-10-安装部署启动检查所有集群规划主机"><a href="#4-1-10-安装部署启动检查所有集群规划主机" class="headerlink" title="4.1.10.安装部署启动检查所有集群规划主机"></a>4.1.10.安装部署启动检查所有集群规划主机</h4><p><strong>其他节点类似，有些需要稍许调整，上面有标注：</strong><br>/opt/kubernetes/server/bin/conf/kubelet.kubeconfig<br>/opt/kubernetes/server/bin/kubelet.sh<br>/etc/supervisord.d/kube-kubelet.ini</p><h4 id="4-1-11-检查所有运算节点"><a href="#4-1-11-检查所有运算节点" class="headerlink" title="4.1.11.检查所有运算节点"></a>4.1.11.检查所有运算节点</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES    AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br><br>// 角色是none，打个标签，标签是特色管理功能之一<br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl label node hdss7-21.host.com node-role.kubernetes.io/master=</span><br><span class="hljs-keyword">node</span><span class="hljs-title">/hdss7-21</span>.host.com labeled<br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES    AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-keyword">master</span>   <span class="hljs-title">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl label node hdss7-21.host.com node-role.kubernetes.io/node=</span><br><span class="hljs-keyword">node</span><span class="hljs-title">/hdss7-21</span>.host.com labeled<br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES         AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>        <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br></code></pre></td></tr></table></figure><h3 id="4-2-部署kube-proxy"><a href="#4-2-部署kube-proxy" class="headerlink" title="4.2.部署kube-proxy"></a>4.2.部署kube-proxy</h3><p><strong>联结pod网络和集群网络</strong></p><h4 id="4-2-1-集群规划"><a href="#4-2-1-集群规划" class="headerlink" title="4.2.1.集群规划"></a>4.2.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-proxy</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kube-proxy</td><td>10.4.7.21</td></tr></tbody></table><p><strong>注意：这里部署以hdss7-21主机为例，其他运算节点类似</strong></p><h4 id="4-2-2-签发kube-proxy证书"><a href="#4-2-2-签发kube-proxy证书" class="headerlink" title="4.2.2.签发kube-proxy证书"></a>4.2.2.签发kube-proxy证书</h4>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com上          <h5 id="4-2-2-1-创建生成证书签名请求（csr）的json配置文件"><a href="#4-2-2-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="4.2.2.1.创建生成证书签名请求（csr）的json配置文件"></a>4.2.2.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-200</span> certs]<span class="hljs-meta"># vi kube-proxy-csr.json</span><br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;system:kube-proxy&quot;</span>,<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-2-2-2-生成kubelet证书和私钥"><a href="#4-2-2-2-生成kubelet证书和私钥" class="headerlink" title="4.2.2.2.生成kubelet证书和私钥"></a>4.2.2.2.生成kubelet证书和私钥</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-200</span> certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json |cfssl-<span class="hljs-type">json</span> -bare kube-proxy-client<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] generate received request<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] received CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] generating key: rsa<span class="hljs-number">-2048</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] encoded CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] signed certificate <span class="hljs-keyword">with</span> <span class="hljs-type">serial</span> number <span class="hljs-number">490532965938220149616881213802710440162344647640</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-built_in">WARNING</span>] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable <span class="hljs-keyword">for</span><br>websites. <span class="hljs-keyword">For</span> more information see the Baseline Requirements <span class="hljs-keyword">for</span> the Issuance <span class="hljs-keyword">and</span> Management<br><span class="hljs-keyword">of</span> Publicly-<span class="hljs-keyword">Trusted</span> Certificates, v<span class="hljs-number">.1</span><span class="hljs-number">.1</span><span class="hljs-number">.6</span>, <span class="hljs-keyword">from</span> the CA/Browser Forum (https://cabforum.org);<br>specifically, section <span class="hljs-number">10.2</span><span class="hljs-number">.3</span> (&quot;Information Requirements&quot;).<br></code></pre></td></tr></table></figure><h5 id="4-2-2-3-检查生成的证书和私钥"><a href="#4-2-2-3-检查生成的证书和私钥" class="headerlink" title="4.2.2.3.检查生成的证书和私钥"></a>4.2.2.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1005 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client.csr<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1675 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1375 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 267 </span>Nov<span class="hljs-number"> 17 </span>00:57 kube-proxy-csr.json<br></code></pre></td></tr></table></figure><h4 id="4-2-3-拷贝证书至各运算节点，并创建配置"><a href="#4-2-3-拷贝证书至各运算节点，并创建配置" class="headerlink" title="4.2.3.拷贝证书至各运算节点，并创建配置"></a>4.2.3.拷贝证书至各运算节点，并创建配置</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <h5 id="4-2-3-1-拷贝证书-私钥，注意私钥文件属性600"><a href="#4-2-3-1-拷贝证书-私钥，注意私钥文件属性600" class="headerlink" title="4.2.3.1.拷贝证书,私钥，注意私钥文件属性600"></a>4.2.3.1.拷贝证书,私钥，注意私钥文件属性600</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kube-proxy-client.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kube-proxy-client-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># ll</span><br>total 40<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1675 </span>Nov<span class="hljs-number"> 17 </span>09:10 kube-proxy-client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1375 </span>Nov<span class="hljs-number"> 17 </span>09:10 kube-proxy-client.pem<br></code></pre></td></tr></table></figure><h5 id="4-2-3-2-创建配置"><a href="#4-2-3-2-创建配置" class="headerlink" title="4.2.3.2.创建配置"></a>4.2.3.2.创建配置</h5><p><strong>注意必须在conf目录下，否则报错</strong></p><h6 id="4-2-3-2-1-set-cluster"><a href="#4-2-3-2-1-set-cluster" class="headerlink" title="4.2.3.2.1.set-cluster"></a>4.2.3.2.1.set-cluster</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-cluster myk8s \</span><br>--certificate-authority=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>ca.pem \<br>--embed-certs=true \<br>--server=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>:<span class="hljs-number">7443</span> \<br>--kubeconfig=kube-proxy.kubeconfig<br><br>返回结果：<br>Cluster <span class="hljs-string">&quot;myk8s&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-2-set-credentials"><a href="#4-2-3-2-2-set-credentials" class="headerlink" title="4.2.3.2.2.set-credentials"></a>4.2.3.2.2.set-credentials</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment">#  kubectl config set-credentials kube-proxy \</span><br>  --client-certificate=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>kube-proxy-client.pem \<br>  --client-key=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>kube-proxy-client-key.pem \<br>  --embed-certs=true \<br>  --kubeconfig=kube-proxy.kubeconfig<br>  <br>  返回结果：<br>  User <span class="hljs-string">&quot;kube-proxy&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-3-set-context"><a href="#4-2-3-2-3-set-context" class="headerlink" title="4.2.3.2.3.set-context"></a>4.2.3.2.3.set-context</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-21 conf]# kubectl<span class="hljs-built_in"> config </span>set-context myk8s-context \<br><span class="hljs-attribute">--cluster</span>=myk8s \<br><span class="hljs-attribute">--user</span>=kube-proxy \<br><span class="hljs-attribute">--kubeconfig</span>=kube-proxy.kubeconfig<br><br>返回结果：<br>Context <span class="hljs-string">&quot;myk8s-context&quot;</span> created.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-4-use-context"><a href="#4-2-3-2-4-use-context" class="headerlink" title="4.2.3.2.4.use-context"></a>4.2.3.2.4.use-context</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">[root@hdss7-<span class="hljs-number">21</span> conf]# kubectl config <span class="hljs-keyword">use</span>-<span class="hljs-keyword">context</span> myk8s-<span class="hljs-keyword">context</span> <span class="hljs-comment">--kubeconfig=kube-proxy.kubeconfig</span><br><br>返回结果<br>Switched <span class="hljs-keyword">to</span> <span class="hljs-keyword">context</span> <span class="hljs-string">&quot;myk8s-context&quot;</span>.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-5-拷贝kube-proxy-kubeconfig-到-hdss7-22的conf目录下"><a href="#4-2-3-2-5-拷贝kube-proxy-kubeconfig-到-hdss7-22的conf目录下" class="headerlink" title="4.2.3.2.5.拷贝kube-proxy.kubeconfig 到 hdss7-22的conf目录下"></a>4.2.3.2.5.拷贝kube-proxy.kubeconfig 到 hdss7-22的conf目录下</h6><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> conf]# scp hdss7-<span class="hljs-number">21</span>:<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/conf/</span>kube-proxy.kubeconfig .<br></code></pre></td></tr></table></figure><h4 id="4-2-4-创建kube-proxy启动脚本"><a href="#4-2-4-创建kube-proxy启动脚本" class="headerlink" title="4.2.4.创建kube-proxy启动脚本"></a>4.2.4.创建kube-proxy启动脚本</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <h5 id="4-2-4-1-加载ipvs模块"><a href="#4-2-4-1-加载ipvs模块" class="headerlink" title="4.2.4.1.加载ipvs模块"></a>4.2.4.1.加载ipvs模块</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# lsmod |<span class="hljs-keyword">grep</span> ip_vs<br>[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/root/i</span>pvs.sh<br>#!<span class="hljs-regexp">/bin/</span>bash<br>ipvs_mods_dir=<span class="hljs-string">&quot;/usr/lib/modules/$(uname -r)/kernel/net/netfilter/ipvs&quot;</span><br><span class="hljs-keyword">for</span> i in $(ls $ipvs_mods_dir|<span class="hljs-keyword">grep</span> -o <span class="hljs-string">&quot;^[^.]*&quot;</span>)<br><span class="hljs-keyword">do</span><br>  <span class="hljs-regexp">/sbin/m</span>odinfo -F filename $i &amp;&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-keyword">null</span><br>  <span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ];then<br>    <span class="hljs-regexp">/sbin/m</span>odprobe $i<br>  fi<br>done    <br><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x <span class="hljs-regexp">/root/i</span>pvs.sh <br>[root@hdss7-<span class="hljs-number">21</span> bin]# sh <span class="hljs-regexp">/root/i</span>pvs.sh <br><br>[root@hdss7-<span class="hljs-number">21</span> bin]# lsmod |<span class="hljs-keyword">grep</span> ip_vs<br>ip_vs_wrr              <span class="hljs-number">12697</span>  <span class="hljs-number">0</span> <br>ip_vs_wlc              <span class="hljs-number">12519</span>  <span class="hljs-number">0</span> <br>ip_vs_sh               <span class="hljs-number">12688</span>  <span class="hljs-number">0</span> <br>ip_vs_sed              <span class="hljs-number">12519</span>  <span class="hljs-number">0</span> <br>......<br></code></pre></td></tr></table></figure><h5 id="4-2-4-2-创建启动脚本"><a href="#4-2-4-2-创建启动脚本" class="headerlink" title="4.2.4.2.创建启动脚本"></a>4.2.4.2.创建启动脚本</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">[root@hdss7-21 bin]<span class="hljs-comment"># vi /opt/kubernetes/server/bin/kube-proxy.sh</span><br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-string">./kube-proxy</span> \<br>  <span class="hljs-params">--cluster-cidr</span> 172.7.0.0/16 \<br>  <span class="hljs-params">--hostname-override</span> hdss7-21.host.com \<br>  <span class="hljs-params">--proxy-mode=ipvs</span> \<br>  <span class="hljs-params">--ipvs-scheduler=nq</span> \<br>  <span class="hljs-params">--kubeconfig</span> <span class="hljs-string">./conf/kube-proxy.kubeconfig</span><br></code></pre></td></tr></table></figure><h4 id="4-2-5-检查配置，权限，创建日志目录"><a href="#4-2-5-检查配置，权限，创建日志目录" class="headerlink" title="4.2.5.检查配置，权限，创建日志目录"></a>4.2.5.检查配置，权限，创建日志目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> bin]# ls -l <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/conf/</span>|<span class="hljs-keyword">grep</span> kube-proxy<br>-rw------- <span class="hljs-number">1</span> root root <span class="hljs-number">6215</span> Nov <span class="hljs-number">17</span> <span class="hljs-number">01</span>:<span class="hljs-number">22</span> kube-proxy.kubeconfig<br><br>[root@hdss7-<span class="hljs-number">22</span> bin]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-proxy.sh <br>[root@hdss7-<span class="hljs-number">22</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-proxy<br></code></pre></td></tr></table></figure><h4 id="4-2-6-创建supervisor配置"><a href="#4-2-6-创建supervisor配置" class="headerlink" title="4.2.6.创建supervisor配置"></a>4.2.6.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-proxy.ini</span><br><span class="hljs-section">[program:kube-proxy-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-proxy.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                           <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                 <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                       <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                     <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                         <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                       <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                        <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                      <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                      <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                            <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                 <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-proxy/proxy.stdout.log     <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                         <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                             <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                          <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                          <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="4-2-7-启动服务并检查"><a href="#4-2-7-启动服务并检查" class="headerlink" title="4.2.7.启动服务并检查"></a>4.2.7.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 3270, uptime 1:22:21<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3273, uptime 1:22:21<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 3267, uptime 1:22:21<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                RUNNING   pid 3268, uptime 1:22:21<br>kube-proxy<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                  RUNNING   pid 19580, uptime 0:00:31<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3269, uptime 1:22:21<br><br>[root@hdss7<span class="hljs-string">-21</span> bin]# yum install ipvsadm -y<br>[root@hdss7<span class="hljs-string">-21</span> bin]# ipvsadm -Ln<br>IP Virtual Server version 1.2.1 (size=4096)<br>Prot LocalAddress:Port Scheduler Flags<br>  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn<br>TCP  192.168.0.1:443 nq<br>  -&gt; 10.4.7.21:6443               Masq    1      0          0         <br>  -&gt; 10.4.7.22:6443               Masq    1      0          0   <br>  <br>  <br>[root@hdss7<span class="hljs-string">-21</span> bin]# kubectl get svc<br>NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE<br>kubernetes   ClusterIP   192.168.0.1   &lt;none&gt;        443/TCP   7h11m<br></code></pre></td></tr></table></figure><h4 id="4-2-8-安装部署启动检查所有集群规划主机"><a href="#4-2-8-安装部署启动检查所有集群规划主机" class="headerlink" title="4.2.8.安装部署启动检查所有集群规划主机"></a>4.2.8.安装部署启动检查所有集群规划主机</h4><p><strong>hdss7-22 跟上述基本相同</strong><br>/etc/supervisord.d/kube-proxy.ini<br>需要更改成[program:kube-proxy-7-21]</p><p>/opt/kubernetes/server/bin/kube-proxy.sh<br>需要改成 –hostname-override hdss7-22.host.com</p><h2 id="5-验证kubernetes集群"><a href="#5-验证kubernetes集群" class="headerlink" title="5.验证kubernetes集群"></a>5.验证kubernetes集群</h2><h3 id="5-1-在任意一个运算节点，创建一个资源配置清单"><a href="#5-1-在任意一个运算节点，创建一个资源配置清单" class="headerlink" title="5.1.在任意一个运算节点，创建一个资源配置清单"></a>5.1.在任意一个运算节点，创建一个资源配置清单</h3>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vi /root/nginx-ds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">extensions/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-ds</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-ds</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">my-nginx</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.od.com/public/nginx:v1.7.9</span><br>        <span class="hljs-attr">ports:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="5-2-应用资源配置，并检查"><a href="#5-2-应用资源配置，并检查" class="headerlink" title="5.2.应用资源配置，并检查"></a>5.2.应用资源配置，并检查</h3><h4 id="5-2-1-hdss7-21上的操作"><a href="#5-2-1-hdss7-21上的操作" class="headerlink" title="5.2.1.hdss7-21上的操作"></a>5.2.1.hdss7-21上的操作</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-21 bin]# kubectl create -f /root/nginx-ds.yaml<br><br>返回结果：<br>daemonset.extensions/nginx-ds created<br><br><br><br>[root@hdss7-21 bin]# kubectl get pods<br>NAME             READY   STATUS    RESTARTS   AGE<br>nginx-ds-mcvxt   1/1     Running   0          8h<br>nginx-ds-zsnz9   1/1     Running   0          8h<br><br><br>[root@hdss7-21 bin]# kubectl get pods -o wide<br>NAME             READY   STATUS    RESTARTS   AGE   IP           NODE                NOMINATED NODE   READINESS GATES<br>nginx-ds-mcvxt   1/1     Running   0          8h    172.7.21.2   hdss7-21.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>nginx-ds-zsnz9   1/1     Running   0          8h    172.7.22.2   hdss7-22.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br><br>[root@hdss7-21 bin]# curl 172.7.21.2<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Welcome to nginx!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>[root@hdss7-21 bin]# curl 172.7.22.2<br>^C   <br>//curl 不到？<br>原因是跨宿主机，docker容器还不能通信，下篇：flannel解决这个问题<br></code></pre></td></tr></table></figure><h4 id="5-2-2-hdss7-22上的操作"><a href="#5-2-2-hdss7-22上的操作" class="headerlink" title="5.2.2.hdss7-22上的操作"></a>5.2.2.hdss7-22上的操作</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-22 bin]# kubectl get pods -o wide<br>NAME             READY   STATUS    RESTARTS   AGE     IP           NODE                NOMINATED NODE   READINESS GATES<br>nginx-ds-mcvxt   1/1     Running   0          6m45s   172.7.21.2   hdss7-21.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>nginx-ds-zsnz9   1/1     Running   0          6m45s   172.7.22.2   hdss7-22.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>[root@hdss7-22 bin]# curl 172.7.22.2<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Welcome to nginx!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>[root@hdss7-22 bin]# curl 172.7.21.2<br>^C<br>//curl 不到，上述已有解释<br></code></pre></td></tr></table></figure><h4 id="5-2-3-查看kubernetes集群上篇是否搭建好"><a href="#5-2-3-查看kubernetes集群上篇是否搭建好" class="headerlink" title="5.2.3.查看kubernetes集群上篇是否搭建好"></a>5.2.3.查看kubernetes集群上篇是否搭建好</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get cs</span><br>NAME                 STATUS    MESSAGE              ERROR<br>controller-manager   Healthy   ok                   <br>scheduler            Healthy   ok                   <br>etcd-<span class="hljs-number">1</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br>etcd-<span class="hljs-number">2</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br>etcd-<span class="hljs-number">0</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125; <br><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get node</span><br>NAME                STATUS   ROLES         AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">9h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">10h</span>   v1.<span class="hljs-number">15.2</span><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get pods</span><br>NAME             READY   STATUS    RESTARTS   AGE<br>nginx-ds-mcvxt   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">8h</span><br>nginx-ds-zsnz9   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">8h</span><br></code></pre></td></tr></table></figure><h4 id="5-2-4-FAQ"><a href="#5-2-4-FAQ" class="headerlink" title="5.2.4.FAQ:"></a>5.2.4.FAQ:</h4><h5 id="5-2-4-1-：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错"><a href="#5-2-4-1-：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错" class="headerlink" title="5.2.4.1.：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错"></a>5.2.4.1.：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">E1111</span> <span class="hljs-number">12</span>:<span class="hljs-number">27</span>:<span class="hljs-number">38</span>.<span class="hljs-number">031263</span>   <span class="hljs-number">23086</span> server_others.go:<span class="hljs-number">259</span>] can&#x27;t determine whether to use ipvs proxy, error: error getting ipset version, error: executable file not found in $PATH<br><span class="hljs-attribute">W1111</span> <span class="hljs-number">12</span>:<span class="hljs-number">27</span>:<span class="hljs-number">38</span>.<span class="hljs-number">049355</span>   <span class="hljs-number">23086</span> node.go:<span class="hljs-number">113</span>] Failed to retrieve node info: Get https://<span class="hljs-number">10.4.7.10:7443</span>/api/v<span class="hljs-number">1</span>/nodes/hdss<span class="hljs-number">7</span>-<span class="hljs-number">21</span>.host.com: EOF<br><br><span class="hljs-attribute">yum</span> install   ipset  -y，用supervisor重启服务，问题解决<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>K8S</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>k8S</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-SAMBA服务(壹)</title>
    <link href="/posts/7012af2a/"/>
    <url>/posts/7012af2a/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装-Samba-服务，以及基础配置"><a href="#一、安装-Samba-服务，以及基础配置" class="headerlink" title="一、安装 Samba 服务，以及基础配置"></a>一、安装 <code>Samba</code> 服务，以及基础配置</h1><h2 id="Samba"><a href="#Samba" class="headerlink" title="Samba"></a><strong><code>Samba</code></strong></h2><p><code>Samba</code> 基于 <code>SMB/CIFS</code> 协议开发的软件，为不同操作系统提供文件服务和打印服务。<code>Samba</code> 由 <code>smba</code> 和 <code>nmbd</code> 两个守护进程组成，使用服务端和客户端模式。</p><p><code>smbd</code> 进程除了为客户端提供文件共享与打印服务，还负责用户权限验证及锁功能。<code>smbd</code> 默认监听的端口是 <code>TCP</code> 协议的 <code>139</code> 与 <code>445</code> ，<code>Samba</code> 通过 <code>smb</code> 服务启动 <code>smbd</code> 进程。</p><p><code>nmbd</code> 进程提供 <code>NetBIOS</code> 名称服务，类似于 <code>DNS</code> 实现的功能，可以把 <code>Linux</code> 系统共享的工作组名称与其 <code>IP</code> 对应起来，<code>Samba</code> 通过 <code>nmb</code> 服务启动 <code>nmbd</code> 进程，该进程默认使用<code>UDP 137</code>端口</p><p>本地用户验证登录：<code>Linux</code> 账户+ <code>samba</code> 的密码密码在 <code>passdb.tdb</code></p><h2 id="Samba服务端配置步骤："><a href="#Samba服务端配置步骤：" class="headerlink" title="Samba服务端配置步骤："></a>Samba服务端配置步骤：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs routeros">1.基础操作<br>systemctl stop firewalld<br>setenforce 0 &amp;&amp; sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config<br>2.安装samba服务<br>yum -y install samba<br>3.创建共享目录并修改权限<br>mkdir /common<br>chmod 777 /common/<br>4.创建samba用户<br>useradd -s /sbin/nologin zhangsan<br>pdbedit -a zhangsan<br>5.设置samba的配置文件<br>[common]<br>        <span class="hljs-attribute">comment</span>=share #备注信息<br>        <span class="hljs-attribute">path</span>=/common #绝对路径<br>        write <span class="hljs-attribute">list</span>=zhangsan #允许读写的用户，@用户组<br>        <span class="hljs-attribute">browseable</span>=<span class="hljs-literal">yes</span> #共享是否被查看<br>        <span class="hljs-attribute">writable</span>=<span class="hljs-literal">no</span> #只读<br>        create <span class="hljs-attribute">mask</span>=0664<br>        directory <span class="hljs-attribute">mask</span>=0770<br>6.重启samba服务，并开机自启<br>systemctl restart<span class="hljs-built_in"> smb </span>&amp;&amp; systemctl <span class="hljs-builtin-name">enable</span> smb<br></code></pre></td></tr></table></figure><h2 id="Samba客户端配置步骤："><a href="#Samba客户端配置步骤：" class="headerlink" title="Samba客户端配置步骤："></a>Samba客户端配置步骤：</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">客户端登录方式：<br>linux端：<br>smbclient -U 用户名 -L <span class="hljs-regexp">//</span>服务器ip<br>smbclient -U 用户名  <span class="hljs-regexp">//</span>服务器ip/共享名<br>Windows端：<br>\\服务器ip\共享名<br>net use * /del  清除smb登录信息<br><span class="hljs-number">1</span>.在linux客户端上使用yum -y install samba-client 安、装samba客户端<br>[root@localhost ~]<span class="hljs-comment"># yum -y install samba-client</span><br><span class="hljs-number">2</span>.查看指定服务器共享资源<br>[root@Clare ~]<span class="hljs-comment"># smbclient -L //192.168.66.11 -U zhangsan%123456</span><br><span class="hljs-number">3</span>.挂载共享目录并设置开机自动项<br>    mkdir /common<br>    vim <span class="hljs-regexp">/etc/</span>fstab<br><span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">210.130</span><span class="hljs-regexp">/common /</span>common cifs  username=zhangsan,password=<span class="hljs-number">123456</span>,_netdev <span class="hljs-number">0</span> <span class="hljs-number">0</span> <br><br>mount -a<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-链路聚合</title>
    <link href="/posts/a2ef5425/"/>
    <url>/posts/a2ef5425/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>链路聚合：将多个物理端口汇聚在一起，形成一个逻辑端口，以实现流量的负载分担。</p><p>网卡的链路聚合就是将多个网卡绑定在一起，一张网卡损坏，网络依旧运行。</p><p>网卡的链路聚合一般常用的有<code>“bond”“team”</code>两种模式。<code>“bond”</code>最多可以添加两张网卡，<code>“team”</code>最多可以添加八张网卡。</p><h1 id="一、bond"><a href="#一、bond" class="headerlink" title="一、bond"></a>一、<code>bond</code></h1><h2 id="bond-的七种模式："><a href="#bond-的七种模式：" class="headerlink" title="bond 的七种模式："></a><code>bond</code> 的七种模式：</h2><ul><li><code>mode=0(balance-rr)(平衡抡循环策略)</code></li><li><code>mode=1(active-backup)(主-备份策略)</code></li><li><code>mode=2(balance-xor)(平衡策略)</code></li><li><code>mode=3(broadcast)(广播策略)</code></li><li><code>mode=4(802.3ad)(IEEE 802.3ad动态链路聚合)</code></li><li><code>mode=5(balance-tlb)(适配器传输负载均衡)</code></li><li><code>mode=6(balance-alb)(适配器适应性负载均衡)</code></li></ul><h2 id="1、查看目前的网卡的名称和状态"><a href="#1、查看目前的网卡的名称和状态" class="headerlink" title="1、查看目前的网卡的名称和状态"></a>1、查看目前的网卡的名称和状态</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@test ~]# nmcli device status <br>DEVICE <span class="hljs-built_in"> TYPE </span>     STATE     <span class="hljs-built_in"> CONNECTION </span><br>ens32  <span class="hljs-built_in"> ethernet </span> connected  ens32      <br>ens34  <span class="hljs-built_in"> ethernet </span> connected  ens34      <br>ens35  <span class="hljs-built_in"> ethernet </span> connected  ens35      <br>lo      loopback  unmanaged  -- <br></code></pre></td></tr></table></figure><h2 id="2、创建-bond0-端口"><a href="#2、创建-bond0-端口" class="headerlink" title="2、创建 bond0 端口"></a>2、创建 <code>bond0</code> 端口</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection add type bond con-name bond<span class="hljs-number">0</span> ifname bond<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.addresses <span class="hljs-number">172.24.8.10</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway  <span class="hljs-number">172.25.8.254</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="3、将接口-ens34-和-ens35-加入到-bond"><a href="#3、将接口-ens34-和-ens35-加入到-bond" class="headerlink" title="3、将接口 ens34 和 ens35 加入到 bond"></a>3、将接口 <code>ens34</code> 和 <code>ens35</code> 加入到 <code>bond</code></h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens34 con-name bond_port1 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span> <br>nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens35 con-name bond_port2 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span><br></code></pre></td></tr></table></figure><h2 id="4、启动"><a href="#4、启动" class="headerlink" title="4、启动"></a>4、启动</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up bond<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="5、验证"><a href="#5、验证" class="headerlink" title="5、验证"></a>5、验证</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@test ~]</span># ip addr show bond0 <br><span class="hljs-number">5</span>: bond0: &lt;NO-CARRIER,BROADCAST,MULTICAST,MASTER,UP&gt; mtu <span class="hljs-number">1500</span> qdisc noqueue state DOWN group default qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">56</span>:<span class="hljs-number">66</span>:<span class="hljs-number">09</span>:9f:fd:cb brd ff:ff:ff:ff:ff:ff<br>    inet <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">255</span> scope global noprefixroute bond0<br>       valid_lft forever preferred_lft forever<br>       <br><span class="hljs-string">[root@test ~]</span># ip route <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev ens32 proto static metric <span class="hljs-number">100</span> <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">25</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev bond0 proto static metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens32 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">138</span> metric <span class="hljs-number">100</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens34 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">142</span> metric <span class="hljs-number">101</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens35 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">141</span> metric <span class="hljs-number">102</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev bond0 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span> metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.25.8.254</span> dev bond0 proto static scope link metric <span class="hljs-number">300</span><br></code></pre></td></tr></table></figure><h2 id="6、测试"><a href="#6、测试" class="headerlink" title="6、测试"></a>6、测试</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#断开一块网卡进行测试</span><br>[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># ifdown ens34</span><br></code></pre></td></tr></table></figure><h1 id="二、team"><a href="#二、team" class="headerlink" title="二、team"></a>二、<code>team</code></h1><h2 id="1、查看网卡的连接信息"><a href="#1、查看网卡的连接信息" class="headerlink" title="1、查看网卡的连接信息"></a>1、查看网卡的连接信息</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@test ~]# nmcli connection show <br>NAME   UUID                                  TYPE      DEVICE <br>ens32  a4302588<span class="hljs-string">-30</span>ea<span class="hljs-string">-4</span>bc2-a8a8<span class="hljs-string">-00680</span>c2c08d6  ethernet  ens32  <br>ens34  150ea8a5<span class="hljs-string">-78</span>d4<span class="hljs-string">-3495</span>-a62f<span class="hljs-string">-79</span>f12989d4f8  ethernet  ens34  <br>ens35  0f677720<span class="hljs-string">-3221</span><span class="hljs-string">-3</span>a8b-a86d-adec6fcf7b99  ethernet  ens35 <br></code></pre></td></tr></table></figure><h2 id="2、创建-team，名称为-team0"><a href="#2、创建-team，名称为-team0" class="headerlink" title="2、创建 team，名称为 team0"></a>2、创建 <code>team</code>，名称为 <code>team0</code></h2><p>按照下面的语法，用 <code>nmcli</code> 命令为网络组接口创建一个连接。</p><p><code># nmcli con add type team con-name CNAME ifname INAME [config JSON]</code></p><p><code>CNAME</code> 指代连接的名称，<code>INAME</code> 是接口名称，<code>JSON (JavaScript Object Notation)</code> 指定所使用的处理器(<code>runner</code>)。<code>JSON</code> 语法格式如下：</p><p><code>&#39;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;METHOD&quot;&#125;&#125;&#39;</code></p><p>METHOD 是以下的其中一个：<code>broadcast</code>、<code>activebackup</code>、<code>roundrobin</code>、<code>loadbalance</code> 或者 <code>lacp</code>。</p><p>最常见的双网卡绑定模式：<br>      （1） <code>roundrobin</code> - 轮询模式<br>所有链路处于负载均衡状态，这种模式的特点增加了带宽，同时支持容错能力。<br>      （2） <code>activebackup</code> - 主备模式<br>一个网卡处于活动状态，另一个处于备份状态，所有流量都在主链路上处理，当活动网卡 <code>down</code> 掉时，启用备份网卡。</p><p>这里我们创建<code>roundrobin</code>为例</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@test</span> ~]# nmcli con <span class="hljs-keyword">add</span> <span class="hljs-keyword">type</span> team con-name team<span class="hljs-number">0</span> ifname team<span class="hljs-number">0</span> config &#x27;&#123;<span class="hljs-string">&quot;runner&quot;</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;roundrobin&quot;</span>&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure><h2 id="3、设置-team0-的-ip、gateway、dns"><a href="#3、设置-team0-的-ip、gateway、dns" class="headerlink" title="3、设置 team0 的 ip、gateway、dns"></a>3、设置 <code>team0</code> 的 <code>ip</code>、<code>gateway</code>、<code>dns</code></h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.address <span class="hljs-number">172.24.8.11</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway <span class="hljs-number">172.24.8.254</span> <br><span class="hljs-attribute">nmcli</span> connection modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.dns <span class="hljs-number">114.114.114.114</span><br></code></pre></td></tr></table></figure><h2 id="4、设置-team-的属性为-manual"><a href="#4、设置-team-的属性为-manual" class="headerlink" title="4、设置 team 的属性为 manual"></a>4、设置 <code>team</code> 的属性为 <code>manual</code></h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="5、添加网卡-ens34-、ens35-到-team0-中"><a href="#5、添加网卡-ens34-、ens35-到-team0-中" class="headerlink" title="5、添加网卡 ens34 、ens35 到 team0 中"></a>5、添加网卡 <code>ens34</code> 、<code>ens35</code> 到 <code>team0</code> 中</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port1 ifname ens34 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br><br>nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port2 ifname ens35 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br></code></pre></td></tr></table></figure><h2 id="6、启动-team0"><a href="#6、启动-team0" class="headerlink" title="6、启动 team0"></a>6、启动 <code>team0</code></h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up team<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="7、查看-team0-状态"><a href="#7、查看-team0-状态" class="headerlink" title="7、查看 team0 状态"></a>7、查看 <code>team0</code> 状态</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@test</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># teamdctl team0 state view</span><br><span class="hljs-attr">setup:</span><br>  <span class="hljs-attr">runner:</span> <span class="hljs-string">roundrobin</span><br><span class="hljs-attr">ports:</span><br>  <span class="hljs-string">ens34</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br>  <span class="hljs-string">ens35</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>通过以上就完成了通过nmcli创建roundrobin的网络team</p><p>参考内容：<a href="https://blog.csdn.net/ghwzjz/article/details/109468437">https://blog.csdn.net/ghwzjz/article/details/109468437</a></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub搭建博客</title>
    <link href="/posts/ccbc0313/"/>
    <url>/posts/ccbc0313/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h1><blockquote><p>Git官网：<a href="https://git-scm.com/">https://git-scm.com</a></p></blockquote><h1 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h1><blockquote><p>Node.js官网：<a href="https://nodejs.org/">https://nodejs.org</a></p></blockquote><h1 id="三、申请GitHub账号"><a href="#三、申请GitHub账号" class="headerlink" title="三、申请GitHub账号"></a>三、申请GitHub账号</h1><blockquote><p>GitHub官网：<a href="https://github.com/">https://github.com</a></p></blockquote><ul><li><p><strong>申请GitHub账号</strong></p></li><li><p><strong>new repository</strong></p><p>​    <em>您所创建的Repository name必须是：RepositoryName.github.io</em></p></li><li><p><strong>点击Public</strong></p></li><li><p><strong>create Repository</strong></p></li></ul><h1 id="四、安装Hexo"><a href="#四、安装Hexo" class="headerlink" title="四、安装Hexo"></a>四、安装Hexo</h1><blockquote><p>​    Hexo是基于Node.js的静态博客</p></blockquote><ol><li><strong>在电脑新建一个blog文件夹，该文件夹用于存放你的博客文件，然后右键单击选择“Git Bash”</strong></li><li><strong>使用淘宝的NPM镜像，输入以下命令等待安装</strong></li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><ol start="3"><li><strong>使用淘宝NPM安装Hexo</strong></li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-comment">#与原先的npm完全一样，只是命令改为cnpm</span><br>$ cnpm <span class="hljs-keyword">install</span> -g hexo-cli<br>$ cnpm <span class="hljs-keyword">install</span> hexo --save<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>安装完成后，在输入命令，验证是否安装正确</strong></li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo -v<br></code></pre></td></tr></table></figure><ol start="5"><li><strong>本地运行hexo</strong></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> /hexo/<br><span class="hljs-variable">$</span> hexo init<br></code></pre></td></tr></table></figure><ol start="6"><li><strong>安装生成器</strong></li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">$ cnpm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><ol start="7"><li><strong>运行hexo，以后要在本地运行博客只要输入该命令即可</strong></li></ol><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog">#生成静态文件<br>$ hexo <span class="hljs-keyword">generate</span><br>#运行服务器<br>$ hexo server<br></code></pre></td></tr></table></figure><blockquote><p>访问测试：<a href="http://localhost:4000/">http://localhost:4000</a></p></blockquote><h1 id="五、配置SHH-Key"><a href="#五、配置SHH-Key" class="headerlink" title="五、配置SHH Key"></a>五、配置SHH Key</h1><h2 id="1-使用ssh-key"><a href="#1-使用ssh-key" class="headerlink" title="1. 使用ssh key"></a>1. 使用ssh key</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> ~/.ssh<br><span class="hljs-variable">$</span> ssh<span class="hljs-literal">-keygen</span> <span class="hljs-literal">-t</span> rsa <span class="hljs-literal">-C</span> <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>​    接下来一直回车，最终会在你的家目录中.ssh\id_rsa.pub文件，复制里面的内容，打开GitHub主页，进入个人设置→ SSH and GPG keys→New SSH key。</p><p>​    将id_rsa.pub中的内容复制到Key中，Title可以随便写，保存</p><h2 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>ssh -T git<span class="hljs-variable">@github</span>.com<br><br><span class="hljs-comment">#还需要以下配置：</span><br><span class="hljs-variable">$ </span>git config --global user.name <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br><span class="hljs-variable">$ </span>git config -global user.email <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="六、部署到GitHub上"><a href="#六、部署到GitHub上" class="headerlink" title="六、部署到GitHub上"></a>六、部署到GitHub上</h1><p>在你的创建的blog下可以看到_config.yml文件，配置# Deployment这块</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> https:<span class="hljs-comment">//github.com/ButATree/ButATree.github.io.git</span><br><span class="hljs-symbol">  branch:</span> master<br><br><span class="hljs-meta">#安装插件</span><br>$ cnpm install hexo-deployer-git --save<br><span class="hljs-meta">#部署到GitHub</span><br>$ hexo d<br></code></pre></td></tr></table></figure><h1 id="七、hexo常用命令"><a href="#七、hexo常用命令" class="headerlink" title="七、hexo常用命令"></a>七、hexo常用命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> hexo new <span class="hljs-string">&quot;PostName&quot;</span> <span class="hljs-comment">#新建文章</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo new page <span class="hljs-string">&quot;PageName&quot;</span> <span class="hljs-comment">#新建页面</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo generate <span class="hljs-comment">#s生成静态页面到Public目录</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo server <span class="hljs-comment">#开启预览访问端口（默认端口4000）</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo deploy <span class="hljs-comment">#部署到GitHub</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo <span class="hljs-built_in">help</span> <span class="hljs-comment">#帮助</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo version <span class="hljs-comment">#查看hexo的版本</span></span><br><br><span class="hljs-meta">$</span><span class="bash"> hexo s -g <span class="hljs-comment">#生成并本地预览</span></span><br><span class="hljs-meta">$</span><span class="bash"> hexo d -g <span class="hljs-comment">#生成并上传</span></span><br></code></pre></td></tr></table></figure><h1 id="八、主题"><a href="#八、主题" class="headerlink" title="八、主题"></a>八、主题</h1><blockquote><p>Hexo 主题地址：<a href="https://hexo.io/themes">https://hexo.io/themes</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">clon</span> <span class="hljs-string">https://github.com/litten/hexo-theme-yilia.git</span> <span class="hljs-string">themes/yilia</span><br><span class="hljs-comment">#修改_config.yml文件中和theme</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">yilia</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
