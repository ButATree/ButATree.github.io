<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/01/09/Linux-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"/>
    <url>/2021/01/09/Linux-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>链路聚合：将多个物理端口汇聚在一起，形成一个逻辑端口，以实现流量的负载分担。</p><p>网卡的链路聚合就是将多个网卡绑定在一起，一张网卡损坏，网络依旧运行。</p><p>网卡的链路聚合一般常用的有“bond”“team”两种模式。“bond”最多可以添加两张网卡，“team”最多可以添加八张网卡。</p><h1 id="一、bond"><a href="#一、bond" class="headerlink" title="一、bond"></a>一、bond</h1><h2 id="bond的七种模式："><a href="#bond的七种模式：" class="headerlink" title="bond的七种模式："></a>bond的七种模式：</h2><ul><li>mode=0(balance-rr)(平衡抡循环策略)</li><li>mode=1(active-backup)(主-备份策略)</li><li>mode=2(balance-xor)(平衡策略)</li><li>mode=3(broadcast)(广播策略)</li><li>mode=4(802.3ad)(IEEE 802.3ad动态链路聚合)</li><li>mode=5(balance-tlb)(适配器传输负载均衡)</li><li>mode=6(balance-alb)(适配器适应性负载均衡)</li></ul><h2 id="1、查看目前的网卡的名称和状态"><a href="#1、查看目前的网卡的名称和状态" class="headerlink" title="1、查看目前的网卡的名称和状态"></a>1、查看目前的网卡的名称和状态</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@test ~]# nmcli device status <br>DEVICE <span class="hljs-built_in"> TYPE </span>     STATE     <span class="hljs-built_in"> CONNECTION </span><br>ens32  <span class="hljs-built_in"> ethernet </span> connected  ens32      <br>ens34  <span class="hljs-built_in"> ethernet </span> connected  ens34      <br>ens35  <span class="hljs-built_in"> ethernet </span> connected  ens35      <br>lo      loopback  unmanaged  -- <br></code></pre></td></tr></table></figure><h2 id="2、创建bond0端口"><a href="#2、创建bond0端口" class="headerlink" title="2、创建bond0端口"></a>2、创建bond0端口</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection add type bond con-name bond<span class="hljs-number">0</span> ifname bond<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.addresses <span class="hljs-number">172.24.8.10</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway  <span class="hljs-number">172.25.8.254</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="3、将接口ens34和ens35加入到bond"><a href="#3、将接口ens34和ens35加入到bond" class="headerlink" title="3、将接口ens34和ens35加入到bond"></a>3、将接口ens34和ens35加入到bond</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens34 con-name bond_port1 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span> <br>nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens35 con-name bond_port2 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span><br></code></pre></td></tr></table></figure><h2 id="4、启动"><a href="#4、启动" class="headerlink" title="4、启动"></a>4、启动</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up bond<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="5、验证"><a href="#5、验证" class="headerlink" title="5、验证"></a>5、验证</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@test ~]</span># ip addr show bond0 <br><span class="hljs-number">5</span>: bond0: &lt;NO-CARRIER,BROADCAST,MULTICAST,MASTER,UP&gt; mtu <span class="hljs-number">1500</span> qdisc noqueue state DOWN group default qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">56</span>:<span class="hljs-number">66</span>:<span class="hljs-number">09</span>:9f:fd:cb brd ff:ff:ff:ff:ff:ff<br>    inet <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">255</span> scope global noprefixroute bond0<br>       valid_lft forever preferred_lft forever<br>       <br><span class="hljs-string">[root@test ~]</span># ip route <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev ens32 proto static metric <span class="hljs-number">100</span> <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">25</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev bond0 proto static metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens32 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">138</span> metric <span class="hljs-number">100</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens34 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">142</span> metric <span class="hljs-number">101</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens35 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">141</span> metric <span class="hljs-number">102</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev bond0 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span> metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.25.8.254</span> dev bond0 proto static scope link metric <span class="hljs-number">300</span><br></code></pre></td></tr></table></figure><h2 id="6、测试"><a href="#6、测试" class="headerlink" title="6、测试"></a>6、测试</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#断开一块网卡进行测试</span><br>[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># ifdown ens34</span><br></code></pre></td></tr></table></figure><h1 id="二、team"><a href="#二、team" class="headerlink" title="二、team"></a>二、team</h1><h2 id="1、查看网卡的连接信息"><a href="#1、查看网卡的连接信息" class="headerlink" title="1、查看网卡的连接信息"></a>1、查看网卡的连接信息</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@test ~]# nmcli connection show <br>NAME   UUID                                  TYPE      DEVICE <br>ens32  a4302588<span class="hljs-string">-30</span>ea<span class="hljs-string">-4</span>bc2-a8a8<span class="hljs-string">-00680</span>c2c08d6  ethernet  ens32  <br>ens34  150ea8a5<span class="hljs-string">-78</span>d4<span class="hljs-string">-3495</span>-a62f<span class="hljs-string">-79</span>f12989d4f8  ethernet  ens34  <br>ens35  0f677720<span class="hljs-string">-3221</span><span class="hljs-string">-3</span>a8b-a86d-adec6fcf7b99  ethernet  ens35 <br></code></pre></td></tr></table></figure><h2 id="2、创建team，名称为team0"><a href="#2、创建team，名称为team0" class="headerlink" title="2、创建team，名称为team0"></a>2、创建team，名称为team0</h2><p>按照下面的语法，用 nmcli 命令为网络组接口创建一个连接。</p><p># nmcli con add type team con-name CNAME ifname INAME [config JSON]</p><p>CNAME 指代连接的名称，INAME 是接口名称，JSON (JavaScript Object Notation) 指定所使用的处理器(runner)。JSON语法格式如下：</p><p>‘{“runner”:{“name”:”METHOD”}}’</p><p>METHOD 是以下的其中一个：broadcast、activebackup、roundrobin、loadbalance 或者 lacp。</p><p>最常见的双网卡绑定模式：<br>      （1） roundrobin - 轮询模式<br>所有链路处于负载均衡状态，这种模式的特点增加了带宽，同时支持容错能力。<br>      （2） activebackup - 主备模式<br>一个网卡处于活动状态，另一个处于备份状态，所有流量都在主链路上处理，当活动网卡down掉时，启用备份网卡。</p><p>这里我们创建“”roundrobin“为例”</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@test</span> ~]# nmcli con <span class="hljs-keyword">add</span> <span class="hljs-keyword">type</span> team con-name team<span class="hljs-number">0</span> ifname team<span class="hljs-number">0</span> config &#x27;&#123;<span class="hljs-string">&quot;runner&quot;</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;roundrobin&quot;</span>&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure><h2 id="3、设置team0的ip、gateway、dns"><a href="#3、设置team0的ip、gateway、dns" class="headerlink" title="3、设置team0的ip、gateway、dns"></a>3、设置team0的ip、gateway、dns</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.address <span class="hljs-number">172.24.8.11</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway <span class="hljs-number">172.24.8.254</span> <br><span class="hljs-attribute">nmcli</span> connection modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.dns <span class="hljs-number">114.114.114.114</span><br></code></pre></td></tr></table></figure><h2 id="4、设置team的属性为manual"><a href="#4、设置team的属性为manual" class="headerlink" title="4、设置team的属性为manual"></a>4、设置team的属性为manual</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="5、添加网卡ens34、ens35到team0中"><a href="#5、添加网卡ens34、ens35到team0中" class="headerlink" title="5、添加网卡ens34、ens35到team0中"></a>5、添加网卡ens34、ens35到team0中</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port1 ifname ens34 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br><br>nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port2 ifname ens35 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br></code></pre></td></tr></table></figure><h2 id="6、启动team0"><a href="#6、启动team0" class="headerlink" title="6、启动team0"></a>6、启动team0</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up team<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="7、查看team0状态"><a href="#7、查看team0状态" class="headerlink" title="7、查看team0状态"></a>7、查看team0状态</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@test</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># teamdctl team0 state view</span><br><span class="hljs-attr">setup:</span><br>  <span class="hljs-attr">runner:</span> <span class="hljs-string">roundrobin</span><br><span class="hljs-attr">ports:</span><br>  <span class="hljs-string">ens34</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br>  <span class="hljs-string">ens35</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>通过以上就完成了通过nmcli创建roundrobin的网络team</p><p>参考内容：<a href="https://blog.csdn.net/ghwzjz/article/details/109468437">https://blog.csdn.net/ghwzjz/article/details/109468437</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub搭建博客</title>
    <link href="/2021/01/08/Hexo-GitHub-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/01/08/Hexo-GitHub-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h1><blockquote><p>Git官网：<a href="https://git-scm.com/">https://git-scm.com</a></p></blockquote><h1 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h1><blockquote><p>Node.js官网：<a href="https://nodejs.org/">https://nodejs.org</a></p></blockquote><h1 id="三、申请GitHub账号"><a href="#三、申请GitHub账号" class="headerlink" title="三、申请GitHub账号"></a>三、申请GitHub账号</h1><blockquote><p>GitHub官网：<a href="https://github.com/">https://github.com</a></p></blockquote><ul><li><p><strong>申请GitHub账号</strong></p></li><li><p><strong>new repository</strong></p><p>​    <em>您所创建的Repository name必须是：RepositoryName.github.io</em></p></li><li><p><strong>点击Public</strong></p></li><li><p><strong>create Repository</strong></p></li></ul><h1 id="四、安装Hexo"><a href="#四、安装Hexo" class="headerlink" title="四、安装Hexo"></a>四、安装Hexo</h1><blockquote><p>​    Hexo是基于Node.js的静态博客</p></blockquote><ol><li><strong>在电脑新建一个blog文件夹，该文件夹用于存放你的博客文件，然后右键单击选择“Git Bash”</strong></li><li><strong>使用淘宝的NPM镜像，输入以下命令等待安装</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">--registry=https://registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>使用淘宝NPM安装Hexo</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#与原先的npm完全一样，只是命令改为cnpm</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">hexo-cli</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo</span> <span class="hljs-string">--save</span><br></code></pre></td></tr></table></figure><ol start="4"><li><strong>安装完成后，在输入命令，验证是否安装正确</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">-v</span><br></code></pre></td></tr></table></figure><ol start="5"><li><strong>本地运行hexo</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cd</span> <span class="hljs-string">/hexo/</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">init</span><br></code></pre></td></tr></table></figure><ol start="6"><li><strong>安装生成器</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span><br></code></pre></td></tr></table></figure><ol start="7"><li><strong>运行hexo，以后要在本地运行博客只要输入该命令即可</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#生成静态文件</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br><span class="hljs-comment">#运行服务器</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">server</span><br></code></pre></td></tr></table></figure><blockquote><p>访问测试：<a href="http://localhost:4000/">http://localhost:4000</a></p></blockquote><h1 id="五、配置SHH-Key"><a href="#五、配置SHH-Key" class="headerlink" title="五、配置SHH Key"></a>五、配置SHH Key</h1><h2 id="1-使用ssh-key"><a href="#1-使用ssh-key" class="headerlink" title="1. 使用ssh key"></a>1. 使用ssh key</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cd</span> <span class="hljs-string">~/.ssh</span><br><span class="hljs-string">$</span> <span class="hljs-string">ssh-keygen</span> <span class="hljs-string">-t</span> <span class="hljs-string">rsa</span> <span class="hljs-string">-C</span> <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>​    接下来一直回车，最终会在你的家目录中.ssh\id_rsa.pub文件，复制里面的内容，打开GitHub主页，进入个人设置→ SSH and GPG keys→New SSH key。</p><p>​    将id_rsa.pub中的内容复制到Key中，Title可以随便写，保存</p><h2 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">ssh</span> <span class="hljs-string">-T</span> <span class="hljs-string">git@github.com</span><br><br><span class="hljs-comment">#还需要以下配置：</span><br><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">-global</span> <span class="hljs-string">user.email</span> <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="六、部署到GitHub上"><a href="#六、部署到GitHub上" class="headerlink" title="六、部署到GitHub上"></a>六、部署到GitHub上</h1><p>在你的创建的blog下可以看到_config.yml文件，配置# Deployment这块</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/ButATree/ButATree.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br><br><span class="hljs-comment">#安装插件</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo-deployer-git</span> <span class="hljs-string">--save</span><br><span class="hljs-comment">#部署到GitHub</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">d</span><br></code></pre></td></tr></table></figure><h1 id="七、hexo常用命令"><a href="#七、hexo常用命令" class="headerlink" title="七、hexo常用命令"></a>七、hexo常用命令</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">&quot;PostName&quot;</span> <span class="hljs-comment">#新建文章</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">&quot;PageName&quot;</span> <span class="hljs-comment">#新建页面</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span> <span class="hljs-comment">#s生成静态页面到Public目录</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">server</span> <span class="hljs-comment">#开启预览访问端口（默认端口4000）</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">deploy</span> <span class="hljs-comment">#部署到GitHub</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">help</span> <span class="hljs-comment">#帮助</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">version</span> <span class="hljs-comment">#查看hexo的版本</span><br><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">s</span> <span class="hljs-string">-g</span> <span class="hljs-comment">#生成并本地预览</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">d</span> <span class="hljs-string">-g</span> <span class="hljs-comment">#生成并上传</span><br></code></pre></td></tr></table></figure><h1 id="八、主题"><a href="#八、主题" class="headerlink" title="八、主题"></a>八、主题</h1><blockquote><p>Hexo 主题地址：<a href="https://hexo.io/themes">https://hexo.io/themes</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">clon</span> <span class="hljs-string">https://github.com/litten/hexo-theme-yilia.git</span> <span class="hljs-string">themes/yilia</span><br><span class="hljs-comment">#修改_config.yml文件中和theme</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">yilia</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
