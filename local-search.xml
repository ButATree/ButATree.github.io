<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux网络IO流程</title>
    <link href="/2021/03/06/Linux%E7%BD%91%E7%BB%9CIO%E6%B5%81%E7%A8%8B/"/>
    <url>/2021/03/06/Linux%E7%BD%91%E7%BB%9CIO%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Linux-网络-IO-流程"><a href="#一、Linux-网络-IO-流程" class="headerlink" title="一、Linux - 网络 IO 流程"></a>一、<code>Linux</code> - 网络 <code>IO</code> 流程</h1><p>我们访问一个网站，从我们在浏览器上打开输入网址到网页被打开，中间经历的哪些流程？如果网络比较好的情况下，通常在几秒之内就可以打开一个内容非常丰富的网站，但是背后的执行过程是非常复杂的，我们简单对其中的某些过程进行描述。而我们要描述的地方就是服务器网卡接收到用户请求数据开始，如何处理这些请求并将报文响应给用户。</p><p>这个过程我们省略了从用户发起请求一直到请求到达服务端的过程，这中间还涉及到<code>DNS</code>解析、路由查找等技术细节。</p><p>接收数据包是一个复杂的过程，涉及很多底层的技术细节，但大致需要以下几个步骤：</p><ol><li>网卡收到数据包。</li><li>将数据包从网卡硬件缓存转移到服务器内存中。</li><li>通知内核处理。</li><li>经过 <code>TCP/IP</code> 协议逐层处理。</li><li>应用程序通过 <code>read()</code> 从 <code>socket buffer</code> 读取数据。</li></ol><h6>详解：</h6><ol><li>数据包从外面的网络进入物理网卡。如果目的地不是该网卡，并且该网卡没有开启混杂模式，该包会被网卡丢弃。</li><li>网卡通过硬件中断(<code>IRQ</code>)告知 <code>CPU</code> 有数据来了。</li><li><code>CPU</code> 根据中断表，调用已经注册的中断函数，这个中断函数会调用驱动程序中相应的函数对数据进行处理。</li><li>驱动会一个接一个的读取网卡写到内存中的数据包，内存中数据包的格式只有驱动知道。</li><li>驱动程序将内存中的数据包转换成内核网络模块能识别的格式，数据包会被先存入到 <code>CPU</code> 的<code>input_pkt_queue</code> 队列中，如果队列满了数据会被丢弃（注意：我们可以通过调整系统参数 <code>net.core.netdev_max_backlog</code> 来调整队列大小）。</li><li>此时 <code>CPU</code> 从队列中获取数据并调用 <code>Linux</code> 网络协议栈相应的函数，将数据包交给协议栈处理。</li><li>通过协议分析将数据包传给链路层，此时放在该协议栈中的 <code>netfilter</code> 钩子函数（也就是我们通过<code>iptables</code>）设置的一些规则会对数据包进行处理，可以进行修改，也可能会进行丢弃。如果没有丢弃，则会继续交由网络层协议。</li><li>网络层协议对报文进行处理，查看 <code>IP</code> 地址是否为本机，为本机则接收。如果不为本机，要看是否开启了 <code>ip_forward</code> 即 <code>IP 转发功能</code> ，如果开启则进行网络报文转发，如果未开启则丢弃报文。假设报文的目的地址是本机，则会交由传输层协议进行处理，比如 <code>TCP</code> 或者 <code>UDP</code> 等。</li><li>传输层协议会根据数据包中的 <code>IP</code> 和端口来查找相应的 <code>socket</code>，如果没有找到则丢弃该报文，如果找到则将数据放到 <code>socket</code> 的队列中（<strong>这里还涉及到连接的建立，半连接和全连接队列</strong>），然后由操作系统内核通知相关的应用来进行数据读。</li><li>应用层将请求报文打开后，假如请求读取某个文件，则应用会通过系统调用来读取该文件。</li><li>当内核完成数据的处理后，会将数据复制到应用内存中供应用读取（<strong>从内核缓存区拷贝到应用缓冲区</strong>）。应用读取到数据，构建响应包，通过网络协议簇将报文进行封装，通过链路层发送到网卡缓冲区队列中。</li><li>网卡再次通过中断函数调用网卡驱动完成数据的发送。</li></ol><blockquote><p><strong>注意：上述步骤知识进行了简单描述，很多细节均没有提及，同时也省略了很多和协议以及硬件有关的描述.</strong></p></blockquote><p><img src="/img/blog_image/Linux_internetIO/IO.png" alt="1.0 Linux网络数据包的接收过程"></p><h1 id="二、Linux-网络-IO-模型"><a href="#二、Linux-网络-IO-模型" class="headerlink" title="二、Linux 网络 IO 模型"></a>二、<code>Linux</code> 网络 <code>IO</code> 模型</h1><p>上述内容即为 <code>Linux</code> 最简单的网络流程描述，或许你觉得已经很复杂了，但是下面我们介绍的内容只是整个流程中的很小很小一部分。</p><p>即：当 <code>应用</code> 接收到 <code>用户</code> 请求时，如何对请求进行处理，这里就设计到 <code>Linux</code> 网络 <code>IO</code> 模型。先来简单回一下用户空间和内核空间的关系：</p><p><img src="!%5B%5D(/img/blog_image/Linux_internetIO/Space.png" alt="2.0 用户空间和内核空间的关系"></p><ol><li>用户空间（<code>user space</code>）的应用程序通过系统调用让内核处理。</li><li>进入内核空间（<code>kernel space</code>）将数据从硬盘读取到自己的内存缓冲区，拷贝到 <code>user space</code> 的内存缓冲区</li><li><code>user space</code> 对数据进行处理</li></ol><h6>详解:</h6><p>即当用户空间的应用程序需要读写硬盘上的数据时，会通过系统调用的方式让内核去处理，此时进入内核空间，内核去将数据从硬盘读取到自己的内存缓冲区中，然后进行数据的读写处理。将数据准备好之后，会把数据拷贝到应用程序的内存缓冲区，此时进入用户空间由应用程序再对数据进行处理，比如数据封包等。在这里会涉及到两个阶段：</p><ul><li><strong>等待数据准备就绪（<code>Waiting for the data to be ready</code>）</strong></li><li><strong>将数据从内核缓冲区拷贝到进程缓冲区中（<code>Copying the data from the kernel to the process</code>）</strong></li></ul><p>正是因为这两个阶段，Linux系统产生了下面五种网络模式的方案：</p><ul><li><strong>阻塞式IO模型（<code>blocking IO model</code>）</strong></li><li><strong>非阻塞式IO模型（<code>nonblocking IO model</code>）</strong></li><li><strong>IO复用式IO模型（<code>IO multiplexing model</code>）</strong></li><li><strong>信号驱动式IO模型（<code>signal-driven IO model</code>）</strong></li><li><strong>异步IO式IO模型（<code>asynchronous IO model</code>）</strong></li></ul><h4 id="2-1-阻塞式IO模型（blocking-IO-model）"><a href="#2-1-阻塞式IO模型（blocking-IO-model）" class="headerlink" title="2.1 阻塞式IO模型（blocking IO model）"></a>2.1 阻塞式IO模型（<code>blocking IO model</code>）</h4><p>在 <code>Linux</code> 中，默认情况下所有的 <code>IO</code> 操作都是 <code>blocking</code>，一个典型的读操作流程大概是这样:</p><p><img src="/img/blog_image/Linux_internetIO/Blocking.png" alt="2.1 Blocking I/O Model"></p><p>当用户进程调用了 <code>recvfrom</code> 这个系统调用，<code>kernel</code> 就开始了 <code>IO</code> 的第一个阶段：准备数据（对于网络 <code>IO</code> 来说，很多时候数据在一开始还没有到达。比如：还没有收到一个完整的 <code>UDP</code> 包。这个时候 <code>kernel</code> 就要等待足够的数据到来），而数据被拷贝到操作系统内核的缓冲区中是需要一个过程的，这个过程需要等待。此时用户进程会被阻塞（当然，是进程自己选择的阻塞）。当 <code>kernel</code> 一直等到数据准备好了，它就会将数据从 <code>kernel</code> 中拷贝到用户空间的缓冲区以后，然后 <code>kernel</code> 返回结果，用户进程才解除 <code>block</code> 的状态，重新运行起来。</p><p>所以：<code>blocking IO</code>的特点就是在 <code>IO</code> 执行的下两个阶段都被 <code>block</code> 了。</p><ul><li><strong>等待数据准备就绪（<code>waiting for the data to be ready</code>）<code>「阻塞」</code></strong></li><li><strong>将数据从内核拷贝到进程中（<code>Copying the data from the kernel to the process</code>）<code>「阻塞」</code></strong></li></ul><h4 id="2-2-非阻塞I-O（nonblocking-IO）"><a href="#2-2-非阻塞I-O（nonblocking-IO）" class="headerlink" title="2.2 非阻塞I/O（nonblocking IO）"></a>2.2 非阻塞I/O（<code>nonblocking IO</code>）</h4><p>在 <code>Linux</code> 中，可以通过设置 <code>socket</code> 使其变为 <code>non-blocking</code>。</p><p><code>Socket</code> 设置为 <code>NONBLOCK</code> （非阻塞）就是告诉内核，当所有请求的 <code>I/O</code> 操作无法完成时，不要将进程睡眠，而是返回一个错误码（<code>EWOULDBLOCK</code>），这样请求就不会阻塞。当对一个 <code>non-blocking socket</code> 执行读操作时，流程是这个样子：</p><p><img src="/img/blog_image/Linux_internetIO/Non-blocking.png" alt="2.2 Non-Blocking I/O Model"></p><p>当用户进程调用了 <code>recvfrom</code> 这个系统调用，如果 <code>kernel</code> 中的数据还没有准备好，那么它并不会 <code>block</code> 用户进程，而是立刻返回一个 <code>EWOULDBLOCK</code> 错误代码。从用户进程角度讲，它发起一个 <code>read</code> 操作后，并不需要等待，而是马上得到了一个结果。用户进程判断结果是一个 <code>EWOULDBLOCK</code> 时，它就知道数据还没有准备好，此时用户进程可以进行其他操作。一旦 <code>kernel</code> 中的数据准备好了，并且又再次收到了用户进程的 <code>system call</code> ，那么它马上就将数据拷贝到了用户空间缓冲区，然后返回。</p><p>可以看到， <code>I/O</code> 操作函数将不断的测试数据是否已经准备好，如果没有准备好，继续轮询，直到数据准备好为止。整个 <code>I/O</code> 请求的过程中，虽然用户线程每次发起 <code>I/O</code> 请求后可以立即返回，但是为了等到数据，仍需要不断地轮询、重复请求，消耗了大量的 <code>CPU</code> 的资源。</p><p>所以，**<code>non blocking IO</code> 的特点是用户进程需要不断的主动询问 <code>kernel</code> 数据好了没有**：</p><ul><li><strong>等待数据准备就绪（<code>waiting for the data to be ready</code>）<code>非阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（<code>Copying the data from the kernel to the process</code>）<code>阻塞</code></strong></li></ul><p>一般很少直接使用这种模型，而是在其他 <code>I/O</code> 模型中使用非阻塞 <code>I/O</code> 这一特性。这种方式对单个 <code>I/O</code> 请求意义不大，但给 <code>I/O</code> 多路复用铺平了道路。</p><h4 id="2-3-I-O多路复用（I-O-multiplexing）"><a href="#2-3-I-O多路复用（I-O-multiplexing）" class="headerlink" title="2.3 I/O多路复用（I/O multiplexing）"></a>2.3 I/O多路复用（<code>I/O multiplexing</code>）</h4><p><code>IO multiplexing</code>在我们使用中基本这种模型的代表就是常见的<code>select，poll，epoll</code>，有些地方也称这种<code>IO</code>方式为事件驱动模型<code>event driven IO</code>。<code>select/poll/epoll</code>的好处就在于**单个系统<code>process</code>就可以同时处理多个网络连接的<code>IO</code>**。它的基本原理就是<code>select，poll，epool</code>这些个<code>function</code>会不断的轮询所负责的所有<code>socket</code>，当某个<code>socket</code>有数据到达了，就通知用户进程。</p><p><img src="/img/blog_image/Linux_internetIO/Multiple.png" alt="2.3 Multiple I/O Model"></p><p>当用户进程调用了 <code>select</code> ，那么整个进程会被 <code>block</code> ，而同时， <code>kernel</code> 会“监视”所有 <code>select</code> 负责的 <code>socket</code> ，当任何一个 <code>socket</code> 中的数据准备好了，<code>select</code> 就会返回。这个时候用户进程再调用 <code>read</code> 操作，将数据从 <code>kernel</code> 拷贝到用户进程。</p><p>所以，**<code>I/O</code> 多路复用的特点是通过一种机制一个进程能同时等待多个文件描述符，而这些文件描述符（套接字描述符）其中的任意一个进入读就绪状态，<code>select()</code> 函数就可以返回。**</p><p>这个图和 <code>blocking IO</code> 的图其实并没有太大的不同，事实上因为 <code>IO</code> 多路复用多了添加监视 <code>socket</code> ，以及调用 <code>select</code> 函数的额外操作，效率更差。还更差一些，因为这里需要使用两个 <code>system call</code> （<code>select</code>和<code>recvfrom</code>），而 <code>blocking IO</code> 只调用了一个 <code>system call</code> （<code>recvfrom</code>）。但是使用 <code>select</code> 以后最大的优势是用户可以在一个线程内同时处理多个 <code>socket</code> 的 <code>I/O</code> 请求。用户可以注册多个 <code>socket</code> ，然后不断地调用 <code>select</code> 读取被激活的 <code>socket</code> ，即可达到在同一个线程内同时处理多个 <code>I/O</code> 请求的目的。而在同步异阻塞模型中，必须通过多线程的凡是才能达到这个目的。</p><p><strong>所以，如果处理的连接数不是很高的话，使用 <code>select/epool</code> 的 <code>web server</code> 并没有性能优势，可能延迟还要更大。<code>select.epoll</code> 的优势并不是单个连接能处理得更快，而是在于能处理更多的连接</strong></p><p>在 <code>IO multipxing model</code> 中，实际中，对于每一个 <code>socket</code>，一般都设置为 <code>non-blocking</code>，但是，如上图所示，整个用户的 <code>process</code> 其实是一直被 <code>block</code> 的。只不过 <code>process</code> 是被 <code>select</code> 这个函数 <code>block</code>，而不是被 <code>socket IO</code> 给 <code>block</code>。</p><p>因此对于<code>IO</code>多路复用模型来说：</p><ul><li><strong>等待数据准备就绪（Waiting for the data to be ready）<code>阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（Copying the data from the kernel to the process）<code>阻塞</code></strong></li></ul><blockquote><p><strong>对于 <code>select/poll/epoll</code>  可以根据调用时指定的参数不同，而决定是阻塞或者非阻塞.</strong></p></blockquote><h4 id="2-4-信号驱动式IO模型（signal-driven-IO-model）"><a href="#2-4-信号驱动式IO模型（signal-driven-IO-model）" class="headerlink" title="2.4 信号驱动式IO模型（signal-driven IO model）"></a>2.4 信号驱动式IO模型（<code>signal-driven IO model</code>）</h4><p>首先我们运行 <code>socket</code> 进行信号驱动 <code>I/O</code>，并安装一个信号处理函数，进程继续运行并不阻塞。当数据准备好时，进程会收到一个 <code>SIGIO</code> 信号，可以在信号处理函数中调用 <code>I/O</code> 操作函数处理数据。</p><p><img src="/img/blog_image/Linux_internetIO/Signal.png" alt="2.4 Signal I/O Model"></p><h4 id="2-5-异步I-O（asynchronous-IO）"><a href="#2-5-异步I-O（asynchronous-IO）" class="headerlink" title="2.5 异步I/O（asynchronous IO）"></a>2.5 异步I/O（<code>asynchronous IO</code>）</h4><p>接下来我们看看 <code>asynchronous IO</code> 的流程：</p><p><img src="/img/blog_image/Linux_internetIO/Asynchronous.png" alt="2.5 Asynchronous I/O Model"></p><p>用户进程发起 <code>aio_read</code> 调用之后，立刻就可以开始去做其它的事。而另一方面，从 <code>kernel</code> 的角度，当它发现一个 <code>asynchronous read</code> 之后，首先它会立即返回，所以不会对用户进程产生任何 <code>block</code> 。然后，<code>kernel</code> 会等待数据准备完成，然后将数据拷贝到用户内存，当这一切都完成之后，<code>kernel</code> 会给用户进程发送一个 <code>signal</code>，告诉它 <code>read</code> 操作完成了。</p><p>异步 <code>I/O</code> 模型使用了 <code>Proactor</code> 设计模式实现了这一机制。</p><p>因此对异步 <code>IO</code> 模型来说：</p><ul><li><strong>等待数据准备就绪（waiting for the data to be ready）<code>非阻塞</code></strong></li><li><strong>将数据从内核拷贝到进程中（Copying the data from the kernel to the process）<code>非阻塞</code></strong></li></ul><h4 id="2-6-各个-IO-model-的比较"><a href="#2-6-各个-IO-model-的比较" class="headerlink" title="2.6 各个 IO model 的比较"></a>2.6 各个 <code>IO model</code> 的比较</h4><p><img src="/img/blog_image/Linux_internetIO/every-model.png" alt="2.6 各个I/O Model的比较"></p><p>前四种模型的区别是阶段1不相同，阶段2基本相同（都是将数据从内核拷贝到调用者的缓冲区）。而异步<code>I/O</code>的两个阶段都不同于前四个模型。同步 <code>I/O</code> 操作引起请求进程阻塞，直到 <code>I/O</code> 操作完成。异步<code>I/O</code>操作不引起请求进程阻塞。</p><p>同时通过上面的图片，可以发现 <code>non-blocking IO</code> 和 <code>asynchronous IO</code> 的区别还是很明显的。在 <code>non-blocking IO</code> 中，虽然进程大部分时间都不会被 <code>block</code> ，但是它仍然要求进程主动的 <code>check</code>，并且当数据准备完成以后，也需要进程主动的再次调用 <code>recvfrom</code> 来将数据拷贝到用户内存。而 <code>asynchronous IO</code> 则完全不同。它就像是用户进程将整个 <code>IO</code> 操作交给了他人（<code>kernel</code>）完成，然后他人做完后发信号通知。在此期间，用户进程不需要去检查<code>IO</code>操作的状态，也不需要主动的去拷贝数据。</p><p>下面三种 <code>IO</code> 多路复用的对比，可以看到 <code>epool</code> 模型的性能比 <code>select/poll</code> 要高很多。</p><table><thead><tr><th>系统调用</th><th>select</th><th>poll</th><th>epoll</th></tr></thead><tbody><tr><td>操作方式</td><td>遍历</td><td>遍历</td><td>回调</td></tr><tr><td>底层实现</td><td>数组<code>bitmap</code></td><td>链表</td><td>哈希表</td></tr><tr><td>查找就绪<code>fd</code>时间复杂度</td><td>O(n)</td><td>O(n)</td><td>O(1)</td></tr><tr><td>最大支持文件描述符数</td><td>一般有最大值限制</td><td>65535</td><td>65535</td></tr><tr><td>工作模式</td><td>LT水平触发</td><td>LT水平触发</td><td>支持ET高效模式</td></tr><tr><td><code>fd</code>拷贝</td><td>每次调用 <code>select</code> 都需要把<code>fd</code>集合从用户态拷贝到内核态</td><td>每次调用 <code>poll</code> 都需要把<code>fd</code>集合从用户态拷贝到内核态</td><td>使用 <code>map()</code> 文件映射内存来加速与内核空间的消息传递，减少复制开销</td></tr></tbody></table><blockquote><p><strong>水平触发 LT：默认工作模式，即当epoll_wait检测到某描述符事件就绪并通知应用程序时，应用程序可以不立即处理该事件；下次调用epoll_wait时，会再次通知此事件。</strong></p><p><strong>边缘触发 ET：当epoll_wait检测到某描述符事件就绪并通知应用程序时，应用程序必须立即处理该事件。如果不处理，喜爱调用epoll_wait时，不会再次通知此事件。（直到你做了某些操作导致该描述符变成未就绪状态了，也就是说边缘触发只在状态由未就绪变为就绪时通知一次）。</strong></p></blockquote><p>下面是不同网络模型的性能对比：</p><p><img src="/img/blog_image/Linux_internetIO/Libevent_Benchmark.png" alt="2.7 Libevent_Benchmark"></p><blockquote><p>其中 <code>Kqueue</code> 是在 <code>FreeBSD</code> 平台上实现的 <code>I/O</code> 多路复用模型，跟 <code>Linux</code> 上的 <code>Epoll</code> 非常类似。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将GitHub中的Hexo部署到云服务器上（CentOS7）</title>
    <link href="/2021/03/06/%E5%B0%86GitHub%E4%B8%AD%E7%9A%84Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/"/>
    <url>/2021/03/06/%E5%B0%86GitHub%E4%B8%AD%E7%9A%84Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="一、登录云服务器安装-Git-和-Nginx"><a href="#一、登录云服务器安装-Git-和-Nginx" class="headerlink" title="一、登录云服务器安装 Git 和 Nginx"></a>一、登录云服务器安装 <code>Git</code> 和 <code>Nginx</code></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ root ]# yum -y install git nginx<br></code></pre></td></tr></table></figure><h1 id="二、修改默认打开页面"><a href="#二、修改默认打开页面" class="headerlink" title="二、修改默认打开页面"></a>二、修改默认打开页面</h1><p>找到 <code>Nginx</code> 配置文件，我这里是 <code>/etc/nginx/nginx.conf</code> ，记得先备份一下。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 在server段下修改root的目录即可。</span><br>[ root ]#  vim nginx.conf<br>...<br><span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">listen</span>       [::]:<span class="hljs-number">80</span> default_server;<br>        <span class="hljs-attribute">server_name</span>  _;<br>        <span class="hljs-attribute">root</span>         /data/www/hexo;<br>        <span class="hljs-attribute">index</span>        index.html index.htm;<br>&#125;<br>...<br></code></pre></td></tr></table></figure><p>检测配置文件并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> nginx -t</span><br><span class="hljs-meta">#</span><span class="bash"> nginx -s reload</span><br></code></pre></td></tr></table></figure><h1 id="三、创建一个-Git-裸库，保存-Repository"><a href="#三、创建一个-Git-裸库，保存-Repository" class="headerlink" title="三、创建一个 Git 裸库，保存 Repository"></a>三、创建一个 <code>Git</code> 裸库，保存 <code>Repository</code></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ root ]# cd ~<br>[ root ]# git init --bare &#123;你的仓库名称&#125;.git #我的仓库名称: My_repository.git<br></code></pre></td></tr></table></figure><p>使用 <code>Git-Hook</code> 同步网站根目录，这里使用的是 <code>Git</code> 中的 <code>post-receive</code> ，当有 <code>Git</code> 收发的时候会调用该脚本，自动将最新内容同步到网站跟目录中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ root ]# vim My_repository.git/post-receive<br></code></pre></td></tr></table></figure><p>将下面的语句写入文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git --work-tree=/data/www/hexo --git-dir=/data/hexo/My_repository.git checkout -f<br></code></pre></td></tr></table></figure><blockquote><p><code>--work-tree</code> ：博客文件存放目录。</p><p><code>--git-dir</code> ：<code>Git-Hook</code> 同步网站根目录。</p></blockquote><p>保存并赋予执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[ root ]# chmod +x /data/hexo/My_repository.git/hooks/post-receive<br></code></pre></td></tr></table></figure><h1 id="四、本地配置"><a href="#四、本地配置" class="headerlink" title="四、本地配置"></a>四、本地配置</h1><blockquote><p>这里以 <code>Windows</code> 为本地</p></blockquote><p>配置 <code>&quot;_config.yml&quot;</code></p><p>打开位于 <code>Hexo</code> 博客根目录下的 <code>&quot;_config.yml&quot;</code> ，在最后面知道到 <code>&quot;deploy&quot;</code> 并修改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>-  type: git<br>   repository: git@github.com:ButATree/ButATree.github.io.git<br>   branch: master<br>-  type: git<br>   repository: root@你的服务器IP地址:/data/hexo/My_repository.git<br>   branch: master   # 分支<br></code></pre></td></tr></table></figure><blockquote><p>**注意若原来 <code>type: git</code> 前面没有 <code>-</code> 符号，需要手动添加上，不然后面会报错。 </p></blockquote><p>本地 <code>git</code> 软件中执行下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>以后 <code>hexo d</code> 的时候就会推到 <code>GitHub</code> 和个人服务器上了。</p><h1 id="五、Hexo-d-免密"><a href="#五、Hexo-d-免密" class="headerlink" title="五、Hexo d 免密"></a>五、<code>Hexo d</code> 免密</h1><p>上述 <code>hexo d</code> 每次推到服务器上，都需要密码，通过添加密钥免密推送。可以在本地建立密钥上传到 <code>GitHub</code> 和你的服务器下的 <code>~/.ssh</code> 即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa<br><span class="hljs-meta">#</span><span class="bash"> 一直回车即可，然后将 id_rsa.pub 中的密钥信息拷贝到 authorized_keys 即可。</span><br><span class="hljs-meta">#</span><span class="bash"> GitHub 中添加密钥：右上角个人信息 → SSH and GPG keys → New SSH key</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iptables基础详解</title>
    <link href="/2021/01/30/iptables%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/01/30/iptables%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="iptables概念"><a href="#iptables概念" class="headerlink" title="iptables概念"></a>iptables概念</h1><p>从逻辑上讲。防火墙可以大体分为主机防火墙和网络防火墙<br>主机防火墙：针对于单个主机进行防护。网络防火墙：往往处于网络入口或边缘，针对于网络入口进行防护，服务于防火墙背后的本地局域网。<br>网络防火墙和主机防火墙并不冲突，可以理解为，网络防火墙主外（集体）， 主机防火墙主内（个人）。</p><p>从物理上讲，防火墙可以分为硬件防火墙和软件防火墙。<br>硬件防火墙：在硬件级别实现部分防火墙功能，另一部分功能基于软件实现，性能高，成本高。软件防火墙：应用软件处理逻辑运行于通用硬件平台之上的防火墙，性能低，成本低。</p><h2 id="iptables-用户→程序→内核→硬件"><a href="#iptables-用户→程序→内核→硬件" class="headerlink" title="iptables   (用户→程序→内核→硬件)"></a>iptables   (用户→程序→内核→硬件)</h2><p><code>iptables</code> 其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过 <code>iptables</code> 这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫 <code>netfilter</code> 。</p><p><code>netfilter</code> 才是防火墙真正的安全框架（<code>framework</code>），<code>netfilter</code> 位于内核空间。<code>iptables</code> 其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。<code>netfilter/iptables</code>（下文中简称为<code>iptables</code>）组成 <code>Linux</code> 平台下的包过滤防火墙，与大多数的 <code>Linux</code> 软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（<code>NAT</code>）等功能。<code>Netfilter</code> 是 <code>Linux</code> 操作系统核心层内部的一个数据包处理模块，它具有如下功能：<br>网络地址转换(<code>Network Address Translate</code>)<br>数据包内容修改<br>以及数据包过滤的防火墙功能</p><p><code>iptables</code> 并没有一个守护进程，不能算是真正意义上的服务，而应该算是内核提供的功能。</p><h1 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a>iptables基础</h1><h2 id="iptables防火墙简介"><a href="#iptables防火墙简介" class="headerlink" title="iptables防火墙简介"></a>iptables防火墙简介</h2><p><code>Netfilter/iptables</code> (以下简称iptables)是<code>Unix/linux</code> 系统自带的优秀且完全免费的基于包过滤的防火墙工具、它的功能十分强大、使用非常灵活、可以对流入、流出及流经服务器的数据包进行精细的控制。特别是它可以在一台非常低配置下跑的非常好。提供400台机器的办公上网共享服务丝毫不逊色数万RMB企业级专业路由器防火墙</p><p><code>Iptables</code> 是 <code>linux 2.4</code>及<code>2.6</code>内核中集成的服务、其功能与安全性比老一辈<code>ipvfwadm</code> 、<code>ipchanins</code> 强大的多、一般认为 <code>iptables</code> 工作在OSI七层的、二、三层、四层。</p><p>首先介绍 <code>iptables</code> 的结构：<code>iptables</code>  → <code>Tables</code> → <code>Chains</code> → <code>Rules</code>. 简单地讲，<code>tables</code> 由 <code>chains</code> 组成，而 <code>chains</code> 又由 <code>rules</code> 组成。如下图所示。</p><p><img src="/img/blog_image/Linux_iptables_contentImage/tables_chain_rules.png"></p><h3 id="一、iptables的表与链"><a href="#一、iptables的表与链" class="headerlink" title="一、iptables的表与链"></a>一、iptables的表与链</h3><p><code>iptables</code> 具有 <code>Filter</code>、<code>NAT</code>、<code>Mangle</code>、<code>Raw</code> 四种内建表：</p><h4 id="1-filter表"><a href="#1-filter表" class="headerlink" title="1. filter表"></a>1. filter表</h4><p><code>Filter</code> 表示 <code>iptables</code> 的默认表，因此如果你没有自定义表，那么就默认使用filter表，它具有以下三种内建链：</p><ul><li><code>INPUT</code>链 – 处理来自外部的数据。</li><li><code>OUTPUT</code>链 – 处理向外发送的数据。</li><li><code>FORWARD</code>链 – 将数据转发到本机的其他网卡设备上。</li></ul><h4 id="2-nat表"><a href="#2-nat表" class="headerlink" title="2. nat表"></a>2. nat表</h4><p><code>NAT</code>表有三种内建链：</p><ul><li><code>PREROUTING</code>链 – 处理刚到达本机并在路由转发前的数据包。它会转换数据包中的目标IP地址（<code>destination ip address</code>），通常用于<code>DNAT</code>(<code>destination NAT</code>)。</li><li><code>POSTROUTING</code>链 – 处理即将离开本机的数据包。它会转换数据包中的源IP地址（<code>source ip address</code>），通常用于<code>SNAT</code>（<code>source NAT</code>）。</li><li><code>OUTPUT</code>链 – 处理本机产生的数据包。</li></ul><h4 id="3-mangle表"><a href="#3-mangle表" class="headerlink" title="3. mangle表"></a>3. mangle表</h4><p><code>Mangle</code> 表用于指定如何处理数据包。它能改变<code>TCP</code>头中的<code>QoS</code>位。<code>Mangle</code> 表具有5个内建链：</p><ul><li><code>PREROUTING</code></li><li><code>OUTPUT</code></li><li><code>FORWARD</code></li><li><code>INPUT</code></li><li><code>POSTROUTING</code></li></ul><h4 id="4-raw表"><a href="#4-raw表" class="headerlink" title="4. raw表"></a>4. raw表</h4><p><code>Raw</code>表用于处理异常，它具有2个内建链：</p><ul><li><code>PREROUTING chain</code></li><li><code>OUTPUT chain</code></li></ul><h4 id="5-小结"><a href="#5-小结" class="headerlink" title="5.小结"></a>5.小结</h4><p>下图展示了 <code>iptables</code> 的三个内建表：</p><p><img src="/img/blog_image/Linux_iptables_contentImage/iptables_sum.png"></p><h3 id="二、IPTABLES-规则-Rules"><a href="#二、IPTABLES-规则-Rules" class="headerlink" title="二、IPTABLES 规则(Rules)"></a>二、IPTABLES 规则(Rules)</h3><p>牢记以下三点式理解 <code>iptables</code> 规则的关键：</p><ul><li><code>Rules</code>包括一个条件和一个目标(<code>target</code>) </li><li>如果满足条件，就执行目标(<code>target</code>)中的规则或者特定值。</li><li>如果不满足条件，就判断下一条<code>Rules</code>。</li></ul><p><strong>目标值（<code>Target Values</code>）</strong></p><p>下面是你可以在 <code>target</code> 里指定的特殊值：</p><ul><li><code>ACCEPT</code> – 允许防火墙接收数据包</li><li><code>DROP</code> – 防火墙丢弃包</li><li><code>QUEUE</code> – 防火墙将数据包移交到用户空间</li><li><code>RETURN</code> – 防火墙停止执行当前链中的后续<code>Rules</code>，并返回到调用链(<code>the calling chain</code>)中。</li></ul><p>如果你执行 <code>iptables --list</code>你将看到防火墙上的可用规则。下例说明当前系统没有定义防火墙，你可以看到，它显示了默认的<code>filter</code>表，以及表内默认的<code>input</code>链, <code>forward</code>链, <code>output</code>链。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]# iptables --list<br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination <br></code></pre></td></tr></table></figure><p>查看 <code>nat</code> 表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]# iptables -t nat --list<br>Chain PREROUTING (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain POSTROUTING (policy ACCEPT)<br>target     prot opt source               destination<br></code></pre></td></tr></table></figure><p>查看 <code>mangle</code> 表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]# iptables -t mangle --list<br>Chain PREROUTING (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain POSTROUTING (policy ACCEPT)<br>target     prot opt source               destination<br></code></pre></td></tr></table></figure><p>查看 <code>raw</code> 表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]# iptables -t raw --list<br>Chain PREROUTING (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination<br></code></pre></td></tr></table></figure><blockquote><p>注意：如果不指定 <code>-t</code>选项，就只会显示默认的 <code>filter</code> 表。因此，以下两种命令形式是一个意思：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables [-t filter] --list / iptables  --list<br></code></pre></td></tr></table></figure><p>以下例子表明在 <code>filter</code> 表的 <code>input</code>链, <code>forward</code> 链, <code>output</code> 链中存在规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> iptables –list</span> <br>Chain INPUT (policy ACCEPT) <br>num     target         prot   opt     source       destination <br>1  RH-Firewall-1-INPUT   all    —     0.0.0.0/0     0.0.0.0/0<br><br>Chain FORWARD (policy ACCEPT)<br>num     target         prot   opt     source       destination<br>1    RH-Firewall-1-INPUT  all     –    0.0.0.0/0      0.0.0.0/0<br><br>Chain OUTPUT (policy ACCEPT)<br>num target  prot opt source       destination<br><br>Chain RH-Firewall-1-INPUT (2 references)<br>num target  prot opt source       destination<br>1  ACCEPT  all – 0.0.0.0/0      0.0.0.0/0<br>2  ACCEPT  icmp – 0.0.0.0/0      0.0.0.0/0     icmp type 255<br>3  ACCEPT  esp – 0.0.0.0/0      0.0.0.0/0<br>4  ACCEPT  ah – 0.0.0.0/0      0.0.0.0/0<br>5  ACCEPT  udp – 0.0.0.0/0      224.0.0.251    udp dpt:5353<br>6  ACCEPT  udp – 0.0.0.0/0      0.0.0.0/0     udp dpt:631<br>7  ACCEPT  tcp – 0.0.0.0/0      0.0.0.0/0     tcp dpt:631<br>8  ACCEPT  all – 0.0.0.0/0      0.0.0.0/0     state RELATED,ESTABLISHED<br>9  ACCEPT  tcp – 0.0.0.0/0      0.0.0.0/0     state NEW tcp dpt:22<br>10 REJECT  all – 0.0.0.0/0      0.0.0.0/0     reject-with icmp-host-prohibited<br></code></pre></td></tr></table></figure><p>以上输出包含下列字段：</p><ul><li> <code>num</code> – 指定链中的规则编号</li><li><code>target</code> – 前面提到的 <code>target</code>的特殊值</li><li><code>prot</code> – 协议：<code>tcp</code>,<code>udp</code>,<code>icmp</code>等</li><li><code>source</code> – 数据包的源<code>IP</code>地址</li><li><code>destination</code> – 数据包的目标<code>IP</code>地址</li></ul><h3 id="三、清空所有iptables规则"><a href="#三、清空所有iptables规则" class="headerlink" title="三、清空所有iptables规则"></a>三、清空所有iptables规则</h3><p>在配置<code>iptables</code>之前，你通常需要用<code>iptables --list</code>命令或者<code>iptables --save</code>命令查看有无现存规则，因为有时需要删除现有的<code>iptables</code>规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -F(--flush)<br></code></pre></td></tr></table></figure><p>这两条命令是等效的。但是并非执行后就万事大吉了。你仍然需要检查规则是不是真的清空了，因为有的 <code>linux</code> 发行版上这个命令不会清除 <code>NAT</code> 表中的规则，此时只能手动清除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables [-t FILTER/NAT/MANGLE/RAW] -F<br></code></pre></td></tr></table></figure><h3 id="四、永久生效"><a href="#四、永久生效" class="headerlink" title="四、永久生效"></a>四、永久生效</h3><p>当你删除、添加规则后，这些更改并不能永久生效，这些规则很有可能在系统重启后恢复原样。为了让配置永久生效，根据平台的不同，具体操作也不同。下面进行简单介绍：</p><h4 id="1-Ubuntu"><a href="#1-Ubuntu" class="headerlink" title="1.Ubuntu"></a>1.Ubuntu</h4><p>首先，保存现有的规则：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">iptables-save &gt; <span class="hljs-regexp">/etc/i</span>ptables.rules<br></code></pre></td></tr></table></figure><p>然后新建一个<code>bash</code>脚本，并保存到 <code>/etc/network/if-pre-up.d/</code>目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span> <br>iptables-restore &lt; /etc/iptables.rules<br></code></pre></td></tr></table></figure><p>这样，每次系统重启后 <code>iptables</code> 规则都会被自动加载。</p><blockquote><p>注意：不要尝试在 <code>.bashrc</code> 或者 <code>.profile</code> 中执行以上命令，因为用户通常不是 <code>root</code>，而且这只能在登录时加载 <code>iptables</code>规则。</p></blockquote><h4 id="2-CentOS-RedHat"><a href="#2-CentOS-RedHat" class="headerlink" title="2.CentOS, RedHat"></a>2.CentOS, RedHat</h4><p>保存 <code>iptables</code> 规则 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service iptables save<br></code></pre></td></tr></table></figure><p>重启 <code>iptables</code> 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">service iptables stop<br>service iptables start<br></code></pre></td></tr></table></figure><p>查看当前规则：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/sysconfig/iptables<br></code></pre></td></tr></table></figure><h3 id="五、追加iptables规则"><a href="#五、追加iptables规则" class="headerlink" title="五、追加iptables规则"></a>五、追加iptables规则</h3><p>可以使用 <code>iptables -A</code> 命令追加新规则，其中 <code>-A</code> 表示 <code>Append</code>。因此， 新的规则将追加到链尾。</p><p>一般而言，最后一条规则用于丢弃(<code>DROP</code>)所有数据包。如果你已经有这样的规则了，并且使用  <code>-A</code> 参数添加新规则，那么就是无用功。</p><h4 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A chain firewall-rule<br>-A chain – 指定要追加规则的链<br>firewall-rule – 具体的规则参数<br></code></pre></td></tr></table></figure><h4 id="2-描述规则的基本参数"><a href="#2-描述规则的基本参数" class="headerlink" title="2. 描述规则的基本参数"></a>2. 描述规则的基本参数</h4><p>以下这些规则参数用于描述数据包的协议、源地址、目的地址、允许经过的网络接口，以及如何处理这些数据包。这些描述是对规则的基本描述。</p><h5 id="p-协议（protocol）"><a href="#p-协议（protocol）" class="headerlink" title="-p 协议（protocol）"></a>-p 协议（protocol）</h5><ul><li>指定规则的协议，如<code>tcp</code>, <code>udp</code>, <code>icmp</code>等，可以使用<code>all</code>来指定所有协议。</li><li>如果不指定<code>-p</code>参数，则默认是<code>all</code>值。这并不明智，请总是明确指定协议名称。</li><li>可以使用协议名(如<code>tcp</code>)，或者是协议值（比如6代表<code>tcp</code>）来指定协议。映射关系请查看<code>/etc/protocols</code>。</li><li>还可以使用<code>--protocol</code>参数代替<code>-p</code>参数。</li></ul><h5 id="s-源地址（source）"><a href="#s-源地址（source）" class="headerlink" title="-s 源地址（source）"></a>-s 源地址（source）</h5><ul><li>指定数据包的源地址</li><li>参数可以使<code>IP</code>地址、网络地址、主机名</li><li>例如：<code>-s 192.168.1.101</code>指定IP地址</li><li>例如：<code>-s 192.168.1.10/24</code>指定网络地址</li><li>如果不指定<code>-s</code>参数，就代表所有地址</li><li>还可以使用<code>–src</code>或者<code>--source</code></li></ul><h5 id="d-目的地址（destination）"><a href="#d-目的地址（destination）" class="headerlink" title="-d 目的地址（destination）"></a>-d 目的地址（destination）</h5><ul><li>指定目的地址</li><li>参数和<code>-s</code>相同</li><li>还可以使用<code>–dst</code>或者<code>--destination</code></li></ul><h5 id="j-执行目标（jump-to-target）"><a href="#j-执行目标（jump-to-target）" class="headerlink" title="-j 执行目标（jump to target）"></a>-j 执行目标（jump to target）</h5><ul><li><code>-j</code>代表”<code>jump to target</code>”</li><li><code>-j</code>指定了当与规则(<code>Rule</code>)匹配时如何处理数据包</li><li>可能的值是<code>ACCEPT</code>, <code>DROP</code>, <code>QUEUE</code>, <code>RETURN</code>, <code>MASQUERADE</code></li><li>还可以指定其他链（<code>Chain</code>）作为目标</li><li>注：<code>MASQUERADE</code>，地址伪装，算是<code>snat</code>中的一种特例，可以实现自动化的<code>snat</code></li></ul><h5 id="i-输入接口（input-interface）"><a href="#i-输入接口（input-interface）" class="headerlink" title="-i 输入接口（input interface）"></a>-i 输入接口（input interface）</h5><ul><li><code>-i</code>代表输入接口(<code>input interface</code>)</li><li><code>-i</code>指定了要处理来自哪个接口的数据包</li><li>这些数据包即将进入<code>INPUT</code>, <code>FORWARD</code>, <code>PREROUTE</code>链</li><li>例如：<code>-i eth0</code>指定了要处理经由<code>eth0</code>进入的数据包</li><li>如果不指定<code>-i</code>参数，那么将处理进入所有接口的数据包</li><li>如果出现<code>! -i eth0</code>，那么将处理所有经由<code>eth0</code>以外的接口进入的数据包</li><li>如果出现<code>-i eth+</code>，那么将处理所有经由<code>eth开头的接口</code>进入的数据包</li><li>还可以使用<code>-in-interface</code>参数</li></ul><h5 id="o-输出（out-interface）"><a href="#o-输出（out-interface）" class="headerlink" title="-o 输出（out interface）"></a>-o 输出（out interface）</h5><ul><li><code>-o</code>代表<code>output interface</code></li><li><code>-o</code>指定了数据包由哪个接口输出</li><li>这些数据包即将进入<code>FORWARD</code>, <code>OUTPUT</code>, <code>POSTROUTING</code>链</li><li>如果不指定<code>-o</code>选项，那么系统上的所有接口都可以作为输出接口</li><li>如果出现<code>! -o eth0</code>，那么将从<code>eth0以外的接口</code>输出</li><li>如果出现<code>-i eth+</code>，那么将仅从<code>eth开头的接口</code>输出</li><li>还可以使用<code>-out-interface</code>参数</li></ul><h4 id="3-描述规则的扩展参数"><a href="#3-描述规则的扩展参数" class="headerlink" title="3. 描述规则的扩展参数"></a>3. 描述规则的扩展参数</h4><p>对规则有了一个基本描述之后，有时候我们还希望指定端口、<code>TCP</code>标志、<code>ICMP</code>类型等内容。</p><h5 id="–sport-源端口（source-port）针对-p-tcp-或者-p-udp"><a href="#–sport-源端口（source-port）针对-p-tcp-或者-p-udp" class="headerlink" title="–sport 源端口（source port）针对 -p tcp 或者 -p udp"></a>–sport 源端口（source port）针对 -p tcp 或者 -p udp</h5><ul><li>缺省情况下，将匹配所有端口</li><li>可以指定端口号或者端口名称，例如”<code>--sport 22</code>″与”<code>--sport ssh</code>”。</li><li><em>/etc/services</em>文件描述了上述映射关系。</li><li>从性能上讲，使用端口号更好</li><li>使用冒号可以匹配端口范围，如”<code>--sport 22:100</code>″</li><li>还可以使用”<code>--source-port</code>”</li></ul><h5 id="–dport-目的端口（destination-port）针对-p-tcp-或者-p-udp"><a href="#–dport-目的端口（destination-port）针对-p-tcp-或者-p-udp" class="headerlink" title="–dport 目的端口（destination port）针对-p tcp 或者 -p udp"></a>–dport 目的端口（destination port）针对-p tcp 或者 -p udp</h5><ul><li>参数和<code>--sport</code>类似</li><li>还可以使用”<code>--destination-port</code>”</li></ul><h5 id="–tcp-flags-TCP标志-针对-p-tcp"><a href="#–tcp-flags-TCP标志-针对-p-tcp" class="headerlink" title="–tcp-flags TCP标志 针对-p tcp"></a>–tcp-flags TCP标志 针对-p tcp</h5><ul><li>可以指定由逗号分隔的多个参数</li><li>有效值可以是：<code>SYN</code>,<code>ACK</code>, <code>FIN</code>, <code>RST</code>, <code>URG</code>, <code>PSH</code></li><li>可以使用<code>ALL</code>或者<code>NONE</code></li></ul><h5 id="–icmp-type-ICMP类型-针对-p-icmp"><a href="#–icmp-type-ICMP类型-针对-p-icmp" class="headerlink" title="–icmp-type ICMP类型 针对-p icmp"></a>–icmp-type ICMP类型 针对-p icmp</h5><ul><li><code>–icmp-type 0</code> 表示<code>Echo Reply</code></li><li><code>–icmp-type 8 </code> 表示<code>Echo</code></li></ul><h4 id="4-追加规则的完整实例：仅允许SSH服务"><a href="#4-追加规则的完整实例：仅允许SSH服务" class="headerlink" title="4. 追加规则的完整实例：仅允许SSH服务"></a>4. 追加规则的完整实例：仅允许SSH服务</h4><p>本例实现的规则将仅允许<code>SSH</code>数据包通过本地计算机，其他一切连接（包括<code>ping</code>）都将被拒绝。</p><h5 id="1-清空所有iptables规则"><a href="#1-清空所有iptables规则" class="headerlink" title="1. 清空所有iptables规则"></a>1. 清空所有iptables规则</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -F<br></code></pre></td></tr></table></figure><h5 id="2-接收目标端口为22的数据包"><a href="#2-接收目标端口为22的数据包" class="headerlink" title="2. 接收目标端口为22的数据包"></a>2. 接收目标端口为22的数据包</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --dport 22 -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="3-拒绝所有其他数据包"><a href="#3-拒绝所有其他数据包" class="headerlink" title="3.拒绝所有其他数据包"></a>3.拒绝所有其他数据包</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -j DROP<br></code></pre></td></tr></table></figure><h3 id="六、更改默认策略"><a href="#六、更改默认策略" class="headerlink" title="六、更改默认策略"></a>六、更改默认策略</h3><p>上例的例子仅对接收的数据包过滤，而对于要发送出去的数据包却没有任何限制。本节主要介绍如何更改链策略，以改变链的行为。</p><h4 id="1-默认链策略"><a href="#1-默认链策略" class="headerlink" title="1. 默认链策略"></a>1. 默认链策略</h4><p><code>警告</code>：请勿在远程连接的服务器、虚拟机上测试！</p><p>当我们使用<code>-L</code>选项验证当前规则是发现，所有的链旁边都有 <code>policy ACCEPT</code>标注，这表明当前链的默认策略为<code>ACCEPT</code>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]# iptables -L<br>Chain INPUT (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain FORWARD (policy ACCEPT)<br>target     prot opt source               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot opt source               destination <br></code></pre></td></tr></table></figure><p>这种情况下，如果没有明确添加DROP规则，那么默认情况下将采用ACCEPT策略进行过滤。除非：</p><h6 id="a-为以上三个链单独添加DROP规则："><a href="#a-为以上三个链单独添加DROP规则：" class="headerlink" title="a)为以上三个链单独添加DROP规则："></a>a)为以上三个链单独添加DROP规则：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -j DROP <br>iptables -A OUTPUT -j DROP <br>iptables -A FORWARD -j DROP<br></code></pre></td></tr></table></figure><h6 id="b-更改默认策略："><a href="#b-更改默认策略：" class="headerlink" title="b)更改默认策略："></a>b)更改默认策略：</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -P INPUT DROP <br>iptables -P OUTPUT DROP <br>iptables -P FORWARD DROP<br></code></pre></td></tr></table></figure><p>糟糕！！如果你严格按照上一节的例子配置了<code>iptables</code>，并且现在使用的是<code>SSH</code>进行连接的，那么会话恐怕已经被迫终止了！</p><p>为什么呢？因为我们已经把<code>OUTPUT</code>链策略更改为<code>DROP</code>了。此时虽然服务器能接收数据，但是无法发送数据：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@test ~]#iptables -L <br>Chain INPUT (policy DROP)<br>target  prot opt source       destination <br>ACCEPT  tcp – anywhere      anywhere      tcp dpt:ssh <br>DROP   all – anywhere      anywhere<br><br>Chain FORWARD (policy DROP)<br>target  prot opt source       destination<br><br>Chain OUTPUT (policy DROP)<br>target  prot opt source       destination<br></code></pre></td></tr></table></figure><h3 id="七、配置应用程序规则"><a href="#七、配置应用程序规则" class="headerlink" title="七、配置应用程序规则"></a>七、配置应用程序规则</h3><h4 id="1-SSH"><a href="#1-SSH" class="headerlink" title="1. SSH"></a>1. SSH</h4><p>尽管已经介绍了如何初步限制除<code>SSH</code>以外的其他连接，但是那是在链默认策略为<code>ACCEPT</code>的情况下实现的，并且没有对输出数据包进行限 制。本节在上一节基础上，以<code>SSH</code>和<code>HTTP</code>所使用的端口为例，教大家如何在默认链策略为<code>DROP</code>的情况下，进行防火墙设置。在这里，我们将引进一种新的 参数<code>-m state</code>，并检查数据包的状态字段。</p><h5 id="1-1-允许接收远程主机的SSH请求"><a href="#1-1-允许接收远程主机的SSH请求" class="headerlink" title="1.1. 允许接收远程主机的SSH请求"></a>1.1. 允许接收远程主机的SSH请求</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="1-2-允许发送本地主机的SSH响应"><a href="#1-2-允许发送本地主机的SSH响应" class="headerlink" title="1.2. 允许发送本地主机的SSH响应"></a>1.2. 允许发送本地主机的SSH响应</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><ul><li><code>-m state</code>: 启用状态匹配模块（<code>state matching module</code>）</li><li><code>--state</code>: 状态匹配模块的参数。当<code>SSH</code>客户端第一个数据包到达服务器时，状态字段为<code>NEW</code>；建立连接后数据包的状态字段都是<code>ESTABLISHED</code></li><li><code>--sport 22</code>: <code>sshd</code>监听<code>22</code>端口，同时也通过该端口和客户端建立连接、传送数据。因此对于<code>SSH</code>服务器而言，源端口就是<code>22</code></li><li><code>--dport 22</code>: <code>ssh</code>客户端程序可以从本机的随机端口与<code>SSH</code>服务器的<code>22</code>端口建立连接。因此对于<code>SSH</code>客户端而言，目的端口就是<code>22</code></li></ul><p>如果服务器也需要使用<code>SSH</code>连接其他远程主机，则还需要增加以下配置：</p><h5 id="1-3-送出的数据包目的端口为22"><a href="#1-3-送出的数据包目的端口为22" class="headerlink" title="1.3. 送出的数据包目的端口为22"></a>1.3. 送出的数据包目的端口为22</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A OUTPUT -o eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="1-4-接收的数据包源端口为22"><a href="#1-4-接收的数据包源端口为22" class="headerlink" title="1.4. 接收的数据包源端口为22"></a>1.4. 接收的数据包源端口为22</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="2-HTTP"><a href="#2-HTTP" class="headerlink" title="2. HTTP"></a>2. HTTP</h4><p><code>HTTP</code>的配置与<code>SSH</code>类似：</p><h5 id="1-允许接收远程主机的HTTP请求"><a href="#1-允许接收远程主机的HTTP请求" class="headerlink" title="1. 允许接收远程主机的HTTP请求"></a>1. 允许接收远程主机的HTTP请求</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="2-允许发送本地主机的HTTP响应"><a href="#2-允许发送本地主机的HTTP响应" class="headerlink" title="2. 允许发送本地主机的HTTP响应"></a>2. 允许发送本地主机的HTTP响应</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A OUTPUT -o eth0 -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h4 id="3-完整的配"><a href="#3-完整的配" class="headerlink" title="3. 完整的配"></a>3. 完整的配</h4><h5 id="1-删除现有规则"><a href="#1-删除现有规则" class="headerlink" title="1. 删除现有规则"></a>1. 删除现有规则</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -F<br></code></pre></td></tr></table></figure><h5 id="2-配置默认链策略"><a href="#2-配置默认链策略" class="headerlink" title="2. 配置默认链策略"></a>2. 配置默认链策略</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -P INPUT DROP<br>iptables -P FORWARD DROP<br>iptables -P OUTPUT DROP<br></code></pre></td></tr></table></figure><h5 id="3-允许远程主机进行SSH连接"><a href="#3-允许远程主机进行SSH连接" class="headerlink" title="3. 允许远程主机进行SSH连接"></a>3. 允许远程主机进行SSH连接</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="4-允许本地主机进行SSH连接"><a href="#4-允许本地主机进行SSH连接" class="headerlink" title="4. 允许本地主机进行SSH连接"></a>4. 允许本地主机进行SSH连接</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A OUTPUT -o eth0 -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A INPUT -i eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><h5 id="5-允许HTTP请求"><a href="#5-允许HTTP请求" class="headerlink" title="5.允许HTTP请求"></a>5.允许HTTP请求</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">iptables -A INPUT -i eth0 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT<br>iptables -A OUTPUT -o eth0 -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT<br></code></pre></td></tr></table></figure><p><code>iptables</code>命令是<code>Linux</code>上常用的防火墙软件，是<code>netfilter</code>项目的一部分。可以直接配置，也可以通过许多前端和图形界面配置。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>iptables</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx-配置详解</title>
    <link href="/2021/01/21/Nignx-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <url>/2021/01/21/Nignx-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><blockquote><footer><strong>https://www.cnblogs.com/knowledgesea/p/5175711.html 转载文章</strong></footer></blockquote><p><em>Nginx</em> (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。</p><p>其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。</p><p>Nginx是一款轻量级的Web服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好。</p><h1 id="Nginx常用功能"><a href="#Nginx常用功能" class="headerlink" title="Nginx常用功能"></a>Nginx常用功能</h1><p>1、Http代理，反向代理：作为web服务器最常用的功能之一，尤其是反向代理。</p><p>这里我给来2张图，对正向代理与反响代理做个诠释，具体细节，大家可以翻阅下资料。</p><p><img src="/img/blog_image/Linux_Nginx_contentImage/1_1.jpg"></p><p>Nginx在做反向代理时，提供性能稳定，并且能够提供配置灵活的转发功能。Nginx可以根据不同的正则匹配，采取不同的转发策略，比如图片文件结尾的走文件服务器，动态页面走web服务器，只要你正则写的没问题，又有相对应的服务器解决方案，你就可以随心所欲的玩。并且Nginx对返回结果进行错误页跳转，异常判断等。如果被分发的服务器存在异常，他可以将请求重新转发给另外一台服务器，然后自动去除异常服务器。</p><p>2、负载均衡</p><p>Nginx提供的负载均衡策略有2种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。</p><p>上3个图，理解这三种负载均衡算法的实现</p><p><img src="/img/blog_image/Linux_Nginx_contentImage/2_1.jpg"></p><p>3、web缓存</p><p>Nginx可以对不同的文件做不同的缓存处理，配置灵活，并且支持FastCGI_Cache，主要用于对FastCGI的动态程序进行缓存。配合着第三方的ngx_cache_purge，对制定的URL缓存内容可以的进行增删管理。</p><p>4、Nginx相关地址</p><p>源码：<a href="https://trac.nginx.org/nginx/browser">https://trac.nginx.org/nginx/browser</a></p><p>官网：<a href="http://www.nginx.org/">http://www.nginx.org/</a></p><h1 id="Nginx配置文件结构"><a href="#Nginx配置文件结构" class="headerlink" title="Nginx配置文件结构"></a>Nginx配置文件结构</h1><p>如果你下载好啦，你的安装文件，不妨打开conf文件夹的nginx.conf文件，Nginx服务器的基础配置，默认的配置也存放在此。</p><p>在nginx.conf的注释符号位#</p><p>nginx文件的结构，这个对刚入门的同学，可以多看两眼。 </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#user  nobody;</span><br><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br><br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;<br>    <span class="hljs-attribute">default_type</span>  application/octet-stream;<br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    <span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;<br><br>    <span class="hljs-comment">#gzip  on;</span><br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        <span class="hljs-attribute">location</span> / &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-attribute">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br><br><br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p>nginx文件结构</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx">...              #全局块<br><br><span class="hljs-section">events</span> &#123;         <span class="hljs-comment">#events块</span><br>   ...<br>&#125;<br><br><span class="hljs-attribute">http</span>      <span class="hljs-comment">#http块</span><br>&#123;<br>    ...   #http全局块<br>    <span class="hljs-attribute">server</span>        <span class="hljs-comment">#server块</span><br>    &#123; <br>        ...       #server全局块<br>        <span class="hljs-attribute">location</span> [PATTERN]   <span class="hljs-comment">#location块</span><br>        &#123;<br>            ...<br>        &#125;<br>        <span class="hljs-attribute">location</span> [PATTERN] <br>        &#123;<br>            ...<br>        &#125;<br>    &#125;<br>    server<br>    &#123;<br>      ...<br>    &#125;<br>    ...     #http全局块<br>&#125;<br></code></pre></td></tr></table></figure><p>1、全局块：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</p><p>2、events块：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</p><p>3、http块：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</p><p>4、server块：配置虚拟主机的相关参数，一个http中可以有多个server。</p><p>5、location块：配置请求的路由，以及各种页面的处理情况。</p><p>下面给大家上一个配置文件，作为理解，同时也配入我搭建的一台测试机中，给大家示例。 </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">########### 每个指令必须有分号结束。#################</span><br><span class="hljs-comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span><br><span class="hljs-comment">#worker_processes 2;  #允许生成的进程数，默认为1</span><br><span class="hljs-comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span><br><span class="hljs-attribute">error_log</span> log/error.log <span class="hljs-literal">debug</span>;  <span class="hljs-comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">accept_mutex</span> <span class="hljs-literal">on</span>;   <span class="hljs-comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span><br>    <span class="hljs-attribute">multi_accept</span> <span class="hljs-literal">on</span>;  <span class="hljs-comment">#设置一个进程是否同时接受多个网络连接，默认为off</span><br>    <span class="hljs-comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span><br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;    <span class="hljs-comment">#最大连接数，默认为512</span><br>&#125;<br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;   <span class="hljs-comment">#文件扩展名与文件类型映射表</span><br>    <span class="hljs-attribute">default_type</span>  application/octet-stream; <span class="hljs-comment">#默认文件类型，默认为text/plain</span><br>    <span class="hljs-comment">#access_log off; #取消服务日志    </span><br>    <span class="hljs-attribute">log_format</span> myFormat <span class="hljs-string">&#x27;$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#x27;</span>; <span class="hljs-comment">#自定义格式</span><br>    <span class="hljs-attribute">access_log</span> log/access.log myFormat;  <span class="hljs-comment">#combined为日志格式的默认值</span><br>    <span class="hljs-attribute">sendfile</span> <span class="hljs-literal">on</span>;   <span class="hljs-comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span><br>    <span class="hljs-attribute">sendfile_max_chunk</span> <span class="hljs-number">100k</span>;  <span class="hljs-comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span><br>    <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">65</span>;  <span class="hljs-comment">#连接超时时间，默认为75s，可以在http，server，location块。</span><br><br>    <span class="hljs-attribute">upstream</span> mysvr &#123;   <br>      <span class="hljs-attribute">server</span> <span class="hljs-number">127.0.0.1:7878</span>;<br>      <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.10.121:3333</span> backup;  <span class="hljs-comment">#热备</span><br>    &#125;<br>    <span class="hljs-attribute">error_page</span> <span class="hljs-number">404</span> https://www.baidu.com; <span class="hljs-comment">#错误页</span><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">keepalive_requests</span> <span class="hljs-number">120</span>; <span class="hljs-comment">#单连接请求上限次数。</span><br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">4545</span>;   <span class="hljs-comment">#监听端口</span><br>        <span class="hljs-attribute">server_name</span>  <span class="hljs-number">127.0.0.1</span>;   <span class="hljs-comment">#监听地址       </span><br>        <span class="hljs-attribute">location</span>  ~*^.+$ &#123;       <span class="hljs-comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span><br>           <span class="hljs-comment">#root path;  #根目录</span><br>           <span class="hljs-comment">#index vv.txt;  #设置默认页</span><br>           <span class="hljs-attribute">proxy_pass</span>  http://mysvr;  <span class="hljs-comment">#请求转向mysvr 定义的服务器列表</span><br>           <span class="hljs-attribute">deny</span> <span class="hljs-number">127.0.0.1</span>;  <span class="hljs-comment">#拒绝的ip</span><br>           <span class="hljs-attribute">allow</span> <span class="hljs-number">172.18.5.54</span>; <span class="hljs-comment">#允许的ip           </span><br>        &#125; <br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><p>一、上面是nginx的基本配置，需要注意的有以下几点：</p><p>​    1、$remote_addr 与$http_x_forwarded_for 用以记录客户端的ip地址； </p><p>​    2、$remote_user ：用来记录客户端用户名称； </p><p>​    3、$time_local ： 用来记录访问时间与时区；</p><p>​    4、$request ： 用来记录请求的url与http协议；</p><p>​    5、$status ： 用来记录请求状态；成功是200；</p><p>​    6、$body_bytes_sent ：记录发送给客户端文件主体内容大小；</p><p>​    7、$http_referer ：用来记录从那个页面链接访问过来的； </p><p>​    8、$http_user_agent ：记录客户端浏览器的相关信息；</p><p>二、惊群现象：一个网路连接到来，多个睡眠的进程被同事叫醒，但只有一个进程能获得链接，这样会影响系统性能。</p><p>3、每个指令必须有分号结束。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubernetes-二进制部署</title>
    <link href="/2021/01/19/Kubernetes-%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/"/>
    <url>/2021/01/19/Kubernetes-%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="二进制部署Kubernetes集群-上"><a href="#二进制部署Kubernetes集群-上" class="headerlink" title="二进制部署Kubernetes集群(上)"></a>二进制部署Kubernetes集群(上)</h1><blockquote><footer><strong>Jarvis的BLOG</strong><cite><a href="https://www.cnblogs.com/wangchaolinux/p/11875124.html">转载文章</a></cite></footer></blockquote><h2 id="1-实验架构"><a href="#1-实验架构" class="headerlink" title="1.实验架构"></a>1.实验架构</h2><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119205100565.png" alt="实验架构"></p><h3 id="1-1-硬件环境"><a href="#1-1-硬件环境" class="headerlink" title="1.1.硬件环境"></a>1.1.硬件环境</h3><p>准备5台2c/2g/50g虚拟机，使用10.4.7.0/24 网络 。//因后期要直接向k8s交付java服务，因此运算节点需要4c8g。不交付服务，全部2c2g足够。</p><h3 id="1-2-软件环境"><a href="#1-2-软件环境" class="headerlink" title="1.2.软件环境"></a>1.2.软件环境</h3><p>操作系统：预装CentOS7.6操作系统。//因docker完美支持对内核有需求，所有操作系统全部CentOS 7.x（需要内核3.8以上），做好系统基础优化。</p><p><strong>关闭selinux，关闭firewalld服务</strong><br><strong>时间同步（chronyd）</strong><br><strong>调整Base源，Epel源</strong><br><strong>内核优化（文件描述符大小，内核转发，等等）</strong></p><h3 id="1-3-IP及架构规划"><a href="#1-3-IP及架构规划" class="headerlink" title="1.3.IP及架构规划"></a>1.3.IP及架构规划</h3><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th><th>部署服务与组件</th><th>硬件配置</th></tr></thead><tbody><tr><td>hdss7-11.host.com</td><td>k8s proxy 主</td><td>10.4.7.11</td><td>bind9、nginx（L4）、keepalived、supervisor</td><td>2C 2G 50G</td></tr><tr><td>hdss7-12.host.com</td><td>k8s proxy 备</td><td>10.4.7.12</td><td>etcd、nginx（L4）、keepalived、supervisor</td><td>2C 2G 50G</td></tr><tr><td>hdss7-21.host.com</td><td>k8s 运算节点1</td><td>10.4.7.21</td><td>etcd、kube-apiserver、kube-controller-manager、kube-scheduler kube-kubelet、kube-proxy，supervisor</td><td>4C 8G 50G</td></tr><tr><td>hdss7-22.host.com</td><td>k8s 运算节点2</td><td>10.4.7.22</td><td>etcd、kube-apiserver、kube-controller-manager、kube-scheduler、kube-kubelet、kube-proxy，supervisor</td><td>4C 8G 50G</td></tr><tr><td>hdss7-200.host.com</td><td>k8s 运维节点，docker仓库</td><td>10.4.7.200</td><td>docker 私有仓库、资源配置清单仓库、提供共享存储（NFS）、签发证书</td><td>2C 2G 50G</td></tr></tbody></table><h2 id="2-基础环境准备及网络设置"><a href="#2-基础环境准备及网络设置" class="headerlink" title="2.基础环境准备及网络设置"></a>2.基础环境准备及网络设置</h2><h3 id="2-1-网络设置"><a href="#2-1-网络设置" class="headerlink" title="2.1.网络设置"></a>2.1.网络设置</h3><h4 id="2-1-1-VM虚拟网络编辑器设置"><a href="#2-1-1-VM虚拟网络编辑器设置" class="headerlink" title="2.1.1.VM虚拟网络编辑器设置"></a>2.1.1.VM虚拟网络编辑器设置</h4><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119205830113.png" alt="VM虚拟网络编辑器设置"></p><h4 id="2-1-2-Windows网卡设置"><a href="#2-1-2-Windows网卡设置" class="headerlink" title="2.1.2.Windows网卡设置"></a>2.1.2.Windows网卡设置</h4><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/image-20210119210222054.png" alt="Windows网卡设置"></p><h3 id="2-2-虚拟机操作系统设置"><a href="#2-2-虚拟机操作系统设置" class="headerlink" title="2.2.虚拟机操作系统设置"></a>2.2.虚拟机操作系统设置</h3><h4 id="2-2-1-设置主机名"><a href="#2-2-1-设置主机名" class="headerlink" title="2.2.1.设置主机名"></a>2.2.1.设置主机名</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">~]# hostnamectl <span class="hljs-keyword">set</span>-<span class="hljs-built_in">hostname</span> hdss7-xx.host.<span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><h4 id="2-2-2-关闭防火墙和selinux"><a href="#2-2-2-关闭防火墙和selinux" class="headerlink" title="2.2.2.关闭防火墙和selinux"></a>2.2.2.关闭防火墙和selinux</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">~]# systemctl stop firewalld<br>~]# systemctl disable firewalld<br>~]# setenforce <span class="hljs-number">0</span><br>~]# sed –i ‘s<span class="hljs-regexp">/SELINUX=enforcing/</span>SELINUX=disabled<span class="hljs-regexp">/g’ /</span>etc<span class="hljs-regexp">/selinux/</span>config<br></code></pre></td></tr></table></figure><h4 id="2-2-3-设置网卡"><a href="#2-2-3-设置网卡" class="headerlink" title="2.2.3.设置网卡"></a>2.2.3.设置网卡</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0 <br><span class="hljs-attribute">TYPE</span>=Ethernet<br><span class="hljs-attribute">BOOTPROTO</span>=none<br><span class="hljs-attribute">NAME</span>=eth0<br><span class="hljs-attribute">DEVICE</span>=eth0<br><span class="hljs-attribute">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">IPADDR</span>=10.4.7.xx<br><span class="hljs-attribute">NETMASK</span>=255.255.255.0<br><span class="hljs-attribute">GATEWAY</span>=10.4.7.254<br><span class="hljs-attribute">DNS1</span>=10.4.7.xx<br></code></pre></td></tr></table></figure><h4 id="2-2-4-设置yum源"><a href="#2-2-4-设置yum源" class="headerlink" title="2.2.4.设置yum源"></a>2.2.4.设置yum源</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css">~]# <span class="hljs-selector-tag">yum</span> <span class="hljs-selector-tag">install</span> <span class="hljs-selector-tag">epel-release</span><br>或者<br>~]# <span class="hljs-selector-tag">wget</span> <span class="hljs-selector-tag">-O</span> /<span class="hljs-selector-tag">etc</span>/<span class="hljs-selector-tag">yum</span><span class="hljs-selector-class">.repos</span><span class="hljs-selector-class">.d</span>/<span class="hljs-selector-tag">CentOS-Base</span><span class="hljs-selector-class">.repo</span>  <span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">mirrors</span><span class="hljs-selector-class">.aliyun</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">repo</span>/<span class="hljs-selector-tag">Centos-7</span><span class="hljs-selector-class">.repo</span><br>~]# <span class="hljs-selector-tag">wget</span> <span class="hljs-selector-tag">-O</span> /<span class="hljs-selector-tag">etc</span>/<span class="hljs-selector-tag">yum</span><span class="hljs-selector-class">.repos</span><span class="hljs-selector-class">.d</span>/<span class="hljs-selector-tag">epel</span><span class="hljs-selector-class">.repo</span>  <span class="hljs-selector-tag">http</span>://<span class="hljs-selector-tag">mirrors</span><span class="hljs-selector-class">.aliyun</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">repo</span>/<span class="hljs-selector-tag">epel-7</span><span class="hljs-selector-class">.repo</span><br>~]# <span class="hljs-selector-tag">yum</span> <span class="hljs-selector-tag">clean</span> <span class="hljs-selector-tag">all</span><br>~]# <span class="hljs-selector-tag">yum</span> <span class="hljs-selector-tag">makecache</span><br></code></pre></td></tr></table></figure><h4 id="2-2-5-安装常用工具"><a href="#2-2-5-安装常用工具" class="headerlink" title="2.2.5.安装常用工具"></a>2.2.5.安装常用工具</h4><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">~]# yum install wget <span class="hljs-built_in">net</span>-tools telnet <span class="hljs-built_in">tree</span> nmap sysstat lrzsz dos2unix bind-utils -y<br></code></pre></td></tr></table></figure><h3 id="2-3安装bind服务"><a href="#2-3安装bind服务" class="headerlink" title="2.3安装bind服务"></a>2.3安装bind服务</h3>            <input type="checkbox" disabled checked="checked">主节点hdss7-11.host.com 上          <h4 id="2-3-1-安装bind-9"><a href="#2-3-1-安装bind-9" class="headerlink" title="2.3.1.安装bind 9"></a>2.3.1.安装bind 9</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">~]#</span><span class="bash"> yum install <span class="hljs-built_in">bind</span> -y</span><br></code></pre></td></tr></table></figure><h4 id="2-3-2-配置bind-9"><a href="#2-3-2-配置bind-9" class="headerlink" title="2.3.2.配置bind 9"></a>2.3.2.配置bind 9</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-comment">//主配置文件</span><br>~]# vi /etc/named.conf<br>listen-on port <span class="hljs-number">53</span> &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;; <br>allow-query     &#123; any; &#125;;<br>forwarders      &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.254</span>; &#125;;<br>recursion yes;<br>dnssec-enable no;<br>dnssec-validation no<br><br>##########参数说明#########<br>* dnssec-enable yes; ----&gt; dnssec-enable no; # 是否支持DNSSEC开关 PS：dnssec作用：<span class="hljs-number">1.</span>为DNS数据提供来源验证 <span class="hljs-number">2.</span>为数据提供完整性性验证 <span class="hljs-number">3.</span>为查询提供否定存在验证<br>* dnssec-validation yes; ----&gt; dnssec-validation no; #是否进行DNSSEC确认开关<br>* forwarders      &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.1</span>; &#125;; #用来指定上一层DNS地址，一般指定网关，确保服务能够访问公网<br>* listen-on-v6 port <span class="hljs-number">53</span> &#123; ::<span class="hljs-number">1</span>; &#125;; 如果不用IPV6，可以删除<br>*recursion 递归查询<br>#########################<br><br>~]# named-checkconf<br><br><span class="hljs-comment">//区域配置文件</span><br>~]# vi /etc/named.rfc1912.zones<br>zone <span class="hljs-string">&quot;host.com&quot;</span> IN &#123;<br>        type  master;<br>        file  <span class="hljs-string">&quot;host.com.zone&quot;</span>;<br>        allow-update &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;;<br>&#125;;<br><br>zone <span class="hljs-string">&quot;od.com&quot;</span> IN &#123;<br>        type  master;<br>        file  <span class="hljs-string">&quot;od.com.zone&quot;</span>;<br>        allow-update &#123; <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>; &#125;;<br>&#125;;<br><br><span class="hljs-comment">//配置区域数据文件</span><br>    <span class="hljs-number">1.</span>配置主机域数据文件<br>~]# vi  /var/named/host.com.zone<br>$ORIGIN host.com.<br>$TTL <span class="hljs-number">600</span>; <span class="hljs-number">10</span> minutes<br>@       IN SOAdns.host.com. dnsadmin.host.com. (<br><span class="hljs-number">2019111001</span> ; serial<br><span class="hljs-number">10800</span>      ; refresh (<span class="hljs-number">3</span> hours)<br><span class="hljs-number">900</span>        ; retry (<span class="hljs-number">15</span> minutes)<br><span class="hljs-number">604800</span>     ; expire (<span class="hljs-number">1</span> week)<br><span class="hljs-number">86400</span>      ; minimum (<span class="hljs-number">1</span> day)<br>)<br>NS   dns.host.com.<br>$TTL <span class="hljs-number">60</span>; <span class="hljs-number">1</span> minute<br>dns                A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br>HDSS7<span class="hljs-number">-11</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br>HDSS7<span class="hljs-number">-12</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.12</span><br>HDSS7<span class="hljs-number">-21</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.21</span><br>HDSS7<span class="hljs-number">-22</span>           A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.22</span><br>HDSS7<span class="hljs-number">-200</span>          A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span>  <br>    <span class="hljs-number">2.</span>配置业务域数据文件<br>~]# vi  /var/named/od.com.zone<br>$ORIGIN od.com.<br>$TTL <span class="hljs-number">600</span>; <span class="hljs-number">10</span> minutes<br>@   IN SOAdns.od.com. dnsadmin.od.com. (<br><span class="hljs-number">2019111001</span> ; serial<br><span class="hljs-number">10800</span>      ; refresh (<span class="hljs-number">3</span> hours)<br><span class="hljs-number">900</span>        ; retry (<span class="hljs-number">15</span> minutes)<br><span class="hljs-number">604800</span>     ; expire (<span class="hljs-number">1</span> week)<br><span class="hljs-number">86400</span>      ; minimum (<span class="hljs-number">1</span> day)<br>)<br>NS   dns.od.com.<br>$TTL <span class="hljs-number">60</span>; <span class="hljs-number">1</span> minute<br>dns                A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span>    <br></code></pre></td></tr></table></figure><h4 id="2-3-3-检查配置并启动bind-9"><a href="#2-3-3-检查配置并启动bind-9" class="headerlink" title="2.3.3.检查配置并启动bind 9"></a>2.3.3.检查配置并启动bind 9</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs elixir">~]<span class="hljs-comment"># named-checkconf</span><br>~]<span class="hljs-comment"># systemctl start named</span><br>~]<span class="hljs-comment"># netstat -nltup|grep 53</span><br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span>            0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">953</span>           0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">53</span>                   ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">18279</span>/named         <br>tcp6       0      0 ::<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">953</span>                 ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">18279</span>/named         <br>udp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span>            0.0.0.0<span class="hljs-symbol">:*</span>                           <span class="hljs-number">18279</span>/named         <br>udp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">53</span>                   ::<span class="hljs-symbol">:*</span>                                <span class="hljs-number">18279</span>/named <br></code></pre></td></tr></table></figure><h4 id="2-3-4-检查"><a href="#2-3-4-检查" class="headerlink" title="2.3.4.检查"></a>2.3.4.检查</h4><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">21</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span> +short<br><span class="hljs-number">10.4.7.21</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">200</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.200</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A hdss7-<span class="hljs-number">11</span>.host.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.11</span><br><span class="hljs-string">[root@hdss7-11 ~]</span># dig -t A dns.od.com @<span class="hljs-number">10</span>.<span class="hljs-number">4</span>.<span class="hljs-number">7</span>.<span class="hljs-number">11</span>  +short<br><span class="hljs-number">10.4.7.11</span><br></code></pre></td></tr></table></figure><h4 id="2-3-5-配置DNS客户端"><a href="#2-3-5-配置DNS客户端" class="headerlink" title="2.3.5.配置DNS客户端"></a>2.3.5.配置DNS客户端</h4><h5 id="linux主机所有"><a href="#linux主机所有" class="headerlink" title="linux主机所有"></a>linux主机所有</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-11</span> ~]# vi /etc/resolv.conf <br># <span class="hljs-keyword">Generated</span> <span class="hljs-keyword">by</span> NetworkManager<br><span class="hljs-keyword">search</span> host.com<br>nameserver <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.11</span><br><br>~] systemctl <span class="hljs-keyword">restart</span> network 五台都设置重启<br></code></pre></td></tr></table></figure><h5 id="windows主机"><a href="#windows主机" class="headerlink" title="windows主机"></a>windows主机</h5><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">更改适配器设置  → 属性 → ipv4 → 更改dns <br>自动跃点 10 优先从vmnet 8出网<br></code></pre></td></tr></table></figure><h4 id="2-3-6-检查"><a href="#2-3-6-检查" class="headerlink" title="2.3.6.检查"></a>2.3.6.检查</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">~]# <span class="hljs-selector-tag">ping</span> <span class="hljs-selector-tag">hdss7-200</span><span class="hljs-selector-class">.host</span><span class="hljs-selector-class">.com</span><br>~]# <span class="hljs-selector-tag">ping</span> <span class="hljs-selector-tag">dns</span><span class="hljs-selector-class">.od</span><span class="hljs-selector-class">.com</span><br>#若<span class="hljs-selector-tag">windows</span> <span class="hljs-selector-tag">ping</span>不到，把本地网卡<span class="hljs-selector-tag">dns</span>设置成10.4.7.11<br></code></pre></td></tr></table></figure><h3 id="2-4-准备签发证书环境"><a href="#2-4-准备签发证书环境" class="headerlink" title="2.4.准备签发证书环境"></a>2.4.准备签发证书环境</h3>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200.host.com 上          <h4 id="2-4-1-安装CFSSL"><a href="#2-4-1-安装CFSSL" class="headerlink" title="2.4.1.安装CFSSL"></a>2.4.1.安装CFSSL</h4><p><strong>证书签发工具CFSSL：R1.2</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs arduino">HDSS7<span class="hljs-number">-200</span>上:<br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssl_linux-amd64 -O /usr/bin/cfssl          //cfssl下载地址</span></span><br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -O /usr/bin/cfssl-json    //cfssl-json下载地址</span></span><br>~]<span class="hljs-meta"># wget https:<span class="hljs-comment">//pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -O /usr/bin/cfssl-certinfo     //cfssl-certinfo下载地址</span></span><br>~]<span class="hljs-meta"># chmod +x /usr/bin/cfssl*</span><br></code></pre></td></tr></table></figure><h4 id="2-4-2-创建生成CA证书签名请求（csr）的json配置文件"><a href="#2-4-2-创建生成CA证书签名请求（csr）的json配置文件" class="headerlink" title="2.4.2.创建生成CA证书签名请求（csr）的json配置文件"></a>2.4.2.创建生成CA证书签名请求（csr）的json配置文件</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs clean">vi  /opt/certs/ca-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;OldboyEdu&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ],<br>    <span class="hljs-string">&quot;ca&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span><br>    &#125;<br>&#125;<br><br>##############配置说明###########<br>CN：Common Name，浏览器使用该字段验证网站是否合法，一般写的是域名，很重要，浏览器使用该字段验证网站是否合法<br>C：Country 国家<br>ST：State 州，省<br>L：Locality 地区，城市<br>O：Organization Name 组织名称，公司名称<br>OU：Organization Unit Name 组织单位名称，部门<br></code></pre></td></tr></table></figure><h4 id="2-4-3-生成CA证书和私钥"><a href="#2-4-3-生成CA证书和私钥" class="headerlink" title="2.4.3.生成CA证书和私钥"></a>2.4.3.生成CA证书和私钥</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clean">mkdir /opt/certs<br>cd /opt/certs<br>certs]#  cfssl gencert -initca ca-csr.json | cfssl-json -bare ca<br>certs]# ll<br>ca.csr  <br>ca-csr.json  <br>ca-key.pem                                 <span class="hljs-comment">//根证书的私钥  </span><br>ca.pem                                      <span class="hljs-comment">//根证书</span><br>##########<br>ca.pem     <span class="hljs-comment">//根证书</span><br>ca-key.pem:<br></code></pre></td></tr></table></figure><h3 id="2-5-部署docker环境"><a href="#2-5-部署docker环境" class="headerlink" title="2.5.部署docker环境"></a>2.5.部署docker环境</h3>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com 上                      <input type="checkbox" disabled checked="checked">hdss7-21.host.com 上                      <input type="checkbox" disabled checked="checked">hdss7-22.host.com 上          <h4 id="2-5-1-安装"><a href="#2-5-1-安装" class="headerlink" title="2.5.1.安装"></a>2.5.1.安装</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> ~]<span class="hljs-comment"># curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><br><span class="hljs-comment"># Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca32c1</span><br>+ sh -c <span class="hljs-string">&#x27;yum install -y -q yum-utils&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&#x27;</span><br>Loaded plugins: fastestmirror<br>adding repo from: https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo<br>grabbing file https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo to <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>repo saved to <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>+ <span class="hljs-string">&#x27;[&#x27;</span> stable <span class="hljs-string">&#x27;!=&#x27;</span> stable <span class="hljs-string">&#x27;]&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum makecache&#x27;</span><br>Loaded plugins: fastestmirror<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.aliyun.com<br> * extras: mirrors.aliyun.com<br> * updates: mirrors.aliyun.com<br>base                                                                                                   | <span class="hljs-number">3.6</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>docker-ce-stable                                                                                       | <span class="hljs-number">3.5</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>epel                                                                                                   | <span class="hljs-number">5.4</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>extras                                                                                                 | <span class="hljs-number">2.9</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>updates                                                                                                | <span class="hljs-number">2.9</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">1</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/updateinfo                                                             |   <span class="hljs-number">55</span> B  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">2</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/filelists_db                                                           |  <span class="hljs-number">18</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">3</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/primary_db                                                             |  <span class="hljs-number">37</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">4</span><span class="hljs-regexp">/14): docker-ce-stable/</span>x86_64/other_db                                                               | <span class="hljs-number">111</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">5</span><span class="hljs-regexp">/14): epel/</span>x86_64/prestodelta                                                                        | <span class="hljs-number">4.0</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">6</span><span class="hljs-regexp">/14): base/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                         | <span class="hljs-number">2.6</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">7</span><span class="hljs-regexp">/14): epel/</span>x86_64/other_db                                                                           | <span class="hljs-number">3.3</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">02</span>     <br>(<span class="hljs-number">8</span><span class="hljs-regexp">/14): extras/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                       | <span class="hljs-number">100</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">9</span><span class="hljs-regexp">/14): extras/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                   | <span class="hljs-number">207</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">10</span><span class="hljs-regexp">/14): updates/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>other_db                                                                     | <span class="hljs-number">243</span> kB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>     <br>(<span class="hljs-number">11</span><span class="hljs-regexp">/14): epel/</span>x86_64/updateinfo_zck                                                                    | <span class="hljs-number">1.5</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">12</span><span class="hljs-regexp">/14): updates/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                 | <span class="hljs-number">2.1</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">01</span>     <br>(<span class="hljs-number">13</span><span class="hljs-regexp">/14): base/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>filelists_db                                                                    | <span class="hljs-number">7.3</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">04</span>     <br>(<span class="hljs-number">14</span><span class="hljs-regexp">/14): epel/</span>x86_64/filelists_db                                                                      |  <span class="hljs-number">12</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">05</span>     <br>Metadata Cache Created<br>+ <span class="hljs-string">&#x27;[&#x27;</span> -n <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;]&#x27;</span><br>+ sh -c <span class="hljs-string">&#x27;yum install -y -q docker-ce&#x27;</span><br>warning: <span class="hljs-regexp">/var/</span>cache<span class="hljs-regexp">/yum/</span>x86_64<span class="hljs-regexp">/7/</span>docker-ce-stable<span class="hljs-regexp">/packages/</span>docker-ce-<span class="hljs-number">19.03</span>.<span class="hljs-number">5</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID <span class="hljs-number">621</span>e9f35: NOKEY<br>Public key <span class="hljs-keyword">for</span> docker-ce-<span class="hljs-number">19.03</span>.<span class="hljs-number">5</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm is not installed<br>Importing GPG key <span class="hljs-number">0</span>x621E9F35:<br> Userid     : <span class="hljs-string">&quot;Docker Release (CE rpm) &lt;docker@docker.com&gt;&quot;</span><br> Fingerprint: <span class="hljs-number">060</span>a <span class="hljs-number">61</span>c5 <span class="hljs-number">1</span>b55 <span class="hljs-number">8</span>a7f <span class="hljs-number">742</span>b <span class="hljs-number">77</span>aa c52f eb6b <span class="hljs-number">621</span>e <span class="hljs-number">9</span>f35<br> From       : https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/g</span>pg<br>setsebool:  SELinux is disabled.<br>If you would like to use Docker as a non-root user, you should now consider<br>adding your user to the <span class="hljs-string">&quot;docker&quot;</span> group with something like:<br><br>  sudo usermod -aG docker your-user<br><br>Remember that you will have to log out and back <span class="hljs-keyword">in</span> <span class="hljs-keyword">for</span> this to take effect!<br><br>WARNING: Adding a user to the <span class="hljs-string">&quot;docker&quot;</span> group will grant the ability to run<br>         containers which can be used to obtain root privileges on the<br>         docker host.<br>         Refer to https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>security<span class="hljs-regexp">/security/</span><span class="hljs-comment">#docker-daemon-attack-surface</span><br>         <span class="hljs-keyword">for</span> more information.<br></code></pre></td></tr></table></figure><p>报错：<br><img src="/img/blog_image/Linux_k8S_Bin_contentImage/error.png" alt="报错"></p><p>解决：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -f  <span class="hljs-regexp">/etc/yum</span>.repos.d/local.repo   <span class="hljs-comment">#再重新安装</span><br></code></pre></td></tr></table></figure><h4 id="2-5-2-配置"><a href="#2-5-2-配置" class="headerlink" title="2.5.2.配置"></a>2.5.2.配置</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs clean">mkdir  /etc/docker<br>vi  /etc/docker/daemon.json<br>&#123;<br>  <span class="hljs-string">&quot;graph&quot;</span>: <span class="hljs-string">&quot;/data/docker&quot;</span>,<br>  <span class="hljs-string">&quot;storage-driver&quot;</span>: <span class="hljs-string">&quot;overlay2&quot;</span>,<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;registry.access.redhat.com&quot;</span>,<span class="hljs-string">&quot;quay.io&quot;</span>,<span class="hljs-string">&quot;harbor.od.com&quot;</span>],<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://q2gr04ke.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;bip&quot;</span>: <span class="hljs-string">&quot;172.7.21.1/24&quot;</span>,<br>  <span class="hljs-string">&quot;exec-opts&quot;</span>: [<span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span>],<br>  <span class="hljs-string">&quot;live-restore&quot;</span>: true<br>&#125;<br>############配置说明###############<br>bip要根据宿主机ip变化 <br>注意：hdss7<span class="hljs-number">-21.</span>host.com   bip <span class="hljs-number">172.7</span><span class="hljs-number">.21</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>     hdss7<span class="hljs-number">-22.</span>host.com   bip <span class="hljs-number">172.7</span><span class="hljs-number">.22</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>     hdss7<span class="hljs-number">-200.</span>host.com  bip <span class="hljs-number">172.7</span><span class="hljs-number">.200</span><span class="hljs-number">.1</span>/<span class="hljs-number">24</span><br>#################################<br></code></pre></td></tr></table></figure><h4 id="2-5-3-启动"><a href="#2-5-3-启动" class="headerlink" title="2.5.3.启动"></a>2.5.3.启动</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">docker]#</span> <span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">/data/docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">systemctl</span> <span class="hljs-string">start</span> <span class="hljs-string">docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">systemctl</span> <span class="hljs-string">enable</span> <span class="hljs-string">docker</span><br><span class="hljs-string">docker]#</span> <span class="hljs-string">docker</span> <span class="hljs-string">--version</span><br><span class="hljs-string">Docker</span> <span class="hljs-string">version</span> <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><span class="hljs-string">,</span> <span class="hljs-string">build</span> <span class="hljs-string">9013bf583a</span><br>[<span class="hljs-string">root@hdss7-200</span> <span class="hljs-string">docker</span>]<span class="hljs-comment"># docker version</span><br><span class="hljs-attr">Client:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Engine</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Community</span><br> <span class="hljs-attr">Version:</span>           <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><br> <span class="hljs-attr">API version:</span>       <span class="hljs-number">1.40</span><br> <span class="hljs-attr">Go version:</span>        <span class="hljs-string">go1.12.10</span><br> <span class="hljs-attr">Git commit:</span>        <span class="hljs-string">9013bf583a</span><br> <span class="hljs-attr">Built:</span>             <span class="hljs-string">Fri</span> <span class="hljs-string">Oct</span> <span class="hljs-number">18</span> <span class="hljs-number">15</span><span class="hljs-string">:52:22</span> <span class="hljs-number">2019</span><br> <span class="hljs-attr">OS/Arch:</span>           <span class="hljs-string">linux/amd64</span><br> <span class="hljs-attr">Experimental:</span>      <span class="hljs-literal">false</span><br><br><span class="hljs-attr">Server:</span> <span class="hljs-string">Docker</span> <span class="hljs-string">Engine</span> <span class="hljs-bullet">-</span> <span class="hljs-string">Community</span><br> <span class="hljs-attr">Engine:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">19.03</span><span class="hljs-number">.5</span><br>  <span class="hljs-attr">API version:</span>      <span class="hljs-number">1.40</span> <span class="hljs-string">(minimum</span> <span class="hljs-string">version</span> <span class="hljs-number">1.12</span><span class="hljs-string">)</span><br>  <span class="hljs-attr">Go version:</span>       <span class="hljs-string">go1.12.12</span><br>  <span class="hljs-attr">Git commit:</span>       <span class="hljs-string">633a0ea</span><br>  <span class="hljs-attr">Built:</span>            <span class="hljs-string">Wed</span> <span class="hljs-string">Nov</span> <span class="hljs-number">13</span> <span class="hljs-number">07</span><span class="hljs-string">:24:18</span> <span class="hljs-number">2019</span><br>  <span class="hljs-attr">OS/Arch:</span>          <span class="hljs-string">linux/amd64</span><br>  <span class="hljs-attr">Experimental:</span>     <span class="hljs-literal">false</span><br> <span class="hljs-attr">containerd:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">1.2</span><span class="hljs-number">.10</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">b34a5c8af56e510852c35414db4c1f4fa6172339</span><br> <span class="hljs-attr">runc:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">1.0</span><span class="hljs-number">.0</span><span class="hljs-string">-rc8+dev</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">3e425f80a8c931f88e6d94a8c831b9d5aa481657</span><br> <span class="hljs-attr">docker-init:</span><br>  <span class="hljs-attr">Version:</span>          <span class="hljs-number">0.18</span><span class="hljs-number">.0</span><br>  <span class="hljs-attr">GitCommit:</span>        <span class="hljs-string">fec3683</span><br></code></pre></td></tr></table></figure><h3 id="2-6-部署docker镜像私有仓库harbor"><a href="#2-6-部署docker镜像私有仓库harbor" class="headerlink" title="2.6.部署docker镜像私有仓库harbor"></a>2.6.部署docker镜像私有仓库harbor</h3>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200.host.com 上          <h4 id="2-6-1-下载软件二进制包并解压"><a href="#2-6-1-下载软件二进制包并解压" class="headerlink" title="2.6.1.下载软件二进制包并解压"></a>2.6.1.下载软件二进制包并解压</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vim">强烈建议下载<span class="hljs-number">1.7</span>.<span class="hljs-number">5</span>以上版本<br>harbor官网github地址<br>http<span class="hljs-variable">s:</span>//github.<span class="hljs-keyword">com</span>/goharbor/harbor<br><br>src]# tar xf harbor-offline-installer-v1.<span class="hljs-number">8.3</span>.tgz -C /<span class="hljs-keyword">opt</span>/<br><span class="hljs-keyword">opt</span>]# mv harbor/ harbor-v1.<span class="hljs-number">8.3</span><br><span class="hljs-keyword">opt</span>]# <span class="hljs-keyword">ln</span> -s /<span class="hljs-keyword">opt</span>/harbor-v1.<span class="hljs-number">8.3</span>/ /<span class="hljs-keyword">opt</span>/harbor<br></code></pre></td></tr></table></figure><h4 id="2-6-2-配置"><a href="#2-6-2-配置" class="headerlink" title="2.6.2.配置"></a>2.6.2.配置</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@hdss7<span class="hljs-number">-200</span> opt]<span class="hljs-meta"># vi /opt/harbor/harbor.yml</span><br><span class="hljs-symbol">hostname:</span> harbor.od.com<br><span class="hljs-symbol">http:</span><br><span class="hljs-symbol">  port:</span> <span class="hljs-number">180</span><br><span class="hljs-symbol"> harbor_admin_password:</span>Harbor12345<br><span class="hljs-symbol">data_volume:</span> <span class="hljs-meta-keyword">/data/</span>harbor<br><span class="hljs-symbol">log:</span><br><span class="hljs-symbol">    level:</span>  info<br><span class="hljs-symbol">    rotate_count:</span>  <span class="hljs-number">50</span><br><span class="hljs-symbol">    rotate_size:</span><span class="hljs-number">200</span>M<br><span class="hljs-symbol">    location:</span> <span class="hljs-meta-keyword">/data/</span>harbor/logs<br><br>[root@hdss7<span class="hljs-number">-200</span> opt]<span class="hljs-meta"># mkdir -p /data/harbor/logs</span><br></code></pre></td></tr></table></figure><h4 id="2-6-3-安装docker-compose"><a href="#2-6-3-安装docker-compose" class="headerlink" title="2.6.3.安装docker-compose"></a>2.6.3.安装docker-compose</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> <span class="hljs-keyword">opt</span>]# yum install docker-compose -<span class="hljs-keyword">y</span><br>Loaded plugin<span class="hljs-variable">s:</span> fastestmirror<br>Loading mirror speeds from cached hostfile<br> * base: mirrors.aliyun.<span class="hljs-keyword">com</span><br> * extra<span class="hljs-variable">s:</span> mirrors.aliyun.<span class="hljs-keyword">com</span><br> * <span class="hljs-keyword">update</span><span class="hljs-variable">s:</span> mirrors.aliyun.<span class="hljs-keyword">com</span><br>Package docker-compose-<span class="hljs-number">1.18</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el7.noarch already installed <span class="hljs-built_in">and</span> latest <span class="hljs-keyword">version</span><br>Nothing <span class="hljs-keyword">to</span> <span class="hljs-keyword">do</span><br></code></pre></td></tr></table></figure><h4 id="2-6-4-安装harbor"><a href="#2-6-4-安装harbor" class="headerlink" title="2.6.4.安装harbor"></a>2.6.4.安装harbor</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs gams">[root@hdss7<span class="hljs-number">-200</span> harbor]# ./install.sh <br><br>[Step <span class="hljs-number">0</span>]: checking installation environment ...<br><br>Note: docker version: <span class="hljs-number">19.03</span><span class="hljs-number">.4</span><br><br>Note: docker-compose version: <span class="hljs-number">1.18</span><span class="hljs-number">.0</span><br>................<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-portal ... done<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> nginx ... done<br><span class="hljs-function"><span class="hljs-title">Creating</span></span> registry ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> registryctl ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-db ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> redis ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-core ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-portal ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> harbor-jobservice ... <br><span class="hljs-function"><span class="hljs-title">Creating</span></span> nginx ... <br><br>?.----Harbor has been installed <span class="hljs-keyword">and</span> started successfully.----<br><br>Now you should be able to visit the admin portal at http:<span class="hljs-comment">//harbor.od.com. </span><br><span class="hljs-keyword">For</span> more details, please visit https:<span class="hljs-comment">//github.com/goharbor/harbor .</span><br></code></pre></td></tr></table></figure><h4 id="2-6-5-检查harbor启动情况"><a href="#2-6-5-检查harbor启动情况" class="headerlink" title="2.6.5.检查harbor启动情况"></a>2.6.5.检查harbor启动情况</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@hdss7-200 harbor]# docker-compose ps                     <span class="hljs-comment">//docker给起了一堆容器，单机编排</span><br>      Name                     Command               State             Ports          <br>--------------------------------------------------------------------------------------<br>harbor-core         /harbor/start.<span class="hljs-keyword">sh</span>                 Up                               <br>harbor-<span class="hljs-keyword">db</span>           /entrypoint.<span class="hljs-keyword">sh</span> postgres          Up      5432/tcp                 <br>harbor-jobservice   /harbor/start.<span class="hljs-keyword">sh</span>                 Up                               <br>harbor-<span class="hljs-keyword">log</span>          /bin/<span class="hljs-keyword">sh</span> -c /usr/<span class="hljs-keyword">local</span>/bin/ ...   Up      127.0.0.1:1514-&gt;10514/tcp<br>harbor-portal       nginx -<span class="hljs-keyword">g</span> daemon off;             Up      80/tcp                   <br>nginx               nginx -<span class="hljs-keyword">g</span> daemon off;             Up      0.0.0.0:180-&gt;80/tcp      <br>redis               docker-entrypoint.<span class="hljs-keyword">sh</span> redis ...   Up      6379/tcp                 <br>registry            /entrypoint.<span class="hljs-keyword">sh</span> /etc/regist ...   Up      5000/tcp   <br><br><br>[root@hdss7-200 harbor]# docker ps -a                               <span class="hljs-comment">//可以看到180映射到本机80port                     </span><br>CONTAINER ID        IMAGE                                               COMMAND                  CREATED             STATUS                   PORTS                       NAMES<br>d6880cca7143        goharbor/nginx-photon:v1.8.3                        &quot;nginx -<span class="hljs-keyword">g</span> &#x27;daemon of??   3 minutes ago       Up 3 minutes (healthy)   0.0.0.0:180-&gt;80/tcp         nginx<br>a5d166ffb68e        goharbor/harbor-jobservice:v1.8.3                   <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes                                         harbor-jobservice<br>e0ab65359cc4        goharbor/harbor-portal:v1.8.3                       &quot;nginx -<span class="hljs-keyword">g</span> &#x27;daemon of??   3 minutes ago       Up 3 minutes (healthy)   80/tcp                      harbor-portal<br>ef032bf896c0        goharbor/harbor-core:v1.8.3                         <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes (healthy)                               harbor-core<br>6c334c42ac9d        goharbor/redis-photon:v1.8.3                        &quot;docker-entrypoint.s??   3 minutes ago       Up 3 minutes             6379/tcp                    redis<br>257f4c4ef4d7        goharbor/harbor-<span class="hljs-keyword">db</span>:v1.8.3                           &quot;/entrypoint.<span class="hljs-keyword">sh</span> <span class="hljs-keyword">post</span>??   3 minutes ago       Up 3 minutes (healthy)   5432/tcp                    harbor-<span class="hljs-keyword">db</span><br>7e741324bb39        goharbor/registry-photon:v2.7.1-patch-2819-v1.8.3   &quot;/entrypoint.<span class="hljs-keyword">sh</span> /etc??   3 minutes ago       Up 3 minutes (healthy)   5000/tcp                    registry<br>a468bf625584        goharbor/harbor-registryctl:v1.8.3                  <span class="hljs-string">&quot;/harbor/start.sh&quot;</span>       3 minutes ago       Up 3 minutes (healthy)                               registryctl<br>41a1e79fc5d1        goharbor/harbor-<span class="hljs-keyword">log</span>:v1.8.3                          &quot;/bin/<span class="hljs-keyword">sh</span> -c /usr/<span class="hljs-keyword">loc</span>??   3 minutes ago       Up 3 minutes (healthy)   127.0.0.1:1514-&gt;10514/tcp   harbor-<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><h4 id="2-6-6-配置harbor的dns内网解析"><a href="#2-6-6-配置harbor的dns内网解析" class="headerlink" title="2.6.6.配置harbor的dns内网解析"></a>2.6.6.配置harbor的dns内网解析</h4>            <input type="checkbox" disabled checked="checked">hdss7-11.host.com 上          <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># vi /var/named/od.com.zone</span><br><span class="hljs-number">2019111002</span> ; serial<br>harbor             A    <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span><br><span class="hljs-comment">//注意serial前滚一个序号</span><br><br>[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># systemctl restart named</span><br>[<span class="hljs-meta">root@hdss7-11 ~</span>]<span class="hljs-meta"># dig -t A harbor.od.com +short</span><br><span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.200</span><br></code></pre></td></tr></table></figure><h4 id="2-6-7-安装nginx并配置"><a href="#2-6-7-安装nginx并配置" class="headerlink" title="2.6.7.安装nginx并配置"></a>2.6.7.安装nginx并配置</h4><blockquote><p>注意所在主机</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># yum install nginx</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># vi /etc/nginx/conf.d/harbor.od.com.conf</span><br>server &#123;<br>    listen       <span class="hljs-number">80</span>;<br>    server_name  harbor.od.com;<br><br>    client_max_body_size <span class="hljs-number">1000</span>m;<br><br>    location / &#123;<br>        proxy_pass http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">180</span>;<br>    &#125;<br>&#125;<br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># systemctl start nginx</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]<span class="hljs-comment"># systemctl enable nginx</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/nginx.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service.<br></code></pre></td></tr></table></figure><h4 id="2-6-8-浏览器打开http：-harbor-od-com"><a href="#2-6-8-浏览器打开http：-harbor-od-com" class="headerlink" title="2.6.8.浏览器打开http：//harbor.od.com"></a>2.6.8.浏览器打开http：<a href="http://harbor.od.com/">//harbor.od.com</a></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-11 ~]# curl harbor.od.com<br><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Harbor<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">base</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image/x-icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;favicon.ico?v=2&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;styles.c1fdd265f24063370a49.css&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">harbor-app</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;spinner spinner-lg app-loading&quot;</span>&gt;</span><br>            Loading...<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">harbor-app</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;runtime.26209474bfa8dc87a77c.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;scripts.c04548c4e6d1db502313.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;main.144e8ccd474a28572e81.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>1、浏览器输入：harbor.od.com 用户名：admin 密码：Harbor12345</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/login.png" alt="登录"></p><p><strong>2、新建项目</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/new_P.png" alt="新建项目"></p><p><strong>3、下载测试镜像并打给镜像打一个tag</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> harbor]# docker pull nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br><span class="hljs-number">1.7</span>.<span class="hljs-number">9</span>: Pulling from library/nginx<br>Image docker.io/library/nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span> uses outdated schema1 manifest format. Please upgrade <span class="hljs-keyword">to</span> <span class="hljs-keyword">a</span> schema2 image <span class="hljs-keyword">for</span> better future compatibility. More information at http<span class="hljs-variable">s:</span>//docs.docker.<span class="hljs-keyword">com</span>/registry/spec/deprecated-schema-v1/<br>a3ed95caeb02: Pull <span class="hljs-built_in">complete</span> <br><span class="hljs-number">6</span>f5424ebd796: Pull <span class="hljs-built_in">complete</span> <br>d15444df170<span class="hljs-variable">a:</span> Pull <span class="hljs-built_in">complete</span> <br>e83f073daa67: Pull <span class="hljs-built_in">complete</span> <br>a4d93e421023: Pull <span class="hljs-built_in">complete</span> <br><span class="hljs-number">084</span>adbca2647: Pull <span class="hljs-built_in">complete</span> <br>c9cec474c523: Pull <span class="hljs-built_in">complete</span> <br>Diges<span class="hljs-variable">t:</span> <span class="hljs-built_in">sha256</span>:e3456c851a152494c3e4ff5fcc26f240206abac0c9d794affb40e0714846c451<br>Statu<span class="hljs-variable">s:</span> Downloaded newer image <span class="hljs-keyword">for</span> nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>docker.io/library/nginx:<span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>[root@hdss7-<span class="hljs-number">200</span> harbor]# docker images |<span class="hljs-keyword">grep</span> <span class="hljs-number">1.7</span>.<span class="hljs-number">9</span><br>nginx                           <span class="hljs-number">1.7</span>.<span class="hljs-number">9</span>                      <span class="hljs-number">84581</span>e99d807        <span class="hljs-number">4</span> years ago         <span class="hljs-number">91.7</span>MB<br>[root@hdss7-<span class="hljs-number">200</span> harbor]# docker <span class="hljs-keyword">tag</span> <span class="hljs-number">84581</span>e99d807 harbor.od.<span class="hljs-keyword">com</span>/public/nginx:v1.<span class="hljs-number">7.9</span><br></code></pre></td></tr></table></figure><p><strong>4、登陆harbor并推送到仓库</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-200 harbor]</span># <span class="hljs-selector-tag">docker</span> <span class="hljs-selector-tag">login</span> <span class="hljs-selector-tag">harbor</span><span class="hljs-selector-class">.od</span><span class="hljs-selector-class">.com</span><br><span class="hljs-selector-tag">Username</span>: <span class="hljs-selector-tag">admin</span><br><span class="hljs-selector-tag">Password</span>: <br><span class="hljs-selector-tag">WARNING</span>! <span class="hljs-selector-tag">Your</span> <span class="hljs-selector-tag">password</span> <span class="hljs-selector-tag">will</span> <span class="hljs-selector-tag">be</span> <span class="hljs-selector-tag">stored</span> <span class="hljs-selector-tag">unencrypted</span> <span class="hljs-selector-tag">in</span> /<span class="hljs-selector-tag">root</span>/<span class="hljs-selector-class">.docker</span>/<span class="hljs-selector-tag">config</span><span class="hljs-selector-class">.json</span>.<br><span class="hljs-selector-tag">Configure</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">credential</span> <span class="hljs-selector-tag">helper</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">remove</span> <span class="hljs-selector-tag">this</span> <span class="hljs-selector-tag">warning</span>. <span class="hljs-selector-tag">See</span><br><span class="hljs-selector-tag">https</span>://<span class="hljs-selector-tag">docs</span><span class="hljs-selector-class">.docker</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">engine</span>/<span class="hljs-selector-tag">reference</span>/<span class="hljs-selector-tag">commandline</span>/<span class="hljs-selector-tag">login</span>/<span class="hljs-selector-id">#credentials-store</span><br><br><span class="hljs-selector-tag">Login</span> <span class="hljs-selector-tag">Succeeded</span><br><span class="hljs-selector-attr">[root@hdss7-200 harbor]</span># <span class="hljs-selector-tag">docker</span> <span class="hljs-selector-tag">push</span> <span class="hljs-selector-tag">harbor</span><span class="hljs-selector-class">.od</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">public</span>/<span class="hljs-selector-tag">nginx</span><span class="hljs-selector-pseudo">:v1.7.9</span><br><span class="hljs-selector-tag">The</span> <span class="hljs-selector-tag">push</span> <span class="hljs-selector-tag">refers</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">repository</span> <span class="hljs-selector-attr">[harbor.od.com/public/nginx]</span><br>5<span class="hljs-selector-tag">f70bf18a086</span>: <span class="hljs-selector-tag">Pushed</span> <br>4<span class="hljs-selector-tag">b26ab29a475</span>: <span class="hljs-selector-tag">Pushed</span> <br><span class="hljs-selector-tag">ccb1d68e3fb7</span>: <span class="hljs-selector-tag">Pushed</span> <br><span class="hljs-selector-tag">e387107e2065</span>: <span class="hljs-selector-tag">Pushed</span> <br>63<span class="hljs-selector-tag">bf84221cce</span>: <span class="hljs-selector-tag">Pushed</span> <br><span class="hljs-selector-tag">e02dce553481</span>: <span class="hljs-selector-tag">Pushed</span> <br><span class="hljs-selector-tag">dea2e4984e29</span>: <span class="hljs-selector-tag">Pushed</span> <br><span class="hljs-selector-tag">v1</span>.7.9: <span class="hljs-selector-tag">digest</span>: <span class="hljs-selector-tag">sha256</span><span class="hljs-selector-pseudo">:b1f5935eb2e9e2ae89c0b3e2e148c19068d91ca502e857052f14db230443e4c2</span> <span class="hljs-selector-tag">size</span>: 3012<br></code></pre></td></tr></table></figure><h4 id="2-6-9-检查"><a href="#2-6-9-检查" class="headerlink" title="2.6.9.检查"></a>2.6.9.检查</h4><p><strong>可以看到nginx镜像已推送到public下</strong></p><p><img src="/img/blog_image/Linux_k8S_Bin_contentImage/nginx.png" alt="Public"></p><h2 id="3-部署Master节点服务"><a href="#3-部署Master节点服务" class="headerlink" title="3.部署Master节点服务"></a>3.部署Master节点服务</h2><h3 id="3-1-部署etcd集群"><a href="#3-1-部署etcd集群" class="headerlink" title="3.1.部署etcd集群"></a>3.1.部署etcd集群</h3><h4 id="3-1-1-集群规划"><a href="#3-1-1-集群规划" class="headerlink" title="3.1.1.集群规划"></a>3.1.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip地址</th></tr></thead><tbody><tr><td>hdss7-12.host.com</td><td>etcd lead</td><td>10.4.7.12</td></tr><tr><td>hdss7-21.host.com</td><td>etcd follow</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>etcd follow</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以hdss7-12.host.com为例，另外两台部署方法类似</strong></p><h4 id="3-1-2-创建基于根证书的config配置文件"><a href="#3-1-2-创建基于根证书的config配置文件" class="headerlink" title="3.1.2.创建基于根证书的config配置文件"></a>3.1.2.创建基于根证书的config配置文件</h4>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com 上          <figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> ~]# vi /opt/certs/ca-config.json<br>&#123;<br>    <span class="hljs-string">&quot;signing&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;default&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span><br>        &#125;,<br>        <span class="hljs-string">&quot;profiles&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;server&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;server auth&quot;</span><br>                ]<br>            &#125;,<br>            <span class="hljs-string">&quot;client&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;client auth&quot;</span><br>                ]<br>            &#125;,<br>            <span class="hljs-string">&quot;peer&quot;</span>: &#123;<br>                <span class="hljs-string">&quot;expiry&quot;</span>: <span class="hljs-string">&quot;175200h&quot;</span>,<br>                <span class="hljs-string">&quot;usages&quot;</span>: [<br>                    <span class="hljs-string">&quot;signing&quot;</span>,<br>                    <span class="hljs-string">&quot;key encipherment&quot;</span>,<br>                    <span class="hljs-string">&quot;server auth&quot;</span>,<br>                    <span class="hljs-string">&quot;client auth&quot;</span><br>                ]<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;    <br></code></pre></td></tr></table></figure><h4 id="3-1-3-创建生成自签证书的签名请求（csr）的-json配置文件"><a href="#3-1-3-创建生成自签证书的签名请求（csr）的-json配置文件" class="headerlink" title="3.1.3.创建生成自签证书的签名请求（csr）的 json配置文件"></a>3.1.3.创建生成自签证书的签名请求（csr）的 json配置文件</h4><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> ~]# vi /opt/certs/etcd-peer-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-etcd&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>        <span class="hljs-string">&quot;10.4.7.11&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.12&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br>        <span class="hljs-string">&quot;10.4.7.22&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-1-4-生成etcd证书和私钥"><a href="#3-1-4-生成etcd证书和私钥" class="headerlink" title="3.1.4.生成etcd证书和私钥"></a>3.1.4.生成etcd证书和私钥</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-200</span> ~]# cd /opt/certs/<br>[root@hdss7<span class="hljs-number">-200</span> certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd-peer-csr.json |cfssl-<span class="hljs-type">json</span> -bare etcd-peer<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] generate received request<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] received CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] generating key: rsa<span class="hljs-number">-2048</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] encoded CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-keyword">INFO</span>] signed certificate <span class="hljs-keyword">with</span> <span class="hljs-type">serial</span> number <span class="hljs-number">319260464385476820097369736582871670367101389147</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">03</span>:<span class="hljs-number">17</span> [<span class="hljs-built_in">WARNING</span>] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable <span class="hljs-keyword">for</span><br>websites. <span class="hljs-keyword">For</span> more information see the Baseline Requirements <span class="hljs-keyword">for</span> the Issuance <span class="hljs-keyword">and</span> Management<br><span class="hljs-keyword">of</span> Publicly-<span class="hljs-keyword">Trusted</span> Certificates, v<span class="hljs-number">.1</span><span class="hljs-number">.1</span><span class="hljs-number">.6</span>, <span class="hljs-keyword">from</span> the CA/Browser Forum (https://cabforum.org);<br>specifically, section <span class="hljs-number">10.2</span><span class="hljs-number">.3</span> (&quot;Information Requirements&quot;).<br></code></pre></td></tr></table></figure><h4 id="3-1-5-检查生成的证书和私钥"><a href="#3-1-5-检查生成的证书和私钥" class="headerlink" title="3.1.5.检查生成的证书和私钥"></a>3.1.5.检查生成的证书和私钥</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 36<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-1-6-创建etcd用户"><a href="#3-1-6-创建etcd用户" class="headerlink" title="3.1.6.创建etcd用户"></a>3.1.6.创建etcd用户</h4>            <input type="checkbox" disabled checked="checked">hdss7-12.host.com 上          <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-12 opt]</span><span class="hljs-comment"># useradd -s /sbin/nologin -M etcd</span><br><span class="hljs-section">[root@hdss7-12 opt]</span><span class="hljs-comment"># id etcd</span><br><span class="hljs-attr">uid</span>=<span class="hljs-number">1000</span>(etcd) gid=<span class="hljs-number">1000</span>(etcd) groups=<span class="hljs-number">1000</span>(etcd)<br></code></pre></td></tr></table></figure><h4 id="3-1-7-下载软件，解压，做软链接"><a href="#3-1-7-下载软件，解压，做软链接" class="headerlink" title="3.1.7.下载软件，解压，做软链接"></a>3.1.7.下载软件，解压，做软链接</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">https</span>:<span class="hljs-comment">//github.com/etcd-io/etcd/tags   //这里用的3.1.20版本，目前不建议超过3.3的版本</span><br>[root<span class="hljs-variable">@hdss7-12</span> src]# tar xf etcd-v3.<span class="hljs-number">1.20</span>-linux-amd64.tar.gz -C /opt/<br>[root<span class="hljs-variable">@hdss7-12</span> src]# cd ..<br>[root<span class="hljs-variable">@hdss7-12</span> opt]# mv etcd-v3.<span class="hljs-number">1.20</span>-linux-amd64/ etcd-v3.<span class="hljs-number">1.20</span><br>[root<span class="hljs-variable">@hdss7-12</span> opt]# ln -s /opt/etcd-v3.<span class="hljs-number">1.20</span>/ /opt/etcd<br>[root<span class="hljs-variable">@hdss7-12</span> opt]# ll<br>total <span class="hljs-number">0</span><br>lrwxrwxrwx <span class="hljs-number">1</span> root   root   <span class="hljs-number">18</span> Nov <span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">22</span> etcd -&gt; /opt/etcd-v3.<span class="hljs-number">1.20</span>/<br>drwxr-xr-x <span class="hljs-number">3</span> <span class="hljs-number">478493</span> <span class="hljs-number">89939</span> <span class="hljs-number">123</span> Oct <span class="hljs-number">11</span>  <span class="hljs-number">2018</span> etcd-v3.<span class="hljs-number">1.20</span><br>drwxr-xr-x <span class="hljs-number">2</span> root   root   <span class="hljs-number">45</span> Nov <span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">20</span> src<br></code></pre></td></tr></table></figure><h4 id="3-1-8-创建目录，拷贝证书，私钥"><a href="#3-1-8-创建目录，拷贝证书，私钥" class="headerlink" title="3.1.8.创建目录，拷贝证书，私钥"></a>3.1.8.创建目录，拷贝证书，私钥</h4><h5 id="创建证书目录、数据目录、日志目录"><a href="#创建证书目录、数据目录、日志目录" class="headerlink" title="创建证书目录、数据目录、日志目录"></a>创建证书目录、数据目录、日志目录</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">12</span> opt]# mkdir -p <span class="hljs-regexp">/opt/</span>etcd<span class="hljs-regexp">/certs /</span>data<span class="hljs-regexp">/etcd /</span>data<span class="hljs-regexp">/logs/</span>etcd-server<br></code></pre></td></tr></table></figure><h5 id="拷贝3-1-4生成的证书文件"><a href="#拷贝3-1-4生成的证书文件" class="headerlink" title="拷贝3.1.4生成的证书文件"></a>拷贝3.1.4生成的证书文件</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-12 certs]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-12 certs]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">etcd-peer</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-12 certs]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">etcd-peer-kry</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-12 certs]</span># <span class="hljs-selector-tag">ll</span><br><span class="hljs-selector-tag">total</span> 12<br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1346 <span class="hljs-selector-tag">Nov</span> 16 14<span class="hljs-selector-pseudo">:31</span> <span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-------</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1679 <span class="hljs-selector-tag">Nov</span> 16 14<span class="hljs-selector-pseudo">:34</span> <span class="hljs-selector-tag">etcd-peer-key</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1428 <span class="hljs-selector-tag">Nov</span> 16 14<span class="hljs-selector-pseudo">:33</span> <span class="hljs-selector-tag">etcd-peer</span><span class="hljs-selector-class">.pem</span><br></code></pre></td></tr></table></figure><h4 id="3-1-9-创建etcd服务启动脚本"><a href="#3-1-9-创建etcd服务启动脚本" class="headerlink" title="3.1.9.创建etcd服务启动脚本"></a>3.1.9.创建etcd服务启动脚本</h4><p><strong>etcd集群各主机启动配置略有不同，配置其他节点时注意修改</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># vi /opt/etcd/etcd-server-startup.sh</span><br><span class="hljs-comment">#!/bin/sh</span><br>./etcd --name etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span> \<br>       --data-dir <span class="hljs-regexp">/data/</span>etcd/etcd-server \<br>       --listen-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --listen-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --quota-backend-bytes <span class="hljs-number">8000000000</span> \<br>       --initial-advertise-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --advertise-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --initial-cluster  etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> \<br>       --ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --client-cert-auth  \<br>       --trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --peer-key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --peer-client-cert-auth \<br>       --peer-trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --log-output stdout<br>       <br>       <span class="hljs-comment">#############配置说明#########</span><br>       --listen-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \            <span class="hljs-regexp">//</span>内部通信起的<span class="hljs-number">2380</span>端口                                                   <br>       --listen-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \ <span class="hljs-regexp">//</span>对外通信起的<span class="hljs-number">2379</span>端口<br>       --quota-backend-bytes <span class="hljs-number">8000000000</span> \                        <span class="hljs-regexp">//</span> 后端配额       <br>       --initial-advertise-peer-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> \<br>       --advertise-client-urls https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span>,http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span> \<br>       --initial-cluster  etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span>,etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span>=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> \<br>       --ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --client-cert-auth  \<br>       --trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --peer-cert-file .<span class="hljs-regexp">/certs/</span>etcd-peer.pem \<br>       --peer-key-file .<span class="hljs-regexp">/certs/</span>etcd-peer-key.pem \<br>       --peer-client-cert-auth \<br>       --peer-trusted-ca-file .<span class="hljs-regexp">/certs/</span>ca.pem \<br>       --log-output stdout<br> <br>[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># chmod +x /opt/etcd/etcd-server.startup.sh </span><br>[root@hdss7-<span class="hljs-number">12</span> ~]<span class="hljs-comment"># ll /opt/etcd/etcd-server.startup.sh </span><br>-rwxr-xr-x <span class="hljs-number">1</span> root root <span class="hljs-number">981</span> Nov <span class="hljs-number">16</span> <span class="hljs-number">14</span>:<span class="hljs-number">39</span> <span class="hljs-regexp">/opt/</span>etcd/etcd-server.startup.sh   <br></code></pre></td></tr></table></figure><h4 id="3-1-10-调整目录权限"><a href="#3-1-10-调整目录权限" class="headerlink" title="3.1.10.调整目录权限"></a>3.1.10.调整目录权限</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">12</span> ~]# chown -R etcd.etcd <span class="hljs-regexp">/opt/</span>etcd-v3.<span class="hljs-number">1.20</span><span class="hljs-regexp">/   /</span>data<span class="hljs-regexp">/etcd/</span>  <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/etcd-server/</span><br></code></pre></td></tr></table></figure><h4 id="3-1-11-安装supervison软件"><a href="#3-1-11-安装supervison软件" class="headerlink" title="3.1.11.安装supervison软件"></a>3.1.11.安装supervison软件</h4><p><strong>supervison是一个管理后台进程的软件，etcd进程掉了会自动拉起来</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># yum install supervisor -y</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># systemctl start supervisord</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-meta"># systemctl enable supervisord</span><br></code></pre></td></tr></table></figure><h4 id="3-1-12-创建etcd-server的启动配置"><a href="#3-1-12-创建etcd-server的启动配置" class="headerlink" title="3.1.12.创建etcd-server的启动配置"></a>3.1.12.创建etcd-server的启动配置</h4><p><strong>etcd集群各主机启动配置略有不同，配置其他节点时注意修改</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-12 ~]</span><span class="hljs-comment"># vi /etc/supervisord.d/etcd-server.ini</span><br><br><span class="hljs-section">[program:etcd-server-7-12]</span><br><span class="hljs-attr">command</span>=/opt/etcd/etcd-server-startup.sh                        <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                      <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/etcd                                             <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                  <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                    <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                  <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                   <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                 <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                 <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=etcd                                                       <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                            <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/etcd-server/etcd.stdout.log           <span class="hljs-comment">; stdout log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                    <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                        <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                     <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                     <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-1-13-启动etcd服务并检查"><a href="#3-1-13-启动etcd服务并检查" class="headerlink" title="3.1.13.启动etcd服务并检查"></a>3.1.13.启动etcd服务并检查</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl update</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>: added process group<br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>                 STARTING  <br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-12</span>                 RUNNING   pid <span class="hljs-number">20350</span>, uptime 0<span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">14</span><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-12</span> ~]<span class="hljs-comment"># netstat -luntp|grep etcd</span><br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><span class="hljs-symbol">:</span><span class="hljs-number">2379</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd        <br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">2379</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd        <br>tcp        0      0 <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><span class="hljs-symbol">:</span><span class="hljs-number">2380</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">22657</span>/./etcd RTING  <br></code></pre></td></tr></table></figure><h4 id="3-1-14-安装部署启动检查所有集群"><a href="#3-1-14-安装部署启动检查所有集群" class="headerlink" title="3.1.14.安装部署启动检查所有集群"></a>3.1.14.安装部署启动检查所有集群</h4><p><strong>和上述无区别,最主要是修改两个配置文件:</strong><br>1、/opt/etcd/etcd-server-startup.sh的ip地址，<br>2、/etc/supervisord.d/etcd-server.ini</p><p><strong>//修改supervisord启动ini文件的program标签，是为了更好区分主机，生产规范，强迫症患者的福音，不修改不会造成启动失败</strong></p><h4 id="3-1-15-检查集群状态"><a href="#3-1-15-检查集群状态" class="headerlink" title="3.1.15.检查集群状态"></a>3.1.15.检查集群状态</h4><p><strong>任意节点输入</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> etcd]<span class="hljs-comment"># ./etcdctl  cluster-health</span><br>member <span class="hljs-number">988139385</span>f78284 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>member <span class="hljs-number">5</span>a0ef2a004fc4349 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>member f4a0cb0a765574a8 is healthy: got healthy result from http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span><br>cluster is healthy<br><br><br>[root@hdss7-<span class="hljs-number">21</span> etcd]<span class="hljs-comment"># ./etcdctl member list</span><br><span class="hljs-number">988139385</span>f78284: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">22</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.22</span>:<span class="hljs-number">2379</span> isLeader=false<br><span class="hljs-number">5</span>a0ef2a004fc4349: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">21</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.21</span>:<span class="hljs-number">2379</span> isLeader=false<br>f4a0cb0a765574a8: name=etcd-server-<span class="hljs-number">7</span>-<span class="hljs-number">12</span> peerURLs=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2380</span> clientURLs=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">2379</span>,https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span>:<span class="hljs-number">2379</span> isLeader=true<br></code></pre></td></tr></table></figure><h3 id="3-2-部署kube-apiserver集群"><a href="#3-2-部署kube-apiserver集群" class="headerlink" title="3.2.部署kube-apiserver集群"></a>3.2.部署kube-apiserver集群</h3><h4 id="3-2-1-集群规划"><a href="#3-2-1-集群规划" class="headerlink" title="3.2.1.集群规划"></a>3.2.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th><th>vip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-apiserver</td><td>10.4.7.21</td><td>无</td></tr><tr><td>hdss7-22.host.com</td><td>kube-apiserver</td><td>10.4.7.22</td><td>无</td></tr><tr><td>hdss7-11.host.com</td><td>L4</td><td>10.4.7.11</td><td>10.4.7.10</td></tr><tr><td>hdss7-12.host.com</td><td>L4</td><td>10.4.7.12</td><td>10.4.7.10</td></tr></tbody></table><p>注意：hdss7-11和hdss7-12使用nginx做4层负载均衡器，keepalived跑一个VIP：10.4.7.10，代理两个kube-apiserver，实现高可用。<br><strong>这里以hdss21为例，另外一台运算节点部署方法类似</strong></p><h4 id="3-2-2-下载软件，解压，做软链接"><a href="#3-2-2-下载软件，解压，做软链接" class="headerlink" title="3.2.2.下载软件，解压，做软链接"></a>3.2.2.下载软件，解压，做软链接</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs tap">官方github地址：github.com/kubernetes/releasses/tag/v1.15.4    //这里是v1.15.2版本<br>下载方法：点击版本号 → CHANGELOG-1.15.md → DOWNLOAD → server binaries → 找到kubenetes-server-linux-amd64.tar.gz<br><br>[root@hdss7-21 src]<span class="hljs-comment"># tar xf kubernetes-server-linux-amd64-v1.15.2.tar.gz  -C /opt</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># mv kubernetes/ kubernetes-v1.15.2</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># ln -s /opt/kubernetes-v1.15.2/ /opt/kubernetes</span><br>[root@hdss7-21 opt]<span class="hljs-comment"># ll</span><br>total 0<br>drwx--x--x<span class="hljs-number"> 4 </span>root root <span class="hljs-number"> 28 </span>Nov<span class="hljs-number"> 16 </span>03:06 containerd<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 18 </span>Nov<span class="hljs-number"> 16 </span>15:44 etcd -&gt; /opt/etcd-v3.1.20/<br>drwxr-xr-x<span class="hljs-number"> 4 </span>etcd etcd<span class="hljs-number"> 166 </span>Nov<span class="hljs-number"> 17 </span>00:39 etcd-v3.1.20<br>lrwxrwxrwx<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 24 </span>Nov<span class="hljs-number"> 17 </span>01:35 kubernetes -&gt; /opt/kubernetes-v1.15.2/<br>drwxr-xr-x<span class="hljs-number"> 4 </span>root root <span class="hljs-number"> 79 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubernetes-v1.15.2<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root<span class="hljs-number"> 306 </span>Nov<span class="hljs-number"> 16 </span>15:41 src<br><br><br>//删掉无用的源码包，bin下无用的tag，tar文件，不用adm方式部署，所以可以删除<br>[root@hdss7-21 opt]<span class="hljs-comment"># cd kubernetes</span><br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># ls</span><br>addons  kubernetes-src.tar.gz  LICENSES  server<br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># rm -rf kubernetes-src.tar.gz </span><br>[root@hdss7-21 kubernetes]<span class="hljs-comment"># ll</span><br>total 1180<br>drwxr-xr-x<span class="hljs-number"> 2 </span>root root      <span class="hljs-number"> 6 </span>Aug <span class="hljs-number"> 5 </span>18:01 addons<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1205293 </span>Aug <span class="hljs-number"> 5 </span>18:01 LICENSES<br>drwxr-xr-x<span class="hljs-number"> 3 </span>root root     <span class="hljs-number"> 17 </span>Aug <span class="hljs-number"> 5 </span>17:57 server<br>[root@hdss7-21 bin]<span class="hljs-comment"># rm -f *.tar</span><br>[root@hdss7-21 bin]<span class="hljs-comment"># rm -f *_tag</span><br>[root@hdss7-21 bin]<span class="hljs-comment"># ll</span><br>total 884636<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 43534816 </span>Aug <span class="hljs-number"> 5 </span>18:01 apiextensions-apiserver<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 100548640 </span>Aug <span class="hljs-number"> 5 </span>18:01 cloud-controller-manager<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 200648416 </span>Aug <span class="hljs-number"> 5 </span>18:01 hyperkube<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 40182208 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubeadm<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 164501920 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-apiserver<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 116397088 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-controller-manager<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 42985504 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubectl<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 119616640 </span>Aug <span class="hljs-number"> 5 </span>18:01 kubelet<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 36987488 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-proxy<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 38786144 </span>Aug <span class="hljs-number"> 5 </span>18:01 kube-scheduler<br>-rwxr-xr-x<span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 1648224 </span>Aug <span class="hljs-number"> 5 </span>18:01 mounter<br></code></pre></td></tr></table></figure><h4 id="3-2-3-签发client证书"><a href="#3-2-3-签发client证书" class="headerlink" title="3.2.3.签发client证书"></a>3.2.3.签发client证书</h4>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200上          <h5 id="3-2-3-1-创建生成证书签名请求（csr）的json配置文件"><a href="#3-2-3-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="3.2.3.1.创建生成证书签名请求（csr）的json配置文件"></a>3.2.3.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]#  vi /opt/certs/client-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-node&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-2-3-2-生成clent证书和私钥"><a href="#3-2-3-2-生成clent证书和私钥" class="headerlink" title="3.2.3.2.生成clent证书和私钥"></a>3.2.3.2.生成clent证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=client client-csr.json |cfssl-json -bare client<br></code></pre></td></tr></table></figure><h5 id="3-2-3-3-检查生成的证书和私钥"><a href="#3-2-3-3-检查生成的证书和私钥" class="headerlink" title="3.2.3.3.检查生成的证书和私钥"></a>3.2.3.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 52<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 280 </span>Nov<span class="hljs-number"> 16 </span>17:45 client-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:47 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-2-4-签发kube-apiserver证书"><a href="#3-2-4-签发kube-apiserver证书" class="headerlink" title="3.2.4.签发kube-apiserver证书"></a>3.2.4.签发kube-apiserver证书</h4>            <input type="checkbox" disabled checked="checked">运维主机hdss7-200上          <h5 id="3-2-4-1-创建生成证书签名请求（csr）的-json配置文件"><a href="#3-2-4-1-创建生成证书签名请求（csr）的-json配置文件" class="headerlink" title="3.2.4.1.创建生成证书签名请求（csr）的 json配置文件"></a>3.2.4.1.创建生成证书签名请求（csr）的 json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]# vi /opt/certs/apiserver-csr.json <br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-apiserver&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br><span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br><span class="hljs-string">&quot;192.168.0.1&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc.cluster&quot;</span>,<br><span class="hljs-string">&quot;kubernetes.default.svc.cluster.local&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.10&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.22&quot;</span>,<br><span class="hljs-string">&quot;10.4.7.23&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3-2-4-2-生成kube-apiserver证书和私钥"><a href="#3-2-4-2-生成kube-apiserver证书和私钥" class="headerlink" title="3.2.4.2.生成kube-apiserver证书和私钥"></a>3.2.4.2.生成kube-apiserver证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=server apiserver-csr.json |cfssl-json -bare apiserver<br></code></pre></td></tr></table></figure><h5 id="3-2-4-3-检查生成的证书和私钥"><a href="#3-2-4-3-检查生成的证书和私钥" class="headerlink" title="3.2.4.3.检查生成的证书和私钥"></a>3.2.4.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 68<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1249 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 567 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1598 </span>Nov<span class="hljs-number"> 16 </span>17:55 apiserver.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 836 </span>Nov<span class="hljs-number"> 16 </span>13:52 ca-config.json<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 328 </span>Nov<span class="hljs-number"> 11 </span>00:29 ca-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 11 </span>00:30 ca.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 993 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 280 </span>Nov<span class="hljs-number"> 16 </span>17:45 client-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>17:47 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 16 </span>17:47 client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1062 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 363 </span>Nov<span class="hljs-number"> 16 </span>13:59 etcd-peer-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1428 </span>Nov<span class="hljs-number"> 16 </span>14:03 etcd-peer.pem<br></code></pre></td></tr></table></figure><h4 id="3-2-5-拷贝证书至各运算节点，并创建配置"><a href="#3-2-5-拷贝证书至各运算节点，并创建配置" class="headerlink" title="3.2.5.拷贝证书至各运算节点，并创建配置"></a>3.2.5.拷贝证书至各运算节点，并创建配置</h4><h5 id="3-2-5-1-拷贝3套证书到…-bin-cert目录"><a href="#3-2-5-1-拷贝3套证书到…-bin-cert目录" class="headerlink" title="3.2.5.1.拷贝3套证书到…/bin/cert目录"></a>3.2.5.1.拷贝3套证书到…/bin/cert目录</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">ca-key</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">client</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">client-key</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">apiserver</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">apiserver-key</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">ll</span><br><span class="hljs-selector-tag">total</span> 24<br><span class="hljs-selector-tag">-rw-------</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1679 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:11</span> <span class="hljs-selector-tag">apiserver-key</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1598 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:08</span> <span class="hljs-selector-tag">apiserver</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-------</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1679 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:07</span> <span class="hljs-selector-tag">ca-key</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1346 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:06</span> <span class="hljs-selector-tag">ca</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-------</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1679 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:08</span> <span class="hljs-selector-tag">client-key</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1363 <span class="hljs-selector-tag">Nov</span> 17 02<span class="hljs-selector-pseudo">:07</span> <span class="hljs-selector-tag">client</span><span class="hljs-selector-class">.pem</span><br></code></pre></td></tr></table></figure><h5 id="3-2-5-2-创建配置"><a href="#3-2-5-2-创建配置" class="headerlink" title="3.2.5.2.创建配置"></a>3.2.5.2.创建配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">bin</span>]<span class="hljs-comment"># mkdir conf</span><br>[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">conf</span>]<span class="hljs-comment"># vi audit.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">audit.k8s.io/v1beta1</span> <span class="hljs-comment"># This is required.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Policy</span><br><span class="hljs-comment"># Don&#x27;t generate audit events for all requests in RequestReceived stage.</span><br><span class="hljs-attr">omitStages:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;RequestReceived&quot;</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-comment"># Log pod changes at RequestResponse level</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">RequestResponse</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-comment"># Resource &quot;pods&quot; doesn&#x27;t match requests to any subresource of pods,</span><br>      <span class="hljs-comment"># which is consistent with the RBAC policy.</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;pods&quot;</span>]<br>  <span class="hljs-comment"># Log &quot;pods/log&quot;, &quot;pods/status&quot; at Metadata level</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;pods/log&quot;</span>, <span class="hljs-string">&quot;pods/status&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log requests to a configmap called &quot;controller-leader&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;configmaps&quot;</span>]<br>      <span class="hljs-attr">resourceNames:</span> [<span class="hljs-string">&quot;controller-leader&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log watch requests by the &quot;system:kube-proxy&quot; on endpoints or services</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">users:</span> [<span class="hljs-string">&quot;system:kube-proxy&quot;</span>]<br>    <span class="hljs-attr">verbs:</span> [<span class="hljs-string">&quot;watch&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;endpoints&quot;</span>, <span class="hljs-string">&quot;services&quot;</span>]<br><br>  <span class="hljs-comment"># Don&#x27;t log authenticated requests to certain non-resource URL paths.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">None</span><br>    <span class="hljs-attr">userGroups:</span> [<span class="hljs-string">&quot;system:authenticated&quot;</span>]<br>    <span class="hljs-attr">nonResourceURLs:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/api*&quot;</span> <span class="hljs-comment"># Wildcard matching.</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;/version&quot;</span><br><br>  <span class="hljs-comment"># Log the request body of configmap changes in kube-system.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Request</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;configmaps&quot;</span>]<br>    <span class="hljs-comment"># This rule only applies to resources in the &quot;kube-system&quot; namespace.</span><br>    <span class="hljs-comment"># The empty string &quot;&quot; can be used to select non-namespaced resources.</span><br>    <span class="hljs-attr">namespaces:</span> [<span class="hljs-string">&quot;kube-system&quot;</span>]<br><br>  <span class="hljs-comment"># Log configmap and secret changes in all other namespaces at the Metadata level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>      <span class="hljs-attr">resources:</span> [<span class="hljs-string">&quot;secrets&quot;</span>, <span class="hljs-string">&quot;configmaps&quot;</span>]<br><br>  <span class="hljs-comment"># Log all other resources in core and extensions at the Request level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Request</span><br>    <span class="hljs-attr">resources:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># core API group</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;extensions&quot;</span> <span class="hljs-comment"># Version of group should NOT be included.</span><br><br>  <span class="hljs-comment"># A catch-all rule to log all other requests at the Metadata level.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">level:</span> <span class="hljs-string">Metadata</span><br>    <span class="hljs-comment"># Long-running requests like watches that fall under this rule will not</span><br>    <span class="hljs-comment"># generate an audit event in RequestReceived.</span><br>    <span class="hljs-attr">omitStages:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;RequestReceived&quot;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-6-创建apiserver启动脚本"><a href="#3-2-6-创建apiserver启动脚本" class="headerlink" title="3.2.6.创建apiserver启动脚本"></a>3.2.6.创建apiserver启动脚本</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">[root@hdss7-21 bin]<span class="hljs-comment"># vi /opt/kubernetes/server/bin/kube-apiserver.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-string">./kube-apiserver</span> \<br>  <span class="hljs-params">--apiserver-count</span> 2 \<br>  <span class="hljs-params">--audit-log-path</span> <span class="hljs-string">/data/logs/kubernetes/kube-apiserver/audit-log</span> \<br>  <span class="hljs-params">--audit-policy-file</span> <span class="hljs-string">./conf/audit.yaml</span> \<br>  <span class="hljs-params">--authorization-mode</span> RBAC \<br>  <span class="hljs-params">--client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--requestheader-client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--enable-admission-plugins</span> NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \<br>  <span class="hljs-params">--etcd-cafile</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--etcd-certfile</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--etcd-keyfile</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--etcd-servers</span> https:<span class="hljs-string">//10.4.7.12</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.21</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.22</span><span class="hljs-function">:2379</span> \<br>  <span class="hljs-params">--service-account-key-file</span> <span class="hljs-string">./cert/ca-key.pem</span> \<br>  <span class="hljs-params">--service-cluster-ip-range</span> 192.168.0.0/16 \<br>  <span class="hljs-params">--service-node-port-range</span> 3000-29999 \<br>  <span class="hljs-params">--target-ram-mb=1024</span> \<br>  <span class="hljs-params">--kubelet-client-certificate</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--kubelet-client-key</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--log-dir</span>  <span class="hljs-string">/data/logs/kubernetes/kube-apiserver</span> \<br>  <span class="hljs-params">--tls-cert-file</span> <span class="hljs-string">./cert/apiserver.pem</span> \<br>  <span class="hljs-params">--tls-private-key-file</span> <span class="hljs-string">./cert/apiserver-key.pem</span> \<br>  <span class="hljs-params">--v</span> 2<br> <br> <span class="hljs-comment">#################参数说明############</span><br>    <span class="hljs-params">--apiserver-count</span> 2 \                     <span class="hljs-string">//</span> apiserver数量，有资源可以给3个                 <br>  <span class="hljs-params">--audit-log-path</span> <span class="hljs-string">/data/logs/kubernetes/kube-apiserver/audit-log</span> \   <span class="hljs-string">//</span>日志目录<br>  <span class="hljs-params">--audit-policy-file</span> <span class="hljs-string">./conf/audit.yaml</span> \                   <span class="hljs-string">//</span>日志审计规则<br>  <span class="hljs-params">--authorization-mode</span> RBAC \                           <span class="hljs-string">//RBAC</span> --基于角色访问的控制<br>  <span class="hljs-params">--client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--requestheader-client-ca-file</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--enable-admission-plugins</span> NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota \<br>  <span class="hljs-params">--etcd-cafile</span> <span class="hljs-string">./cert/ca.pem</span> \<br>  <span class="hljs-params">--etcd-certfile</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--etcd-keyfile</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--etcd-servers</span> https:<span class="hljs-string">//10.4.7.12</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.21</span><span class="hljs-function">:2379</span>,https:<span class="hljs-string">//10.4.7.22</span><span class="hljs-function">:2379</span> \<br>  <span class="hljs-params">--service-account-key-file</span> <span class="hljs-string">./cert/ca-key.pem</span> \<br>  <span class="hljs-params">--service-cluster-ip-range</span> 192.168.0.0/16 \<br>  <span class="hljs-params">--service-node-port-range</span> 3000-29999 \<br>  <span class="hljs-params">--target-ram-mb=1024</span> \                                              <br>  <span class="hljs-params">--kubelet-client-certificate</span> <span class="hljs-string">./cert/client.pem</span> \<br>  <span class="hljs-params">--kubelet-client-key</span> <span class="hljs-string">./cert/client-key.pem</span> \<br>  <span class="hljs-params">--log-dir</span>  <span class="hljs-string">/data/logs/kubernetes/kube-apiserver</span> \<br>  <span class="hljs-params">--tls-cert-file</span> <span class="hljs-string">./cert/apiserver.pem</span> \<br>  <span class="hljs-params">--tls-private-key-file</span> <span class="hljs-string">./cert/apiserver-key.pem</span> \<br>  <span class="hljs-params">--v</span> 2                                 <span class="hljs-string">//log</span> Level  是v 2 <br>  更多说明请看例子：<br>  [root@hdss7-21 bin]<span class="hljs-comment"># ./kube-apiserver  --help|grep -A 5 target-ram-mb</span><br>      <span class="hljs-params">--target-ram-mb</span> int                            Memory limit for apiserver in MB <span class="hljs-params">(used to configure sizes of caches, etc.)</span><br><br>Etcd flags:<br><br>      <span class="hljs-params">--default-watch-cache-size</span> int             Default watch cache size. If zero, watch cache will be disabled for resources that do not have a default watch size <span class="hljs-keyword">set</span>. <span class="hljs-params">(default 100)</span><br>      <span class="hljs-params">--delete-collection-workers</span> int            Number of workers spawned for DeleteCollection call. These are used to speed up namespace cleanup. <span class="hljs-params">(default 1)</span><br></code></pre></td></tr></table></figure><h4 id="3-2-7-调整权限和目录"><a href="#3-2-7-调整权限和目录" class="headerlink" title="3.2.7.调整权限和目录"></a>3.2.7.调整权限和目录</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-meta"># chmod +x kube-apiserver.sh</span><br>[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-meta"># mkdir -p /data/logs/kubernetes/kube-apiserver</span><br></code></pre></td></tr></table></figure><h4 id="3-2-8-创建supervisor配置"><a href="#3-2-8-创建supervisor配置" class="headerlink" title="3.2.8.创建supervisor配置"></a>3.2.8.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment">#  vi /etc/supervisord.d/kube-apiserver.ini</span><br><span class="hljs-section">[program:kube-apiserver-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-apiserver.sh            <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                      <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                            <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                  <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                    <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                  <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                   <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                 <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                 <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                       <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                            <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-apiserver/apiserver.stdout.log        <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                    <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                        <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                     <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                     <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-2-9-启动服务并检查"><a href="#3-2-9-启动服务并检查" class="headerlink" title="3.2.9.启动服务并检查"></a>3.2.9.启动服务并检查</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># supervisorctl update</span><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># supervisorctl status</span><br>etcd-server<span class="hljs-number">-7</span><span class="hljs-number">-21</span>                 RUNNING   pid <span class="hljs-number">1716</span>, uptime <span class="hljs-number">2</span><span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">19</span><br>kube-apiserver<span class="hljs-number">-7</span><span class="hljs-number">-21</span>              RUNNING   pid <span class="hljs-number">2032</span>, uptime 0<span class="hljs-symbol">:</span>01<span class="hljs-symbol">:</span><span class="hljs-number">33</span><br><br>[root<span class="hljs-variable">@hdss7</span><span class="hljs-number">-21</span> bin]<span class="hljs-comment"># netstat -nltup|grep kube-api</span><br>tcp        0      0 <span class="hljs-number">127.0</span>.0.<span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">8080</span>          0.0.0.0<span class="hljs-symbol">:*</span>               LISTEN      <span class="hljs-number">2033</span>/./kube-apiserv <br>tcp6       0      0 ::<span class="hljs-symbol">:</span><span class="hljs-number">6443</span>                 ::<span class="hljs-symbol">:*</span>                    LISTEN      <span class="hljs-number">2033</span>/./kube-apiserv <br></code></pre></td></tr></table></figure><h4 id="3-2-10-安装部署启动检查所有集群"><a href="#3-2-10-安装部署启动检查所有集群" class="headerlink" title="3.2.10.安装部署启动检查所有集群"></a>3.2.10.安装部署启动检查所有集群</h4><p><strong>hdss7-22 跟上述基本相同</strong><br>/etc/supervisord.d/kube-apiserver.ini<br>需要更改成[program:kube-apiserver-7-22]</p><h4 id="3-2-11-配四层反向代理"><a href="#3-2-11-配四层反向代理" class="headerlink" title="3.2.11.配四层反向代理"></a>3.2.11.配四层反向代理</h4><p><strong>VIP 10.4.7.10：7443代理 两台apiserver的6443端口，此处会用到keepalived</strong></p><h5 id="3-2-11-1安装nginx和keepalived"><a href="#3-2-11-1安装nginx和keepalived" class="headerlink" title="3.2.11.1安装nginx和keepalived"></a>3.2.11.1安装nginx和keepalived</h5><h6 id="hdss7-11和hdss7-12都安装nginx和keepalived"><a href="#hdss7-11和hdss7-12都安装nginx和keepalived" class="headerlink" title="hdss7-11和hdss7-12都安装nginx和keepalived"></a>hdss7-11和hdss7-12都安装nginx和keepalived</h6><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-12</span> etcd]<span class="hljs-meta"># yum install nginx -y</span><br></code></pre></td></tr></table></figure><h6 id="hdss7-11和hdss7-12配置nginx-conf"><a href="#hdss7-11和hdss7-12配置nginx-conf" class="headerlink" title="hdss7-11和hdss7-12配置nginx.conf"></a>hdss7-11和hdss7-12配置nginx.conf</h6><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@hdss7<span class="hljs-number">-11</span> conf.d]<span class="hljs-meta"># vi /etc/nginx/nginx.conf        <span class="hljs-comment">//最后追加</span></span><br><span class="hljs-class">stream </span>&#123;<br>    upstream kube-<span class="hljs-class">apiserver </span>&#123;<br>        server <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.21</span>:<span class="hljs-number">6443</span>     max_fails=<span class="hljs-number">3</span> fail_timeout=<span class="hljs-number">30</span>s;<br>        server <span class="hljs-number">10.4</span><span class="hljs-number">.7</span><span class="hljs-number">.22</span>:<span class="hljs-number">6443</span>     max_fails=<span class="hljs-number">3</span> fail_timeout=<span class="hljs-number">30</span>s;<br>    &#125;<br>    <span class="hljs-class">server </span>&#123;<br>        listen <span class="hljs-number">7443</span>;<br>        proxy_connect_timeout <span class="hljs-number">2</span>s;<br>        proxy_timeout <span class="hljs-number">900</span>s;<br>        proxy_pass kube-apiserver;<br>    &#125;<br>&#125;<br>[root@hdss7<span class="hljs-number">-12</span> etcd]<span class="hljs-meta"># nginx -t</span><br><span class="hljs-symbol">nginx:</span> the configuration file <span class="hljs-meta-keyword">/etc/</span>nginx/nginx.conf syntax is ok<br><span class="hljs-symbol">nginx:</span> configuration file <span class="hljs-meta-keyword">/etc/</span>nginx/nginx.conf test is successful<br></code></pre></td></tr></table></figure><h6 id="hdss7-11和hdss7-12配置keepalived"><a href="#hdss7-11和hdss7-12配置keepalived" class="headerlink" title="hdss7-11和hdss7-12配置keepalived"></a>hdss7-11和hdss7-12配置keepalived</h6><p>检查脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># vi /etc/keepalived/check_port.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#keepalived 监控端口脚本</span><br><span class="hljs-comment">#使用方法：</span><br><span class="hljs-comment">#在keepalived的配置文件中</span><br><span class="hljs-comment">#vrrp_script check_port &#123;#创建一个vrrp_script脚本,检查配置</span><br><span class="hljs-comment">#    script &quot;/etc/keepalived/check_port.sh 6379&quot; #配置监听的端口</span><br><span class="hljs-comment">#    interval 2 #检查脚本的频率,单位（秒）</span><br><span class="hljs-comment">#&#125;</span><br>CHK_PORT=<span class="hljs-variable">$1</span><br><span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;$CHK_PORT&quot;</span> ];then<br>        PORT_PROCESS=`ss -lnt|grep <span class="hljs-variable">$CHK_PORT</span>|wc -l`<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$PORT_PROCESS</span> -eq <span class="hljs-number">0</span> ];then<br>                echo <span class="hljs-string">&quot;Port $CHK_PORT Is Not Used,End.&quot;</span><br>                <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>        fi<br><span class="hljs-keyword">else</span><br>        echo <span class="hljs-string">&quot;Check Port Cant Be Empty!&quot;</span><br>fi<br><br>[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># chmod +x /etc/keepalived/check_port.sh </span><br></code></pre></td></tr></table></figure><p>配置文件</p><blockquote><p>interface eth0  eth0要和系统网卡名称匹配</p></blockquote><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs puppet">keepalived 主:<br>[root@hdss7-11 conf.d]<span class="hljs-comment"># vi /etc/keepalived/keepalived.conf </span><br><br>! Configuration File for keepalived<br><br><span class="hljs-keyword">global_defs</span> &#123;<br>   router_id <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><br><br>&#125;<br><br><span class="hljs-keyword">vrrp_script</span> <span class="hljs-keyword">chk_nginx</span> &#123;<br>    script <span class="hljs-string">&quot;/etc/keepalived/check_port.sh 7443&quot;</span><br>    interval <span class="hljs-number">2</span><br>    weight -<span class="hljs-number">20</span><br>&#125;<br><br><span class="hljs-keyword">vrrp_instance</span> <span class="hljs-keyword">VI_1</span> &#123;<br>    state MASTER<br>    interface eth<span class="hljs-number">0</span> ←----------------------------这个要和系统网卡名称匹配<br>    virtual_router_id <span class="hljs-number">251</span><br>    <span class="hljs-literal">priority</span> <span class="hljs-number">100</span><br>    advert_int <span class="hljs-number">1</span><br>    mcast_src_ip <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span><br>    nopreempt<br><br>    authentication &#123;<br>        <span class="hljs-literal">auth_type</span> PASS<br>        auth_pass <span class="hljs-number">11111111</span><br>    &#125;<br>    <span class="hljs-keyword">track_script</span> &#123;<br>         chk_nginx<br>    &#125;<br>    <span class="hljs-keyword">virtual_ipaddress</span> &#123;<br>        <span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span><br>    &#125;<br>&#125;<br><br><br><br>keepalived从:<br>[root@hdss7-12 conf.d]<span class="hljs-comment"># vi /etc/keepalived/keepalived.conf </span><br><br>! Configuration File for keepalived<br><span class="hljs-keyword">global_defs</span> &#123;<br>router_id <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><br>&#125;<br><span class="hljs-keyword">vrrp_script</span> <span class="hljs-keyword">chk_nginx</span> &#123;<br>script <span class="hljs-string">&quot;/etc/keepalived/check_port.sh 7443&quot;</span><br>interval <span class="hljs-number">2</span><br>weight -<span class="hljs-number">20</span><br>&#125;<br><span class="hljs-keyword">vrrp_instance</span> <span class="hljs-keyword">VI_1</span> &#123;<br>state BACKUP<br>interface eth<span class="hljs-number">0</span><br>virtual_router_id <span class="hljs-number">251</span><br>mcast_src_ip <span class="hljs-number">10.4</span>.<span class="hljs-number">7.12</span><br><span class="hljs-literal">priority</span> <span class="hljs-number">90</span><br>advert_int <span class="hljs-number">1</span><br>authentication &#123;<br><span class="hljs-literal">auth_type</span> PASS<br>auth_pass <span class="hljs-number">11111111</span><br>&#125;<br><span class="hljs-keyword">track_script</span> &#123;<br>chk_nginx<br>&#125;<br><span class="hljs-keyword">virtual_ipaddress</span> &#123;<br><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-2-12-启动代理并检查"><a href="#3-2-12-启动代理并检查" class="headerlink" title="3.2.12.启动代理并检查"></a>3.2.12.启动代理并检查</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>hdss7-<span class="hljs-number">11</span>和hdss7-<span class="hljs-number">12</span>上启动nginx<br>~]<span class="hljs-comment"># systemctl start nginx</span><br>~]<span class="hljs-comment"># systemctl enable nginx</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/nginx.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>nginx.service.<br>~]<span class="hljs-comment"># netstat -nltup|grep nginx</span><br>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">80</span>              <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:*               LISTEN      <span class="hljs-number">21520</span>/nginx: master <br>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">7443</span>            <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:*               LISTEN      <span class="hljs-number">21520</span>/nginx: master <br>tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> :::<span class="hljs-number">80</span>                   :::*                    LISTEN      <span class="hljs-number">21520</span>/nginx: master <br><br><span class="hljs-regexp">//</span>hdss7-<span class="hljs-number">11</span>和hdss7-<span class="hljs-number">12</span>上启动keepalived<br>~]<span class="hljs-comment"># systemctl start keepalived.service</span><br>~]<span class="hljs-comment"># systemctl enable  keepalived</span><br>Created symlink from <span class="hljs-regexp">/etc/</span>systemd<span class="hljs-regexp">/system/mu</span>lti-user.target.wants<span class="hljs-regexp">/keepalived.service to /u</span>sr<span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>keepalived.service.<br><br><span class="hljs-regexp">//</span>检查<br>[root@hdss7-<span class="hljs-number">11</span> ~]<span class="hljs-comment"># ip addr</span><br><span class="hljs-number">2</span>: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="hljs-number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>c:f4:<span class="hljs-number">9</span>e brd ff:ff:ff:ff:ff:ff<br>    inet <span class="hljs-number">10.4</span>.<span class="hljs-number">7.11</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">10.4</span>.<span class="hljs-number">7.255</span> scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet <span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>/<span class="hljs-number">32</span> scope global eth0<br>       valid_lft forever preferred_lft forever<br><br><span class="hljs-regexp">//</span>VIP漂移测试<br>nginx -s stop测试，略。。。<br></code></pre></td></tr></table></figure><p><strong>注意：keepalived hdss7-11配置 nopreempt，意为非抢占式</strong><br><strong>原因：如果抢占式，假如生产网络抖动原因，check_port脚本探测不到，VIP有可能会动触发报警，VIP漂移在生产上属于重大生产事故，是要写故障报告的，是无法忍受的</strong></p><h3 id="3-3-部署controller-manager"><a href="#3-3-部署controller-manager" class="headerlink" title="3.3.部署controller-manager"></a>3.3.部署controller-manager</h3><h4 id="3-3-1-集群规划"><a href="#3-3-1-集群规划" class="headerlink" title="3.3.1.集群规划"></a>3.3.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>controller-manager</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>controller-manager</td><td>10.4.7.21</td></tr></tbody></table><p>注意：这里部署文档以hdss7-21为例，另外一台类似</p><h4 id="3-3-2-创建启动脚本"><a href="#3-3-2-创建启动脚本" class="headerlink" title="3.3.2.创建启动脚本"></a>3.3.2.创建启动脚本</h4><ul><li><input disabled="" type="checkbox"> <strong>hdss7-21.host.com上</strong></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-controller-manager.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kube-controller-manager \<br>  --cluster-cidr <span class="hljs-number">172.7</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  --leader-elect <span class="hljs-keyword">true</span> \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-controller-manager \<br>  --master http:<span class="hljs-comment">//127.0.0.1:8080 \</span><br>  --service-account-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca-key.pem \<br>  --service-cluster-ip-range <span class="hljs-number">192.168</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  --root-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --v <span class="hljs-number">2</span> <br></code></pre></td></tr></table></figure><h4 id="3-3-3-调整文件权限，创建目录"><a href="#3-3-3-调整文件权限，创建目录" class="headerlink" title="3.3.3.调整文件权限，创建目录"></a>3.3.3.调整文件权限，创建目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-controller-manager.sh <br>[root@hdss7-<span class="hljs-number">21</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-controller-manager<br></code></pre></td></tr></table></figure><h4 id="3-3-4-创建supervisor配置"><a href="#3-3-4-创建supervisor配置" class="headerlink" title="3.3.4.创建supervisor配置"></a>3.3.4.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-conntroller-manager.ini</span><br><span class="hljs-section">[program:kube-controller-manager-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-controller-manager.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                                        <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                              <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                                    <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                                  <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                                      <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                                    <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                                     <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                                   <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                                   <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                                         <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                              <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-controller-manager/controller.stdout.log  <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                                      <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                                          <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                                       <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                                       <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-3-5-启动服务并检查"><a href="#3-3-5-启动服务并检查" class="headerlink" title="3.3.5.启动服务并检查"></a>3.3.5.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br><br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 1716, uptime 3:44:21<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 2032, uptime 1:44:35<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 2196, uptime 0:00:50<br></code></pre></td></tr></table></figure><h4 id="3-3-6-安装部署启动检查所有集群规划主机"><a href="#3-3-6-安装部署启动检查所有集群规划主机" class="headerlink" title="3.3.6.安装部署启动检查所有集群规划主机"></a>3.3.6.安装部署启动检查所有集群规划主机</h4><ul><li><input disabled="" type="checkbox"> <strong>hdss7-22.host.com 跟上述基本相同</strong><br>/etc/supervisord.d/ kube-conntroller-manager.ini<br>需要更改成[program:kube-conntroller-manager-7-22]</li></ul><h3 id="3-4-部署kube-scheduler"><a href="#3-4-部署kube-scheduler" class="headerlink" title="3.4.部署kube-scheduler"></a>3.4.部署kube-scheduler</h3><h4 id="3-4-1-集群规划"><a href="#3-4-1-集群规划" class="headerlink" title="3.4.1.集群规划"></a>3.4.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-scheduler</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kube-scheduler</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以hdss7-21为例，另一运算节点类似</strong></p><h4 id="3-4-2-创建启动脚本"><a href="#3-4-2-创建启动脚本" class="headerlink" title="3.4.2.创建启动脚本"></a>3.4.2.创建启动脚本</h4><p><strong>hdss7-21上</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-scheduler.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kube-scheduler \<br>  --leader-elect  \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-scheduler \<br>  --master http:<span class="hljs-comment">//127.0.0.1:8080 \</span><br>  --v <span class="hljs-number">2</span><br>  <br>  <br>  <br>  <span class="hljs-comment">//如果主控节点组件在不同的地方，是需要证书验证的，实验环境是在一个宿主机，所以这里无需证书</span><br></code></pre></td></tr></table></figure><h4 id="3-4-3-调整文件权限，创建目录"><a href="#3-4-3-调整文件权限，创建目录" class="headerlink" title="3.4.3.调整文件权限，创建目录"></a>3.4.3.调整文件权限，创建目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x  <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-scheduler.sh<br>[root@hdss7-<span class="hljs-number">21</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-scheduler<br></code></pre></td></tr></table></figure><h4 id="3-4-4-创建supervisor配置"><a href="#3-4-4-创建supervisor配置" class="headerlink" title="3.4.4.创建supervisor配置"></a>3.4.4.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-scheduler.ini</span><br><span class="hljs-section">[program:kube-scheduler-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-scheduler.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                               <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                     <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                           <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                         <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                             <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                           <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                            <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                          <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                          <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                                <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                     <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-scheduler/scheduler.stdout.log <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                             <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                                 <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                              <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                              <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="3-4-5-启动服务并检查"><a href="#3-4-5-启动服务并检查" class="headerlink" title="3.4.5.启动服务并检查"></a>3.4.5.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 1716, uptime 4:11:22<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2032, uptime 2:11:36<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2196, uptime 0:27:51<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span> RUNNING pid 2284, uptime 0:00:33<br></code></pre></td></tr></table></figure><h4 id="3-4-6-安装部署启动检查所有集群规划主机"><a href="#3-4-6-安装部署启动检查所有集群规划主机" class="headerlink" title="3.4.6.安装部署启动检查所有集群规划主机"></a>3.4.6.安装部署启动检查所有集群规划主机</h4>            <input type="checkbox" disabled checked="checked">hdss7-22.host.com跟上述基本相同          <p>  /etc/supervisord.d/ kube-scheduler.ini<br>  需要更改成[program:kube-scheduler-7-22]</p><h3 id="3-5-检查主控节点"><a href="#3-5-检查主控节点" class="headerlink" title="3.5.检查主控节点"></a>3.5.检查主控节点</h3><h4 id="3-5-1-建立kubectl软链接"><a href="#3-5-1-建立kubectl软链接" class="headerlink" title="3.5.1.建立kubectl软链接"></a>3.5.1.建立kubectl软链接</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> bin]#  ln -s <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/kubectl /u</span>sr<span class="hljs-regexp">/bin/</span>kubectl<br></code></pre></td></tr></table></figure><h4 id="3-5-2-检查主控节点"><a href="#3-5-2-检查主控节点" class="headerlink" title="3.5.2.检查主控节点"></a>3.5.2.检查主控节点</h4><h5 id="检查集群健康状态-cs（cluster-status）"><a href="#检查集群健康状态-cs（cluster-status）" class="headerlink" title="检查集群健康状态 cs（cluster status）"></a>检查集群健康状态 cs（cluster status）</h5><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs puppet">[root@hdss7-21 bin]<span class="hljs-comment"># kubectl get cs</span><br>NAME                 STATUS    MESSAGE              ERROR<br>controller-manager   Healthy   ok                   <br>scheduler            Healthy   ok                   <br>etcd-2               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br><span class="hljs-keyword">etcd</span>-0               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br><span class="hljs-keyword">etcd</span>-1               <span class="hljs-keyword">Healthy</span>   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125; <br></code></pre></td></tr></table></figure><h2 id="4-部署node节点服务"><a href="#4-部署node节点服务" class="headerlink" title="4.部署node节点服务"></a>4.部署node节点服务</h2><h3 id="4-1-部署kubelet"><a href="#4-1-部署kubelet" class="headerlink" title="4.1.部署kubelet"></a>4.1.部署kubelet</h3><h4 id="4-1-1-集群规划"><a href="#4-1-1-集群规划" class="headerlink" title="4.1.1.集群规划"></a>4.1.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kubelet</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kubelet</td><td>10.4.7.22</td></tr></tbody></table><p><strong>注意：这里部署文档以 hdss7-21主机为例，另外一台运算节点安装部署方法类似</strong></p><h4 id="4-1-2-签发kubelet证书"><a href="#4-1-2-签发kubelet证书" class="headerlink" title="4.1.2.签发kubelet证书"></a>4.1.2.签发kubelet证书</h4><ul><li><input disabled="" type="checkbox"> <strong>运维主机hdss7-200上</strong></li></ul><h5 id="4-1-2-1-创建生成证书签名请求（csr）的json配置文件"><a href="#4-1-2-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="4.1.2.1.创建生成证书签名请求（csr）的json配置文件"></a>4.1.2.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[root@hdss7<span class="hljs-number">-200</span> certs]# vi kubelet-csr.json<br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;k8s-kubelet&quot;</span>,<br>    <span class="hljs-string">&quot;hosts&quot;</span>: [<br>    <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.10&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.21&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.22&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.23&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.24&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.25&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.26&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.27&quot;</span>,<br>    <span class="hljs-string">&quot;10.4.7.28&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-2-2-生成kubelet证书和私钥"><a href="#4-1-2-2-生成kubelet证书和私钥" class="headerlink" title="4.1.2.2.生成kubelet证书和私钥"></a>4.1.2.2.生成kubelet证书和私钥</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-200 certs]# cfssl gencert <span class="hljs-attribute">-ca</span>=ca.pem <span class="hljs-attribute">-ca-key</span>=ca-key.pem <span class="hljs-attribute">-config</span>=ca-config.json <span class="hljs-attribute">-profile</span>=server kubelet-csr.json | cfssl-json -bare kubelet<br></code></pre></td></tr></table></figure><h5 id="4-1-2-3-检查生成的证书和私钥"><a href="#4-1-2-3-检查生成的证书和私钥" class="headerlink" title="4.1.2.3.检查生成的证书和私钥"></a>4.1.2.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>total 84<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1115 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet.csr<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 452 </span>Nov<span class="hljs-number"> 16 </span>21:59 kubelet-csr.json<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1468 </span>Nov<span class="hljs-number"> 16 </span>22:03 kubelet.pem<br></code></pre></td></tr></table></figure><h4 id="4-1-3-拷贝证书到各运算节点，并创建配置"><a href="#4-1-3-拷贝证书到各运算节点，并创建配置" class="headerlink" title="4.1.3.拷贝证书到各运算节点，并创建配置"></a>4.1.3.拷贝证书到各运算节点，并创建配置</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com 上          <h5 id="4-1-3-1-拷贝证书，私钥，注意私钥文件属性600"><a href="#4-1-3-1-拷贝证书，私钥，注意私钥文件属性600" class="headerlink" title="4.1.3.1.拷贝证书，私钥，注意私钥文件属性600"></a>4.1.3.1.拷贝证书，私钥，注意私钥文件属性600</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kubelet.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># scp hdss7-200:/opt/certs/kubelet-key.pem .</span><br>[root@hdss7-21 cert]<span class="hljs-comment"># ll</span><br>total 32<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:11 apiserver-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1598 </span>Nov<span class="hljs-number"> 17 </span>02:08 apiserver.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:07 ca-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1346 </span>Nov<span class="hljs-number"> 17 </span>02:06 ca.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>02:08 client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1363 </span>Nov<span class="hljs-number"> 17 </span>02:07 client.pem<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1679 </span>Nov<span class="hljs-number"> 17 </span>06:12 kubelet-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1468 </span>Nov<span class="hljs-number"> 17 </span>06:11 kubelet.pem<br></code></pre></td></tr></table></figure><h5 id="4-1-3-2-创建配置—分四步"><a href="#4-1-3-2-创建配置—分四步" class="headerlink" title="4.1.3.2.创建配置—分四步"></a>4.1.3.2.创建配置—分四步</h5>            <input type="checkbox" disabled checked="checked">都在conf目录下          <h6 id="4-1-3-2-1-set-cluster"><a href="#4-1-3-2-1-set-cluster" class="headerlink" title="4.1.3.2.1.set-cluster"></a>4.1.3.2.1.set-cluster</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-cluster myk8s \</span><br>--certificate-authority=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>ca.pem \<br>--embed-certs=true \<br>--server=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>:<span class="hljs-number">7443</span> \<br>--kubeconfig=kubelet.kubeconfig<br><br>返回结果：<br>Cluster <span class="hljs-string">&quot;myk8s&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-2-set-credentials"><a href="#4-1-3-2-2-set-credentials" class="headerlink" title="4.1.3.2.2.set-credentials"></a>4.1.3.2.2.set-credentials</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-credentials k8s-node \</span><br>--client-certificate=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>client.pem \<br>--client-key=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>client-key.pem \<br>--embed-certs=true \<br>--kubeconfig=kubelet.kubeconfig <br><br>返回结果：<br>User <span class="hljs-string">&quot;k8s-node&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-3-set-context"><a href="#4-1-3-2-3-set-context" class="headerlink" title="4.1.3.2.3.set-context"></a>4.1.3.2.3.set-context</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-21 conf]# kubectl<span class="hljs-built_in"> config </span>set-context myk8s-context \<br><span class="hljs-attribute">--cluster</span>=myk8s \<br><span class="hljs-attribute">--user</span>=k8s-node \<br><span class="hljs-attribute">--kubeconfig</span>=kubelet.kubeconfig<br><br>返回结果：<br>Context <span class="hljs-string">&quot;myk8s-context&quot;</span> created.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-4-use-context"><a href="#4-1-3-2-4-use-context" class="headerlink" title="4.1.3.2.4.use-context"></a>4.1.3.2.4.use-context</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">[root@hdss7-<span class="hljs-number">21</span> conf]# kubectl config <span class="hljs-keyword">use</span>-<span class="hljs-keyword">context</span> myk8s-<span class="hljs-keyword">context</span> <span class="hljs-comment">--kubeconfig=kubelet.kubeconfig</span><br><br>返回结果：<br>Switched <span class="hljs-keyword">to</span> <span class="hljs-keyword">context</span> <span class="hljs-string">&quot;myk8s-context&quot;</span>.<br></code></pre></td></tr></table></figure><h6 id="4-1-3-2-5-查看生成的kubelet-kubeconfig"><a href="#4-1-3-2-5-查看生成的kubelet-kubeconfig" class="headerlink" title="4.1.3.2.5.查看生成的kubelet.kubeconfig"></a>4.1.3.2.5.查看生成的kubelet.kubeconfig</h6><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-21 conf]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 2223 </span>Nov<span class="hljs-number"> 17 </span>02:18 audit.yaml<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 6199 </span>Nov<span class="hljs-number"> 17 </span>06:32 kubelet.kubeconfig<br></code></pre></td></tr></table></figure><p><strong>cat下面的这段实际上就是ca.pem 经过base64编译以后的编码</strong></p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code1.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code2.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/blog_image/Linux_k8S_Bin_contentImage/code3.png"></div></div></div><h6 id="4-1-3-2-6-k8s-node-yaml"><a href="#4-1-3-2-6-k8s-node-yaml" class="headerlink" title="4.1.3.2.6.k8s-node.yaml"></a>4.1.3.2.6.k8s-node.yaml</h6><p><strong>1、创建配置文件</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># vi k8s-node.yaml</span><br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: k8s-<span class="hljs-keyword">node</span><span class="hljs-title"></span><br><span class="hljs-title">roleRef</span>:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: system:<span class="hljs-keyword">node</span><span class="hljs-title"></span><br><span class="hljs-title">subjects</span>:<br>- apiGroup: rbac.authorization.k8s.io<br>  kind: User<br>  name: k8s-<span class="hljs-keyword">node</span><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p><strong>2、根据配置文件创建用户</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-21 conf]</span># <span class="hljs-selector-tag">kubectl</span> <span class="hljs-selector-tag">create</span> <span class="hljs-selector-tag">-f</span> <span class="hljs-selector-tag">k8s-node</span><span class="hljs-selector-class">.yaml</span>            //<span class="hljs-selector-tag">-f</span> 指定配置文件<br><span class="hljs-selector-tag">clusterrolebinding</span><span class="hljs-selector-class">.rbac</span><span class="hljs-selector-class">.authorization</span><span class="hljs-selector-class">.k8s</span><span class="hljs-selector-class">.io</span>/<span class="hljs-selector-tag">k8s-node</span> <span class="hljs-selector-tag">created</span>    //创建角色后会存到<span class="hljs-selector-tag">etcd</span>里<br></code></pre></td></tr></table></figure><p><strong>3、查询集群角色和查看角色属性</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl get clusterrolebinding k8s-node</span><br>NAME       AGE<br>k8s-<span class="hljs-keyword">node</span>   <span class="hljs-title">7m54s</span><br><br>[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl get clusterrolebinding k8s-node -o yaml</span><br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding                       //定义了一个集群绑定资源，k8s一切皆资源<br>metadata:<br>  creationTimestamp: <span class="hljs-string">&quot;2019-11-16T22:53:06Z&quot;</span><br>  name: k8s-<span class="hljs-keyword">node</span>                                <span class="hljs-title">//资源的名称为k8s-node</span><br>  resourceVersion: <span class="hljs-string">&quot;11262&quot;</span><br>  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/k8s-<span class="hljs-keyword">node</span><span class="hljs-title"></span><br><span class="hljs-title">  uid</span>: <span class="hljs-number">2</span>b87d554-de37-<span class="hljs-number">494</span>d-b6dd-<span class="hljs-number">7</span>c5d0ecdd5d6<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: system:<span class="hljs-keyword">node</span>                                  <span class="hljs-title">//给k8s-node</span>集群用户绑定了一个集群角色，叫system：<span class="hljs-keyword">node</span><span class="hljs-title">，意思是让下面k8s-node</span>用户具备这个集群里运算节点的权限<br>subjects:<br>- apiGroup: rbac.authorization.k8s.io<br>  kind: User<br>  name: k8s-<span class="hljs-keyword">node</span>                                 <span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p><strong>4、拷贝kubelet.kubeconfig 到hdss7-22上</strong></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-22 conf]<span class="hljs-comment"># scp hdss7-21:/opt/kubernetes/server/bin/conf/kubelet.kubeconfig .</span><br>[root@hdss7-22 conf]<span class="hljs-comment"># ll</span><br>total 12<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 2223 </span>Nov<span class="hljs-number"> 16 </span>18:48 audit.yaml<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 6199 </span>Nov<span class="hljs-number"> 16 </span>23:14 kubelet.kubeconfig<br></code></pre></td></tr></table></figure><h4 id="4-1-4-准备pause基础镜像"><a href="#4-1-4-准备pause基础镜像" class="headerlink" title="4.1.4.准备pause基础镜像"></a>4.1.4.准备pause基础镜像</h4>            <input type="checkbox" disabled checked="checked">运维主机 hdss7-200.host.com上          <p><strong>为什么需要这个pause基础镜像？</strong><br>原因：需要用一个pause基础镜像把这台机器的pod拉起来，因为kubelet是干活的节点，它帮我们调度docker引擎，边车模式，让kebelet控制一个小镜像，先于我们的业务容器起来，让它帮我们业务容器去设置：UTC、NET、IPC，让它先把命名空间占上，业务容易还没起来的时候，pod的ip已经分配出来了。</p><h5 id="4-1-4-1-下载pause镜像"><a href="#4-1-4-1-下载pause镜像" class="headerlink" title="4.1.4.1.下载pause镜像"></a>4.1.4.1.下载pause镜像</h5>            <input type="checkbox" disabled checked="checked">运维主机 hdss7-200.host.com上          <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@hdss7-<span class="hljs-number">200</span> ~]# docker pull kubernetes/pause<br>Using default <span class="hljs-keyword">ta</span><span class="hljs-variable">g:</span> latest<br>lates<span class="hljs-variable">t:</span> Pulling from kubernetes/pause<br><span class="hljs-number">4</span>f4fb700ef54: Pull <span class="hljs-built_in">complete</span> <br>b9c8ec465f6<span class="hljs-variable">b:</span> Pull <span class="hljs-built_in">complete</span> <br>Diges<span class="hljs-variable">t:</span> <span class="hljs-built_in">sha256</span>:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105<br>Statu<span class="hljs-variable">s:</span> Downloaded newer image <span class="hljs-keyword">for</span> kubernetes/pause:latest<br>docker.io/kubernetes/pause:latest<br></code></pre></td></tr></table></figure><h5 id="4-1-4-2-提交至docker私有仓库（harbor）中"><a href="#4-1-4-2-提交至docker私有仓库（harbor）中" class="headerlink" title="4.1.4.2.提交至docker私有仓库（harbor）中"></a>4.1.4.2.提交至docker私有仓库（harbor）中</h5><h6 id="4-1-4-2-1-给镜像打tag"><a href="#4-1-4-2-1-给镜像打tag" class="headerlink" title="4.1.4.2.1.给镜像打tag"></a>4.1.4.2.1.给镜像打tag</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-200 ~]</span># <span class="hljs-selector-tag">docker</span> <span class="hljs-selector-tag">tag</span> <span class="hljs-selector-tag">f9d5de079539</span> <span class="hljs-selector-tag">harbor</span><span class="hljs-selector-class">.od</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">public</span>/<span class="hljs-selector-tag">pause</span><span class="hljs-selector-pseudo">:latest</span><br><span class="hljs-selector-attr">[root@hdss7-200 ~]</span># <span class="hljs-selector-tag">docker</span> <span class="hljs-selector-tag">images</span> <span class="hljs-selector-tag">-a</span><br><span class="hljs-selector-tag">REPOSITORY</span>                      <span class="hljs-selector-tag">TAG</span>                        <span class="hljs-selector-tag">IMAGE</span> <span class="hljs-selector-tag">ID</span>            <span class="hljs-selector-tag">CREATED</span>             <span class="hljs-selector-tag">SIZE</span><br>...                                                                     <br><span class="hljs-selector-tag">kubernetes</span>/<span class="hljs-selector-tag">pause</span>                <span class="hljs-selector-tag">latest</span>                     <span class="hljs-selector-tag">f9d5de079539</span>        5 <span class="hljs-selector-tag">years</span> <span class="hljs-selector-tag">ago</span>         240<span class="hljs-selector-tag">kB</span><br><span class="hljs-selector-tag">harbor</span><span class="hljs-selector-class">.od</span><span class="hljs-selector-class">.com</span>/<span class="hljs-selector-tag">public</span>/<span class="hljs-selector-tag">pause</span>      <span class="hljs-selector-tag">latest</span>                     <span class="hljs-selector-tag">f9d5de079539</span>        5 <span class="hljs-selector-tag">years</span> <span class="hljs-selector-tag">ago</span>         240<span class="hljs-selector-tag">kB</span><br></code></pre></td></tr></table></figure><h6 id="4-1-4-2-2-推到harbor上"><a href="#4-1-4-2-2-推到harbor上" class="headerlink" title="4.1.4.2.2.推到harbor上"></a>4.1.4.2.2.推到harbor上</h6><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">200</span> ~]# docker <span class="hljs-keyword">push</span> harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest<br>The <span class="hljs-keyword">push</span> refers to repository [harbor.od.com<span class="hljs-regexp">/public/</span>pause]<br><span class="hljs-number">5</span>f70bf18a086: Mounted <span class="hljs-keyword">from</span> <span class="hljs-keyword">public</span>/nginx <br>e16a89738269: Pushed <br>latest: digest: sha256:b31bfb4d0213f254d361e0079deaaebefa4f82ba7aa76ef82e90b4935ad5b105 <span class="hljs-keyword">size</span>: <span class="hljs-number">938</span><br></code></pre></td></tr></table></figure><h4 id="4-1-5-创建kubelet启动脚本"><a href="#4-1-5-创建kubelet启动脚本" class="headerlink" title="4.1.5.创建kubelet启动脚本"></a>4.1.5.创建kubelet启动脚本</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> conf]# vi <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kubelet.sh<br>#!<span class="hljs-regexp">/bin/</span>sh<br>./kubelet \<br>  --anonymous-auth=<span class="hljs-keyword">false</span> \<br>  --cgroup-driver systemd \<br>  --cluster-dns <span class="hljs-number">192.168</span>.<span class="hljs-number">0.2</span> \<br>  --cluster-domain cluster.local \<br>  --<span class="hljs-keyword">runtime</span>-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --kubelet-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --fail-swap-on=<span class="hljs-string">&quot;false&quot;</span> \<br>  --client-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --tls-cert-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet.pem \<br>  --tls-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet-key.pem \<br>  --hostname-override hdss7-<span class="hljs-number">21</span>.host.com \<br>  --image-gc-high-threshold <span class="hljs-number">20</span> \<br>  --image-gc-low-threshold <span class="hljs-number">10</span> \<br>  --kubeconfig .<span class="hljs-regexp">/conf/</span>kubelet.kubeconfig \<br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet \<br>  --pod-infra-container-image harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest \<br>  --root-dir <span class="hljs-regexp">/data/</span>kubelet<br>  <br>  ###################参数说明############<br>    --anonymous-auth=<span class="hljs-keyword">false</span> \                                  <span class="hljs-comment">//匿名登陆，这里不允许</span><br>  --cgroup-driver systemd \                                    <span class="hljs-comment">//这里和docker的daemon.json保持一直</span><br>  --cluster-dns <span class="hljs-number">192.168</span>.<span class="hljs-number">0.2</span> \                                   <br>  --cluster-domain cluster.local \<br>  --<span class="hljs-keyword">runtime</span>-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --kubelet-cgroups=<span class="hljs-regexp">/systemd/</span>system.slice \<br>  --fail-swap-on=<span class="hljs-string">&quot;false&quot;</span> \                                  <span class="hljs-comment">//正常是关闭swap分区的。这里不关，没有关闭swap分区正常启动，没有报错</span><br>  --client-ca-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>ca.pem \<br>  --tls-cert-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet.pem \<br>  --tls-<span class="hljs-keyword">private</span>-key-<span class="hljs-keyword">file</span> .<span class="hljs-regexp">/cert/</span>kubelet-key.pem \<br>  --hostname-override hdss7-<span class="hljs-number">21</span>.host.com \           <br>  --image-gc-high-threshold <span class="hljs-number">20</span> \<br>  --image-gc-low-threshold <span class="hljs-number">10</span> \<br>  --kubeconfig .<span class="hljs-regexp">/conf/</span>kubelet.kubeconfig \          <br>  --log-dir <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet \<br>  --pod-infra-container-image harbor.od.com<span class="hljs-regexp">/public/</span>pause:latest \<br>  --root-dir <span class="hljs-regexp">/data/</span>kubelet<br></code></pre></td></tr></table></figure><p><strong>注意：kubelet集群个主机的启动脚本略不同，其他节点注意修改：–hostname-override</strong></p><h4 id="4-1-6-检查配置，权限，创建日志目录"><a href="#4-1-6-检查配置，权限，创建日志目录" class="headerlink" title="4.1.6.检查配置，权限，创建日志目录"></a>4.1.6.检查配置，权限，创建日志目录</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> conf]# ls -l|<span class="hljs-keyword">grep</span> kubelet<br>-rw------- <span class="hljs-number">1</span> root root <span class="hljs-number">6199</span> Nov <span class="hljs-number">17</span> <span class="hljs-number">06</span>:<span class="hljs-number">32</span> kubelet.kubeconfig<br><br>[root@hdss7-<span class="hljs-number">21</span> conf]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kubelet.sh <br>[root@hdss7-<span class="hljs-number">21</span> conf]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-kubelet   <span class="hljs-regexp">/data/</span>kubelet<br></code></pre></td></tr></table></figure><h4 id="4-1-7-创建supervisor配置"><a href="#4-1-7-创建supervisor配置" class="headerlink" title="4.1.7.创建supervisor配置"></a>4.1.7.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 conf]</span><span class="hljs-comment">#  vi /etc/supervisord.d/kube-kubelet.ini</span><br><span class="hljs-section">[program:kube-kubelet-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kubelet.sh     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                        <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin              <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                    <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                  <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                      <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                    <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                     <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                   <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                   <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                         <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                              <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-kubelet/kubelet.stdout.log   <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                      <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                          <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                       <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                       <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><p><strong>注意：其他主机部署时请注意修改program标签</strong></p><h4 id="4-1-8-启动服务并检查"><a href="#4-1-8-启动服务并检查" class="headerlink" title="4.1.8.启动服务并检查"></a>4.1.8.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> conf]# supervisorctl  update<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>: added process group<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 3270, uptime 0:00:46<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3273, uptime 0:00:46<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 3267, uptime 0:00:46<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                RUNNING   pid 3268, uptime 0:00:46<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3269, uptime 0:00:46<br><br>遇到一个问题，没起来：<br>查看日志原来是我的docker服务没起，systemctl  start docker    systemctl enable docker<br></code></pre></td></tr></table></figure><h4 id="4-1-9-检查运算节点"><a href="#4-1-9-检查运算节点" class="headerlink" title="4.1.9.检查运算节点"></a>4.1.9.检查运算节点</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-21 bin]</span># <span class="hljs-selector-tag">tailf</span> /<span class="hljs-selector-tag">data</span>/<span class="hljs-selector-tag">logs</span>/<span class="hljs-selector-tag">kubernetes</span>/<span class="hljs-selector-tag">kube-kubelet</span>/<span class="hljs-selector-tag">kubelet</span><span class="hljs-selector-class">.stdout</span><span class="hljs-selector-class">.log</span> <br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.074479</span>    3272 <span class="hljs-selector-tag">kubelet_node_status</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:72</span>] <span class="hljs-selector-tag">Attempting</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">register</span> <span class="hljs-selector-tag">node</span> <span class="hljs-selector-tag">hdss7-21</span><span class="hljs-selector-class">.host</span><span class="hljs-selector-class">.com</span><br><span class="hljs-selector-tag">E1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.088198</span>    3272 <span class="hljs-selector-tag">kubelet</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:2248</span>] <span class="hljs-selector-tag">node</span> &quot;<span class="hljs-selector-tag">hdss7-21</span><span class="hljs-selector-class">.host</span><span class="hljs-selector-class">.com</span>&quot; <span class="hljs-selector-tag">not</span> <span class="hljs-selector-tag">found</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.088590</span>    3272 <span class="hljs-selector-tag">kubelet_node_status</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:75</span>] <span class="hljs-selector-tag">Successfully</span> <span class="hljs-selector-tag">registered</span> <span class="hljs-selector-tag">node</span> <span class="hljs-selector-tag">hdss7-21</span><span class="hljs-selector-class">.host</span><span class="hljs-selector-class">.com</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.119351</span>    3272 <span class="hljs-selector-tag">cpu_manager</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:155</span>] <span class="hljs-selector-attr">[cpumanager]</span> <span class="hljs-selector-tag">starting</span> <span class="hljs-selector-tag">with</span> <span class="hljs-selector-tag">none</span> <span class="hljs-selector-tag">policy</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.119363</span>    3272 <span class="hljs-selector-tag">cpu_manager</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:156</span>] <span class="hljs-selector-attr">[cpumanager]</span> <span class="hljs-selector-tag">reconciling</span> <span class="hljs-selector-tag">every</span> 10<span class="hljs-selector-tag">s</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.119382</span>    3272 <span class="hljs-selector-tag">policy_none</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:42</span>] <span class="hljs-selector-attr">[cpumanager]</span> <span class="hljs-selector-tag">none</span> <span class="hljs-selector-tag">policy</span>: <span class="hljs-selector-tag">Start</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.155413</span>    3272 <span class="hljs-selector-tag">kubelet</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:1822</span>] <span class="hljs-selector-tag">skipping</span> <span class="hljs-selector-tag">pod</span> <span class="hljs-selector-tag">synchronization</span> <span class="hljs-selector-tag">-</span> <span class="hljs-selector-tag">container</span> <span class="hljs-selector-tag">runtime</span> <span class="hljs-selector-tag">status</span> <span class="hljs-selector-tag">check</span> <span class="hljs-selector-tag">may</span> <span class="hljs-selector-tag">not</span> <span class="hljs-selector-tag">have</span> <span class="hljs-selector-tag">completed</span> <span class="hljs-selector-tag">yet</span><br><span class="hljs-selector-tag">W1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.374787</span>    3272 <span class="hljs-selector-tag">manager</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:546</span>] <span class="hljs-selector-tag">Failed</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">retrieve</span> <span class="hljs-selector-tag">checkpoint</span> <span class="hljs-selector-tag">for</span> &quot;<span class="hljs-selector-tag">kubelet_internal_checkpoint</span>&quot;: <span class="hljs-selector-tag">checkpoint</span> <span class="hljs-selector-tag">is</span> <span class="hljs-selector-tag">not</span> <span class="hljs-selector-tag">found</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.375126</span>    3272 <span class="hljs-selector-tag">plugin_manager</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:116</span>] <span class="hljs-selector-tag">Starting</span> <span class="hljs-selector-tag">Kubelet</span> <span class="hljs-selector-tag">Plugin</span> <span class="hljs-selector-tag">Manager</span><br><span class="hljs-selector-tag">I1117</span> 08<span class="hljs-selector-pseudo">:24</span><span class="hljs-selector-pseudo">:38.690595</span>    3272 <span class="hljs-selector-tag">reconciler</span><span class="hljs-selector-class">.go</span><span class="hljs-selector-pseudo">:150</span>] <span class="hljs-selector-tag">Reconciler</span>: <span class="hljs-selector-tag">start</span> <span class="hljs-selector-tag">to</span> <span class="hljs-selector-tag">sync</span> <span class="hljs-selector-tag">state</span><br></code></pre></td></tr></table></figure><h4 id="4-1-10-安装部署启动检查所有集群规划主机"><a href="#4-1-10-安装部署启动检查所有集群规划主机" class="headerlink" title="4.1.10.安装部署启动检查所有集群规划主机"></a>4.1.10.安装部署启动检查所有集群规划主机</h4><p><strong>其他节点类似，有些需要稍许调整，上面有标注：</strong><br>/opt/kubernetes/server/bin/conf/kubelet.kubeconfig<br>/opt/kubernetes/server/bin/kubelet.sh<br>/etc/supervisord.d/kube-kubelet.ini</p><h4 id="4-1-11-检查所有运算节点"><a href="#4-1-11-检查所有运算节点" class="headerlink" title="4.1.11.检查所有运算节点"></a>4.1.11.检查所有运算节点</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES    AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br><br>// 角色是none，打个标签，标签是特色管理功能之一<br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl label node hdss7-21.host.com node-role.kubernetes.io/master=</span><br><span class="hljs-keyword">node</span><span class="hljs-title">/hdss7-21</span>.host.com labeled<br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES    AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-keyword">master</span>   <span class="hljs-title">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>   <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl label node hdss7-21.host.com node-role.kubernetes.io/node=</span><br><span class="hljs-keyword">node</span><span class="hljs-title">/hdss7-21</span>.host.com labeled<br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get nodes</span><br>NAME                STATUS   ROLES         AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">8h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-tag">&lt;none&gt;</span>        <span class="hljs-number">8h</span>    v1.<span class="hljs-number">15.2</span><br></code></pre></td></tr></table></figure><h3 id="4-2-部署kube-proxy"><a href="#4-2-部署kube-proxy" class="headerlink" title="4.2.部署kube-proxy"></a>4.2.部署kube-proxy</h3><p><strong>联结pod网络和集群网络</strong></p><h4 id="4-2-1-集群规划"><a href="#4-2-1-集群规划" class="headerlink" title="4.2.1.集群规划"></a>4.2.1.集群规划</h4><table><thead><tr><th>主机名</th><th>角色</th><th>ip</th></tr></thead><tbody><tr><td>hdss7-21.host.com</td><td>kube-proxy</td><td>10.4.7.21</td></tr><tr><td>hdss7-22.host.com</td><td>kube-proxy</td><td>10.4.7.21</td></tr></tbody></table><p><strong>注意：这里部署以hdss7-21主机为例，其他运算节点类似</strong></p><h4 id="4-2-2-签发kube-proxy证书"><a href="#4-2-2-签发kube-proxy证书" class="headerlink" title="4.2.2.签发kube-proxy证书"></a>4.2.2.签发kube-proxy证书</h4>            <input type="checkbox" disabled checked="checked">hdss7-200.host.com上          <h5 id="4-2-2-1-创建生成证书签名请求（csr）的json配置文件"><a href="#4-2-2-1-创建生成证书签名请求（csr）的json配置文件" class="headerlink" title="4.2.2.1.创建生成证书签名请求（csr）的json配置文件"></a>4.2.2.1.创建生成证书签名请求（csr）的json配置文件</h5><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@hdss7</span><span class="hljs-number">-200</span> certs]<span class="hljs-meta"># vi kube-proxy-csr.json</span><br>&#123;<br>    <span class="hljs-string">&quot;CN&quot;</span>: <span class="hljs-string">&quot;system:kube-proxy&quot;</span>,<br>    <span class="hljs-string">&quot;key&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;algo&quot;</span>: <span class="hljs-string">&quot;rsa&quot;</span>,<br>        <span class="hljs-string">&quot;size&quot;</span>: <span class="hljs-number">2048</span><br>    &#125;,<br>    <span class="hljs-string">&quot;names&quot;</span>: [<br>        &#123;<br>            <span class="hljs-string">&quot;C&quot;</span>: <span class="hljs-string">&quot;CN&quot;</span>,<br>            <span class="hljs-string">&quot;ST&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;L&quot;</span>: <span class="hljs-string">&quot;beijing&quot;</span>,<br>            <span class="hljs-string">&quot;O&quot;</span>: <span class="hljs-string">&quot;od&quot;</span>,<br>            <span class="hljs-string">&quot;OU&quot;</span>: <span class="hljs-string">&quot;ops&quot;</span><br>        &#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-2-2-2-生成kubelet证书和私钥"><a href="#4-2-2-2-生成kubelet证书和私钥" class="headerlink" title="4.2.2.2.生成kubelet证书和私钥"></a>4.2.2.2.生成kubelet证书和私钥</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@hdss7<span class="hljs-number">-200</span> certs]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json |cfssl-<span class="hljs-type">json</span> -bare kube-proxy-client<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] generate received request<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] received CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] generating key: rsa<span class="hljs-number">-2048</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] encoded CSR<br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-keyword">INFO</span>] signed certificate <span class="hljs-keyword">with</span> <span class="hljs-type">serial</span> number <span class="hljs-number">490532965938220149616881213802710440162344647640</span><br><span class="hljs-number">2019</span>/<span class="hljs-number">11</span>/<span class="hljs-number">17</span> <span class="hljs-number">00</span>:<span class="hljs-number">58</span>:<span class="hljs-number">31</span> [<span class="hljs-built_in">WARNING</span>] This certificate lacks a &quot;hosts&quot; field. This makes it unsuitable <span class="hljs-keyword">for</span><br>websites. <span class="hljs-keyword">For</span> more information see the Baseline Requirements <span class="hljs-keyword">for</span> the Issuance <span class="hljs-keyword">and</span> Management<br><span class="hljs-keyword">of</span> Publicly-<span class="hljs-keyword">Trusted</span> Certificates, v<span class="hljs-number">.1</span><span class="hljs-number">.1</span><span class="hljs-number">.6</span>, <span class="hljs-keyword">from</span> the CA/Browser Forum (https://cabforum.org);<br>specifically, section <span class="hljs-number">10.2</span><span class="hljs-number">.3</span> (&quot;Information Requirements&quot;).<br></code></pre></td></tr></table></figure><h5 id="4-2-2-3-检查生成的证书和私钥"><a href="#4-2-2-3-检查生成的证书和私钥" class="headerlink" title="4.2.2.3.检查生成的证书和私钥"></a>4.2.2.3.检查生成的证书和私钥</h5><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@hdss7-200 certs]<span class="hljs-comment"># ll</span><br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1005 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client.csr<br>-rw-------<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1675 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client-key.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1375 </span>Nov<span class="hljs-number"> 17 </span>00:58 kube-proxy-client.pem<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 267 </span>Nov<span class="hljs-number"> 17 </span>00:57 kube-proxy-csr.json<br></code></pre></td></tr></table></figure><h4 id="4-2-3-拷贝证书至各运算节点，并创建配置"><a href="#4-2-3-拷贝证书至各运算节点，并创建配置" class="headerlink" title="4.2.3.拷贝证书至各运算节点，并创建配置"></a>4.2.3.拷贝证书至各运算节点，并创建配置</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <h5 id="4-2-3-1-拷贝证书-私钥，注意私钥文件属性600"><a href="#4-2-3-1-拷贝证书-私钥，注意私钥文件属性600" class="headerlink" title="4.2.3.1.拷贝证书,私钥，注意私钥文件属性600"></a>4.2.3.1.拷贝证书,私钥，注意私钥文件属性600</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">kube-proxy-client</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">scp</span> <span class="hljs-selector-tag">hdss7-200</span>:/<span class="hljs-selector-tag">opt</span>/<span class="hljs-selector-tag">certs</span>/<span class="hljs-selector-tag">kube-proxy-client-key</span><span class="hljs-selector-class">.pem</span> .<br><span class="hljs-selector-attr">[root@hdss7-21 cert]</span># <span class="hljs-selector-tag">ll</span><br><span class="hljs-selector-tag">total</span> 40<br><span class="hljs-selector-tag">-rw-------</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1675 <span class="hljs-selector-tag">Nov</span> 17 09<span class="hljs-selector-pseudo">:10</span> <span class="hljs-selector-tag">kube-proxy-client-key</span><span class="hljs-selector-class">.pem</span><br><span class="hljs-selector-tag">-rw-r--r--</span> 1 <span class="hljs-selector-tag">root</span> <span class="hljs-selector-tag">root</span> 1375 <span class="hljs-selector-tag">Nov</span> 17 09<span class="hljs-selector-pseudo">:10</span> <span class="hljs-selector-tag">kube-proxy-client</span><span class="hljs-selector-class">.pem</span><br></code></pre></td></tr></table></figure><h5 id="4-2-3-2-创建配置"><a href="#4-2-3-2-创建配置" class="headerlink" title="4.2.3.2.创建配置"></a>4.2.3.2.创建配置</h5><p><strong>注意必须在conf目录下，否则报错</strong></p><h6 id="4-2-3-2-1-set-cluster"><a href="#4-2-3-2-1-set-cluster" class="headerlink" title="4.2.3.2.1.set-cluster"></a>4.2.3.2.1.set-cluster</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment"># kubectl config set-cluster myk8s \</span><br>--certificate-authority=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>ca.pem \<br>--embed-certs=true \<br>--server=https:<span class="hljs-regexp">//</span><span class="hljs-number">10.4</span>.<span class="hljs-number">7.10</span>:<span class="hljs-number">7443</span> \<br>--kubeconfig=kube-proxy.kubeconfig<br><br>返回结果：<br>Cluster <span class="hljs-string">&quot;myk8s&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-2-set-credentials"><a href="#4-2-3-2-2-set-credentials" class="headerlink" title="4.2.3.2.2.set-credentials"></a>4.2.3.2.2.set-credentials</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hdss7-<span class="hljs-number">21</span> conf]<span class="hljs-comment">#  kubectl config set-credentials kube-proxy \</span><br>  --client-certificate=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>kube-proxy-client.pem \<br>  --client-key=<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/cert/</span>kube-proxy-client-key.pem \<br>  --embed-certs=true \<br>  --kubeconfig=kube-proxy.kubeconfig<br>  <br>  返回结果：<br>  User <span class="hljs-string">&quot;kube-proxy&quot;</span> set.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-3-set-context"><a href="#4-2-3-2-3-set-context" class="headerlink" title="4.2.3.2.3.set-context"></a>4.2.3.2.3.set-context</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@hdss7-21 conf]# kubectl<span class="hljs-built_in"> config </span>set-context myk8s-context \<br><span class="hljs-attribute">--cluster</span>=myk8s \<br><span class="hljs-attribute">--user</span>=kube-proxy \<br><span class="hljs-attribute">--kubeconfig</span>=kube-proxy.kubeconfig<br><br>返回结果：<br>Context <span class="hljs-string">&quot;myk8s-context&quot;</span> created.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-4-use-context"><a href="#4-2-3-2-4-use-context" class="headerlink" title="4.2.3.2.4.use-context"></a>4.2.3.2.4.use-context</h6><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">[root@hdss7-<span class="hljs-number">21</span> conf]# kubectl config <span class="hljs-keyword">use</span>-<span class="hljs-keyword">context</span> myk8s-<span class="hljs-keyword">context</span> <span class="hljs-comment">--kubeconfig=kube-proxy.kubeconfig</span><br><br>返回结果<br>Switched <span class="hljs-keyword">to</span> <span class="hljs-keyword">context</span> <span class="hljs-string">&quot;myk8s-context&quot;</span>.<br></code></pre></td></tr></table></figure><h6 id="4-2-3-2-5-拷贝kube-proxy-kubeconfig-到-hdss7-22的conf目录下"><a href="#4-2-3-2-5-拷贝kube-proxy-kubeconfig-到-hdss7-22的conf目录下" class="headerlink" title="4.2.3.2.5.拷贝kube-proxy.kubeconfig 到 hdss7-22的conf目录下"></a>4.2.3.2.5.拷贝kube-proxy.kubeconfig 到 hdss7-22的conf目录下</h6><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> conf]# scp hdss7-<span class="hljs-number">21</span>:<span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/conf/</span>kube-proxy.kubeconfig .<br></code></pre></td></tr></table></figure><h4 id="4-2-4-创建kube-proxy启动脚本"><a href="#4-2-4-创建kube-proxy启动脚本" class="headerlink" title="4.2.4.创建kube-proxy启动脚本"></a>4.2.4.创建kube-proxy启动脚本</h4>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <h5 id="4-2-4-1-加载ipvs模块"><a href="#4-2-4-1-加载ipvs模块" class="headerlink" title="4.2.4.1.加载ipvs模块"></a>4.2.4.1.加载ipvs模块</h5><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">21</span> bin]# lsmod |<span class="hljs-keyword">grep</span> ip_vs<br>[root@hdss7-<span class="hljs-number">21</span> bin]# vi <span class="hljs-regexp">/root/i</span>pvs.sh<br>#!<span class="hljs-regexp">/bin/</span>bash<br>ipvs_mods_dir=<span class="hljs-string">&quot;/usr/lib/modules/$(uname -r)/kernel/net/netfilter/ipvs&quot;</span><br><span class="hljs-keyword">for</span> i in $(ls $ipvs_mods_dir|<span class="hljs-keyword">grep</span> -o <span class="hljs-string">&quot;^[^.]*&quot;</span>)<br><span class="hljs-keyword">do</span><br>  <span class="hljs-regexp">/sbin/m</span>odinfo -F filename $i &amp;&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-keyword">null</span><br>  <span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ];then<br>    <span class="hljs-regexp">/sbin/m</span>odprobe $i<br>  fi<br>done    <br><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]# chmod +x <span class="hljs-regexp">/root/i</span>pvs.sh <br>[root@hdss7-<span class="hljs-number">21</span> bin]# sh <span class="hljs-regexp">/root/i</span>pvs.sh <br><br>[root@hdss7-<span class="hljs-number">21</span> bin]# lsmod |<span class="hljs-keyword">grep</span> ip_vs<br>ip_vs_wrr              <span class="hljs-number">12697</span>  <span class="hljs-number">0</span> <br>ip_vs_wlc              <span class="hljs-number">12519</span>  <span class="hljs-number">0</span> <br>ip_vs_sh               <span class="hljs-number">12688</span>  <span class="hljs-number">0</span> <br>ip_vs_sed              <span class="hljs-number">12519</span>  <span class="hljs-number">0</span> <br>......<br></code></pre></td></tr></table></figure><h5 id="4-2-4-2-创建启动脚本"><a href="#4-2-4-2-创建启动脚本" class="headerlink" title="4.2.4.2.创建启动脚本"></a>4.2.4.2.创建启动脚本</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">[root@hdss7-21 bin]<span class="hljs-comment"># vi /opt/kubernetes/server/bin/kube-proxy.sh</span><br><span class="hljs-comment">#!/bin/sh</span><br><span class="hljs-string">./kube-proxy</span> \<br>  <span class="hljs-params">--cluster-cidr</span> 172.7.0.0/16 \<br>  <span class="hljs-params">--hostname-override</span> hdss7-21.host.com \<br>  <span class="hljs-params">--proxy-mode=ipvs</span> \<br>  <span class="hljs-params">--ipvs-scheduler=nq</span> \<br>  <span class="hljs-params">--kubeconfig</span> <span class="hljs-string">./conf/kube-proxy.kubeconfig</span><br></code></pre></td></tr></table></figure><h4 id="4-2-5-检查配置，权限，创建日志目录"><a href="#4-2-5-检查配置，权限，创建日志目录" class="headerlink" title="4.2.5.检查配置，权限，创建日志目录"></a>4.2.5.检查配置，权限，创建日志目录</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@hdss7-<span class="hljs-number">22</span> bin]# ls -l <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin<span class="hljs-regexp">/conf/</span>|<span class="hljs-keyword">grep</span> kube-proxy<br>-rw------- <span class="hljs-number">1</span> root root <span class="hljs-number">6215</span> Nov <span class="hljs-number">17</span> <span class="hljs-number">01</span>:<span class="hljs-number">22</span> kube-proxy.kubeconfig<br><br>[root@hdss7-<span class="hljs-number">22</span> bin]# chmod +x <span class="hljs-regexp">/opt/</span>kubernetes<span class="hljs-regexp">/server/</span>bin/kube-proxy.sh <br>[root@hdss7-<span class="hljs-number">22</span> bin]# mkdir -p <span class="hljs-regexp">/data/</span>logs<span class="hljs-regexp">/kubernetes/</span>kube-proxy<br></code></pre></td></tr></table></figure><h4 id="4-2-6-创建supervisor配置"><a href="#4-2-6-创建supervisor配置" class="headerlink" title="4.2.6.创建supervisor配置"></a>4.2.6.创建supervisor配置</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@hdss7-21 bin]</span><span class="hljs-comment"># vi /etc/supervisord.d/kube-proxy.ini</span><br><span class="hljs-section">[program:kube-proxy-7-21]</span><br><span class="hljs-attr">command</span>=/opt/kubernetes/server/bin/kube-proxy.sh                     <span class="hljs-comment">; the program (relative uses PATH, can take args)</span><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>                                                           <span class="hljs-comment">; number of processes copies to start (def 1)</span><br><span class="hljs-attr">directory</span>=/opt/kubernetes/server/bin                                 <span class="hljs-comment">; directory to cwd to before exec (def no cwd)</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span>                                                       <span class="hljs-comment">; start at supervisord start (default: true)</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span>                                                     <span class="hljs-comment">; retstart at unexpected quit (default: true)</span><br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">30</span>                                                         <span class="hljs-comment">; number of secs prog must stay running (def. 1)</span><br><span class="hljs-attr">startretries</span>=<span class="hljs-number">3</span>                                                       <span class="hljs-comment">; max # of serial start failures (default 3)</span><br><span class="hljs-attr">exitcodes</span>=<span class="hljs-number">0</span>,<span class="hljs-number">2</span>                                                        <span class="hljs-comment">; &#x27;expected&#x27; exit codes for process (default 0,2)</span><br><span class="hljs-attr">stopsignal</span>=QUIT                                                      <span class="hljs-comment">; signal used to kill process (default TERM)</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">10</span>                                                      <span class="hljs-comment">; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="hljs-attr">user</span>=root                                                            <span class="hljs-comment">; setuid to this UNIX account to run the program</span><br><span class="hljs-attr">redirect_stderr</span>=<span class="hljs-literal">true</span>                                                 <span class="hljs-comment">; redirect proc stderr to stdout (default false)</span><br><span class="hljs-attr">stdout_logfile</span>=/data/logs/kubernetes/kube-proxy/proxy.stdout.log     <span class="hljs-comment">; stderr log path, NONE for none; default AUTO</span><br><span class="hljs-attr">stdout_logfile_maxbytes</span>=<span class="hljs-number">64</span>MB                                         <span class="hljs-comment">; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="hljs-attr">stdout_logfile_backups</span>=<span class="hljs-number">4</span>                                             <span class="hljs-comment">; # of stdout logfile backups (default 10)</span><br><span class="hljs-attr">stdout_capture_maxbytes</span>=<span class="hljs-number">1</span>MB                                          <span class="hljs-comment">; number of bytes in &#x27;capturemode&#x27; (default 0)</span><br><span class="hljs-attr">stdout_events_enabled</span>=<span class="hljs-literal">false</span>                                          <span class="hljs-comment">; emit events on stdout writes (default false)</span><br></code></pre></td></tr></table></figure><h4 id="4-2-7-启动服务并检查"><a href="#4-2-7-启动服务并检查" class="headerlink" title="4.2.7.启动服务并检查"></a>4.2.7.启动服务并检查</h4><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl update<br>[root@hdss7<span class="hljs-string">-21</span> bin]# supervisorctl status<br>etcd-server<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                 RUNNING   pid 3270, uptime 1:22:21<br>kube-apiserver<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3273, uptime 1:22:21<br>kube-controller-manager<span class="hljs-string">-7</span><span class="hljs-string">-21</span>     RUNNING   pid 3267, uptime 1:22:21<br>kube-kubelet<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                RUNNING   pid 3268, uptime 1:22:21<br>kube-proxy<span class="hljs-string">-7</span><span class="hljs-string">-21</span>                  RUNNING   pid 19580, uptime 0:00:31<br>kube-scheduler<span class="hljs-string">-7</span><span class="hljs-string">-21</span>              RUNNING   pid 3269, uptime 1:22:21<br><br>[root@hdss7<span class="hljs-string">-21</span> bin]# yum install ipvsadm -y<br>[root@hdss7<span class="hljs-string">-21</span> bin]# ipvsadm -Ln<br>IP Virtual Server version 1.2.1 (size=4096)<br>Prot LocalAddress:Port Scheduler Flags<br>  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn<br>TCP  192.168.0.1:443 nq<br>  -&gt; 10.4.7.21:6443               Masq    1      0          0         <br>  -&gt; 10.4.7.22:6443               Masq    1      0          0   <br>  <br>  <br>[root@hdss7<span class="hljs-string">-21</span> bin]# kubectl get svc<br>NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)   AGE<br>kubernetes   ClusterIP   192.168.0.1   &lt;none&gt;        443/TCP   7h11m<br></code></pre></td></tr></table></figure><h4 id="4-2-8-安装部署启动检查所有集群规划主机"><a href="#4-2-8-安装部署启动检查所有集群规划主机" class="headerlink" title="4.2.8.安装部署启动检查所有集群规划主机"></a>4.2.8.安装部署启动检查所有集群规划主机</h4><p><strong>hdss7-22 跟上述基本相同</strong><br>/etc/supervisord.d/kube-proxy.ini<br>需要更改成[program:kube-proxy-7-21]</p><p>/opt/kubernetes/server/bin/kube-proxy.sh<br>需要改成 –hostname-override hdss7-22.host.com</p><h2 id="5-验证kubernetes集群"><a href="#5-验证kubernetes集群" class="headerlink" title="5.验证kubernetes集群"></a>5.验证kubernetes集群</h2><h3 id="5-1-在任意一个运算节点，创建一个资源配置清单"><a href="#5-1-在任意一个运算节点，创建一个资源配置清单" class="headerlink" title="5.1.在任意一个运算节点，创建一个资源配置清单"></a>5.1.在任意一个运算节点，创建一个资源配置清单</h3>            <input type="checkbox" disabled checked="checked">hdss7-21.host.com上          <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@hdss7-21</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vi /root/nginx-ds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">extensions/v1beta1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-ds</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-ds</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">my-nginx</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">harbor.od.com/public/nginx:v1.7.9</span><br>        <span class="hljs-attr">ports:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="5-2-应用资源配置，并检查"><a href="#5-2-应用资源配置，并检查" class="headerlink" title="5.2.应用资源配置，并检查"></a>5.2.应用资源配置，并检查</h3><h4 id="5-2-1-hdss7-21上的操作"><a href="#5-2-1-hdss7-21上的操作" class="headerlink" title="5.2.1.hdss7-21上的操作"></a>5.2.1.hdss7-21上的操作</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-21 bin]# kubectl create -f /root/nginx-ds.yaml<br><br>返回结果：<br>daemonset.extensions/nginx-ds created<br><br><br><br>[root@hdss7-21 bin]# kubectl get pods<br>NAME             READY   STATUS    RESTARTS   AGE<br>nginx-ds-mcvxt   1/1     Running   0          8h<br>nginx-ds-zsnz9   1/1     Running   0          8h<br><br><br>[root@hdss7-21 bin]# kubectl get pods -o wide<br>NAME             READY   STATUS    RESTARTS   AGE   IP           NODE                NOMINATED NODE   READINESS GATES<br>nginx-ds-mcvxt   1/1     Running   0          8h    172.7.21.2   hdss7-21.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>nginx-ds-zsnz9   1/1     Running   0          8h    172.7.22.2   hdss7-22.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br><br>[root@hdss7-21 bin]# curl 172.7.21.2<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Welcome to nginx!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>[root@hdss7-21 bin]# curl 172.7.22.2<br>^C   <br>//curl 不到？<br>原因是跨宿主机，docker容器还不能通信，下篇：flannel解决这个问题<br></code></pre></td></tr></table></figure><h4 id="5-2-2-hdss7-22上的操作"><a href="#5-2-2-hdss7-22上的操作" class="headerlink" title="5.2.2.hdss7-22上的操作"></a>5.2.2.hdss7-22上的操作</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@hdss7-22 bin]# kubectl get pods -o wide<br>NAME             READY   STATUS    RESTARTS   AGE     IP           NODE                NOMINATED NODE   READINESS GATES<br>nginx-ds-mcvxt   1/1     Running   0          6m45s   172.7.21.2   hdss7-21.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>nginx-ds-zsnz9   1/1     Running   0          6m45s   172.7.22.2   hdss7-22.host.com   <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span>           <span class="hljs-tag">&lt;<span class="hljs-name">none</span>&gt;</span><br>[root@hdss7-22 bin]# curl 172.7.22.2<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Welcome to nginx!<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><br>[root@hdss7-22 bin]# curl 172.7.21.2<br>^C<br>//curl 不到，上述已有解释<br></code></pre></td></tr></table></figure><h4 id="5-2-3-查看kubernetes集群上篇是否搭建好"><a href="#5-2-3-查看kubernetes集群上篇是否搭建好" class="headerlink" title="5.2.3.查看kubernetes集群上篇是否搭建好"></a>5.2.3.查看kubernetes集群上篇是否搭建好</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get cs</span><br>NAME                 STATUS    MESSAGE              ERROR<br>controller-manager   Healthy   ok                   <br>scheduler            Healthy   ok                   <br>etcd-<span class="hljs-number">1</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br>etcd-<span class="hljs-number">2</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125;   <br>etcd-<span class="hljs-number">0</span>               Healthy   &#123;<span class="hljs-string">&quot;health&quot;</span>: <span class="hljs-string">&quot;true&quot;</span>&#125; <br><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get node</span><br>NAME                STATUS   ROLES         AGE   <span class="hljs-keyword">VERSION</span><br>hdss7-<span class="hljs-number">21</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">9h</span>    v1.<span class="hljs-number">15.2</span><br>hdss7-<span class="hljs-number">22</span>.host.com   Ready    <span class="hljs-literal">master</span>,<span class="hljs-keyword">node</span>   <span class="hljs-title">10h</span>   v1.<span class="hljs-number">15.2</span><br><br>[root@hdss7-<span class="hljs-number">21</span> bin]<span class="hljs-comment"># kubectl get pods</span><br>NAME             READY   STATUS    RESTARTS   AGE<br>nginx-ds-mcvxt   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">8h</span><br>nginx-ds-zsnz9   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">8h</span><br></code></pre></td></tr></table></figure><h4 id="5-2-4-FAQ"><a href="#5-2-4-FAQ" class="headerlink" title="5.2.4.FAQ:"></a>5.2.4.FAQ:</h4><h5 id="5-2-4-1-：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错"><a href="#5-2-4-1-：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错" class="headerlink" title="5.2.4.1.：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错"></a>5.2.4.1.：kube-proxy启动之后，用不了ipvs模式，查看日志发现如下报错</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">E1111</span> <span class="hljs-number">12</span>:<span class="hljs-number">27</span>:<span class="hljs-number">38</span>.<span class="hljs-number">031263</span>   <span class="hljs-number">23086</span> server_others.go:<span class="hljs-number">259</span>] can&#x27;t determine whether to use ipvs proxy, error: error getting ipset version, error: executable file not found in $PATH<br><span class="hljs-attribute">W1111</span> <span class="hljs-number">12</span>:<span class="hljs-number">27</span>:<span class="hljs-number">38</span>.<span class="hljs-number">049355</span>   <span class="hljs-number">23086</span> node.go:<span class="hljs-number">113</span>] Failed to retrieve node info: Get https://<span class="hljs-number">10.4.7.10:7443</span>/api/v<span class="hljs-number">1</span>/nodes/hdss<span class="hljs-number">7</span>-<span class="hljs-number">21</span>.host.com: EOF<br><br><span class="hljs-attribute">yum</span> install   ipset  -y，用supervisor重启服务，问题解决<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>k8S</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-SAMBA服务</title>
    <link href="/2021/01/15/Linux-SAMBA%E6%9C%8D%E5%8A%A1/"/>
    <url>/2021/01/15/Linux-SAMBA%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装Samba服务，以及基础配置"><a href="#一、安装Samba服务，以及基础配置" class="headerlink" title="一、安装Samba服务，以及基础配置"></a>一、安装Samba服务，以及基础配置</h1><h2 id="Samba"><a href="#Samba" class="headerlink" title="Samba"></a><strong>Samba</strong></h2><p>Samba基于SMB/CIFS协议开发的软件，为不同操作系统提供文件服务和打印服务。Samba由smba和nmbd两个守护进程组成，使用服务端和客户端模式。</p><p>smbd进程除了为客户端提供文件共享与打印服务，还负责用户权限验证及锁功能。smbd默认监听的端口是TCP协议的139与445，Samba通过smb服务启动smbd进程。</p><p>nmbd进程提供NetBIOS名称服务，类似于DNS实现的功能，可以把Linux系统共享的工作组名称与其IP对应起来，Samba通过nmb服务启动nmbd进程，该进程默认使用UDP 137端口</p><p>本地用户验证登录：Linux账户+samba的密码密码在passdb.tdb</p><h2 id="Samba服务端配置步骤："><a href="#Samba服务端配置步骤：" class="headerlink" title="Samba服务端配置步骤："></a>Samba服务端配置步骤：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs routeros">1.基础操作<br>systemctl stop firewalld<br>setenforce 0 &amp;&amp; sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config<br>2.安装samba服务<br>yum -y install samba<br>3.创建共享目录并修改权限<br>mkdir /common<br>chmod 777 /common/<br>4.创建samba用户<br>useradd -s /sbin/nologin zhangsan<br>pdbedit -a zhangsan<br>5.设置samba的配置文件<br>[common]<br>        <span class="hljs-attribute">comment</span>=share #备注信息<br>        <span class="hljs-attribute">path</span>=/common #绝对路径<br>        write <span class="hljs-attribute">list</span>=zhangsan #允许读写的用户，@用户组<br>        <span class="hljs-attribute">browseable</span>=<span class="hljs-literal">yes</span> #共享是否被查看<br>        <span class="hljs-attribute">writable</span>=<span class="hljs-literal">no</span> #只读<br>        create <span class="hljs-attribute">mask</span>=0664<br>        directory <span class="hljs-attribute">mask</span>=0770<br>6.重启samba服务，并开机自启<br>systemctl restart<span class="hljs-built_in"> smb </span>&amp;&amp; systemctl <span class="hljs-builtin-name">enable</span> smb<br></code></pre></td></tr></table></figure><h2 id="Samba客户端配置步骤："><a href="#Samba客户端配置步骤：" class="headerlink" title="Samba客户端配置步骤："></a>Samba客户端配置步骤：</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">客户端登录方式：<br>linux端：<br>smbclient -U 用户名 -L <span class="hljs-regexp">//</span>服务器ip<br>smbclient -U 用户名  <span class="hljs-regexp">//</span>服务器ip/共享名<br>Windows端：<br>\\服务器ip\共享名<br>net use * /del  清除smb登录信息<br><span class="hljs-number">1</span>.在linux客户端上使用yum -y install samba-client 安、装samba客户端<br>[root@localhost ~]<span class="hljs-comment"># yum -y install samba-client</span><br><span class="hljs-number">2</span>.查看指定服务器共享资源<br>[root@Clare ~]<span class="hljs-comment"># smbclient -L //192.168.66.11 -U zhangsan%123456</span><br><span class="hljs-number">3</span>.挂载共享目录并设置开机自动项<br>    mkdir /common<br>    vim <span class="hljs-regexp">/etc/</span>fstab<br><span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">210.130</span><span class="hljs-regexp">/common /</span>common cifs  username=zhangsan,password=<span class="hljs-number">123456</span>,_netdev <span class="hljs-number">0</span> <span class="hljs-number">0</span> <br><br>mount -a<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux-链路聚合</title>
    <link href="/2021/01/09/Linux-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/"/>
    <url>/2021/01/09/Linux-%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</url>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>链路聚合：将多个物理端口汇聚在一起，形成一个逻辑端口，以实现流量的负载分担。</p><p>网卡的链路聚合就是将多个网卡绑定在一起，一张网卡损坏，网络依旧运行。</p><p>网卡的链路聚合一般常用的有“bond”“team”两种模式。“bond”最多可以添加两张网卡，“team”最多可以添加八张网卡。</p><h1 id="一、bond"><a href="#一、bond" class="headerlink" title="一、bond"></a>一、bond</h1><h2 id="bond的七种模式："><a href="#bond的七种模式：" class="headerlink" title="bond的七种模式："></a>bond的七种模式：</h2><ul><li>mode=0(balance-rr)(平衡抡循环策略)</li><li>mode=1(active-backup)(主-备份策略)</li><li>mode=2(balance-xor)(平衡策略)</li><li>mode=3(broadcast)(广播策略)</li><li>mode=4(802.3ad)(IEEE 802.3ad动态链路聚合)</li><li>mode=5(balance-tlb)(适配器传输负载均衡)</li><li>mode=6(balance-alb)(适配器适应性负载均衡)</li></ul><h2 id="1、查看目前的网卡的名称和状态"><a href="#1、查看目前的网卡的名称和状态" class="headerlink" title="1、查看目前的网卡的名称和状态"></a>1、查看目前的网卡的名称和状态</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@test ~]# nmcli device status <br>DEVICE <span class="hljs-built_in"> TYPE </span>     STATE     <span class="hljs-built_in"> CONNECTION </span><br>ens32  <span class="hljs-built_in"> ethernet </span> connected  ens32      <br>ens34  <span class="hljs-built_in"> ethernet </span> connected  ens34      <br>ens35  <span class="hljs-built_in"> ethernet </span> connected  ens35      <br>lo      loopback  unmanaged  -- <br></code></pre></td></tr></table></figure><h2 id="2、创建bond0端口"><a href="#2、创建bond0端口" class="headerlink" title="2、创建bond0端口"></a>2、创建bond0端口</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection add type bond con-name bond<span class="hljs-number">0</span> ifname bond<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.addresses <span class="hljs-number">172.24.8.10</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway  <span class="hljs-number">172.25.8.254</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="3、将接口ens34和ens35加入到bond"><a href="#3、将接口ens34和ens35加入到bond" class="headerlink" title="3、将接口ens34和ens35加入到bond"></a>3、将接口ens34和ens35加入到bond</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens34 con-name bond_port1 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span> <br>nmcli connection add <span class="hljs-keyword">type</span> bond-<span class="hljs-literal">slave</span> ifname ens35 con-name bond_port2 <span class="hljs-keyword">master</span> <span class="hljs-title">bond0</span><br></code></pre></td></tr></table></figure><h2 id="4、启动"><a href="#4、启动" class="headerlink" title="4、启动"></a>4、启动</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up bond<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="5、验证"><a href="#5、验证" class="headerlink" title="5、验证"></a>5、验证</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@test ~]</span># ip addr show bond0 <br><span class="hljs-number">5</span>: bond0: &lt;NO-CARRIER,BROADCAST,MULTICAST,MASTER,UP&gt; mtu <span class="hljs-number">1500</span> qdisc noqueue state DOWN group default qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">56</span>:<span class="hljs-number">66</span>:<span class="hljs-number">09</span>:9f:fd:cb brd ff:ff:ff:ff:ff:ff<br>    inet <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">255</span> scope global noprefixroute bond0<br>       valid_lft forever preferred_lft forever<br>       <br><span class="hljs-string">[root@test ~]</span># ip route <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev ens32 proto static metric <span class="hljs-number">100</span> <br>default via <span class="hljs-number">172</span>.<span class="hljs-number">25</span>.<span class="hljs-number">8</span>.<span class="hljs-number">254</span> dev bond0 proto static metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens32 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">138</span> metric <span class="hljs-number">100</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens34 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">142</span> metric <span class="hljs-number">101</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev ens35 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">141</span> metric <span class="hljs-number">102</span> <br><span class="hljs-number">172.24.8.0</span>/<span class="hljs-number">24</span> dev bond0 proto kernel scope link src <span class="hljs-number">172</span>.<span class="hljs-number">24</span>.<span class="hljs-number">8</span>.<span class="hljs-number">10</span> metric <span class="hljs-number">300</span> <br><span class="hljs-number">172.25.8.254</span> dev bond0 proto static scope link metric <span class="hljs-number">300</span><br></code></pre></td></tr></table></figure><h2 id="6、测试"><a href="#6、测试" class="headerlink" title="6、测试"></a>6、测试</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#断开一块网卡进行测试</span><br>[root<span class="hljs-symbol">@test</span> ~]<span class="hljs-meta"># ifdown ens34</span><br></code></pre></td></tr></table></figure><h1 id="二、team"><a href="#二、team" class="headerlink" title="二、team"></a>二、team</h1><h2 id="1、查看网卡的连接信息"><a href="#1、查看网卡的连接信息" class="headerlink" title="1、查看网卡的连接信息"></a>1、查看网卡的连接信息</h2><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[root@test ~]# nmcli connection show <br>NAME   UUID                                  TYPE      DEVICE <br>ens32  a4302588<span class="hljs-string">-30</span>ea<span class="hljs-string">-4</span>bc2-a8a8<span class="hljs-string">-00680</span>c2c08d6  ethernet  ens32  <br>ens34  150ea8a5<span class="hljs-string">-78</span>d4<span class="hljs-string">-3495</span>-a62f<span class="hljs-string">-79</span>f12989d4f8  ethernet  ens34  <br>ens35  0f677720<span class="hljs-string">-3221</span><span class="hljs-string">-3</span>a8b-a86d-adec6fcf7b99  ethernet  ens35 <br></code></pre></td></tr></table></figure><h2 id="2、创建team，名称为team0"><a href="#2、创建team，名称为team0" class="headerlink" title="2、创建team，名称为team0"></a>2、创建team，名称为team0</h2><p>按照下面的语法，用 nmcli 命令为网络组接口创建一个连接。</p><p># nmcli con add type team con-name CNAME ifname INAME [config JSON]</p><p>CNAME 指代连接的名称，INAME 是接口名称，JSON (JavaScript Object Notation) 指定所使用的处理器(runner)。JSON语法格式如下：</p><p>‘{“runner”:{“name”:”METHOD”}}’</p><p>METHOD 是以下的其中一个：broadcast、activebackup、roundrobin、loadbalance 或者 lacp。</p><p>最常见的双网卡绑定模式：<br>      （1） roundrobin - 轮询模式<br>所有链路处于负载均衡状态，这种模式的特点增加了带宽，同时支持容错能力。<br>      （2） activebackup - 主备模式<br>一个网卡处于活动状态，另一个处于备份状态，所有流量都在主链路上处理，当活动网卡down掉时，启用备份网卡。</p><p>这里我们创建“”roundrobin“为例”</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@test</span> ~]# nmcli con <span class="hljs-keyword">add</span> <span class="hljs-keyword">type</span> team con-name team<span class="hljs-number">0</span> ifname team<span class="hljs-number">0</span> config &#x27;&#123;<span class="hljs-string">&quot;runner&quot;</span>:&#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;roundrobin&quot;</span>&#125;&#125;&#x27;<br></code></pre></td></tr></table></figure><h2 id="3、设置team0的ip、gateway、dns"><a href="#3、设置team0的ip、gateway、dns" class="headerlink" title="3、设置team0的ip、gateway、dns"></a>3、设置team0的ip、gateway、dns</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.address <span class="hljs-number">172.24.8.11</span>/<span class="hljs-number">24</span> ipv<span class="hljs-number">4</span>.gateway <span class="hljs-number">172.24.8.254</span> <br><span class="hljs-attribute">nmcli</span> connection modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.dns <span class="hljs-number">114.114.114.114</span><br></code></pre></td></tr></table></figure><h2 id="4、设置team的属性为manual"><a href="#4、设置team的属性为manual" class="headerlink" title="4、设置team的属性为manual"></a>4、设置team的属性为manual</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> con modify team<span class="hljs-number">0</span> ipv<span class="hljs-number">4</span>.method manual<br></code></pre></td></tr></table></figure><h2 id="5、添加网卡ens34、ens35到team0中"><a href="#5、添加网卡ens34、ens35到team0中" class="headerlink" title="5、添加网卡ens34、ens35到team0中"></a>5、添加网卡ens34、ens35到team0中</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port1 ifname ens34 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br><br>nmcli con add <span class="hljs-keyword">type</span> team-<span class="hljs-literal">slave</span> con-name team0-port2 ifname ens35 <span class="hljs-keyword">master</span> <span class="hljs-title">team0</span><br></code></pre></td></tr></table></figure><h2 id="6、启动team0"><a href="#6、启动team0" class="headerlink" title="6、启动team0"></a>6、启动team0</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmcli</span> connection up team<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="7、查看team0状态"><a href="#7、查看team0状态" class="headerlink" title="7、查看team0状态"></a>7、查看team0状态</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@test</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># teamdctl team0 state view</span><br><span class="hljs-attr">setup:</span><br>  <span class="hljs-attr">runner:</span> <span class="hljs-string">roundrobin</span><br><span class="hljs-attr">ports:</span><br>  <span class="hljs-string">ens34</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br>  <span class="hljs-string">ens35</span><br>    <span class="hljs-attr">link watches:</span><br>      <span class="hljs-attr">link summary:</span> <span class="hljs-string">up</span><br>      <span class="hljs-string">instance[link_watch_0]:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">ethtool</span><br>        <span class="hljs-attr">link:</span> <span class="hljs-string">up</span><br>        <span class="hljs-attr">down count:</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>通过以上就完成了通过nmcli创建roundrobin的网络team</p><p>参考内容：<a href="https://blog.csdn.net/ghwzjz/article/details/109468437">https://blog.csdn.net/ghwzjz/article/details/109468437</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+GitHub搭建博客</title>
    <link href="/2021/01/08/Hexo-GitHub-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/01/08/Hexo-GitHub-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="一、安装Git"><a href="#一、安装Git" class="headerlink" title="一、安装Git"></a>一、安装Git</h1><blockquote><p>Git官网：<a href="https://git-scm.com/">https://git-scm.com</a></p></blockquote><h1 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h1><blockquote><p>Node.js官网：<a href="https://nodejs.org/">https://nodejs.org</a></p></blockquote><h1 id="三、申请GitHub账号"><a href="#三、申请GitHub账号" class="headerlink" title="三、申请GitHub账号"></a>三、申请GitHub账号</h1><blockquote><p>GitHub官网：<a href="https://github.com/">https://github.com</a></p></blockquote><ul><li><p><strong>申请GitHub账号</strong></p></li><li><p><strong>new repository</strong></p><p>​    <em>您所创建的Repository name必须是：RepositoryName.github.io</em></p></li><li><p><strong>点击Public</strong></p></li><li><p><strong>create Repository</strong></p></li></ul><h1 id="四、安装Hexo"><a href="#四、安装Hexo" class="headerlink" title="四、安装Hexo"></a>四、安装Hexo</h1><blockquote><p>​    Hexo是基于Node.js的静态博客</p></blockquote><ol><li><strong>在电脑新建一个blog文件夹，该文件夹用于存放你的博客文件，然后右键单击选择“Git Bash”</strong></li><li><strong>使用淘宝的NPM镜像，输入以下命令等待安装</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">--registry=https://registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>使用淘宝NPM安装Hexo</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#与原先的npm完全一样，只是命令改为cnpm</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">hexo-cli</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo</span> <span class="hljs-string">--save</span><br></code></pre></td></tr></table></figure><ol start="4"><li><strong>安装完成后，在输入命令，验证是否安装正确</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">-v</span><br></code></pre></td></tr></table></figure><ol start="5"><li><strong>本地运行hexo</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cd</span> <span class="hljs-string">/hexo/</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">init</span><br></code></pre></td></tr></table></figure><ol start="6"><li><strong>安装生成器</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span><br></code></pre></td></tr></table></figure><ol start="7"><li><strong>运行hexo，以后要在本地运行博客只要输入该命令即可</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#生成静态文件</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span><br><span class="hljs-comment">#运行服务器</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">server</span><br></code></pre></td></tr></table></figure><blockquote><p>访问测试：<a href="http://localhost:4000/">http://localhost:4000</a></p></blockquote><h1 id="五、配置SHH-Key"><a href="#五、配置SHH-Key" class="headerlink" title="五、配置SHH Key"></a>五、配置SHH Key</h1><h2 id="1-使用ssh-key"><a href="#1-使用ssh-key" class="headerlink" title="1. 使用ssh key"></a>1. 使用ssh key</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">cd</span> <span class="hljs-string">~/.ssh</span><br><span class="hljs-string">$</span> <span class="hljs-string">ssh-keygen</span> <span class="hljs-string">-t</span> <span class="hljs-string">rsa</span> <span class="hljs-string">-C</span> <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>​    接下来一直回车，最终会在你的家目录中.ssh\id_rsa.pub文件，复制里面的内容，打开GitHub主页，进入个人设置→ SSH and GPG keys→New SSH key。</p><p>​    将id_rsa.pub中的内容复制到Key中，Title可以随便写，保存</p><h2 id="2-测试"><a href="#2-测试" class="headerlink" title="2. 测试"></a>2. 测试</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">ssh</span> <span class="hljs-string">-T</span> <span class="hljs-string">git@github.com</span><br><br><span class="hljs-comment">#还需要以下配置：</span><br><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">-global</span> <span class="hljs-string">user.email</span> <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="六、部署到GitHub上"><a href="#六、部署到GitHub上" class="headerlink" title="六、部署到GitHub上"></a>六、部署到GitHub上</h1><p>在你的创建的blog下可以看到_config.yml文件，配置# Deployment这块</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">https://github.com/ButATree/ButATree.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br><br><span class="hljs-comment">#安装插件</span><br><span class="hljs-string">$</span> <span class="hljs-string">cnpm</span> <span class="hljs-string">install</span> <span class="hljs-string">hexo-deployer-git</span> <span class="hljs-string">--save</span><br><span class="hljs-comment">#部署到GitHub</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">d</span><br></code></pre></td></tr></table></figure><h1 id="七、hexo常用命令"><a href="#七、hexo常用命令" class="headerlink" title="七、hexo常用命令"></a>七、hexo常用命令</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">&quot;PostName&quot;</span> <span class="hljs-comment">#新建文章</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">&quot;PageName&quot;</span> <span class="hljs-comment">#新建页面</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">generate</span> <span class="hljs-comment">#s生成静态页面到Public目录</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">server</span> <span class="hljs-comment">#开启预览访问端口（默认端口4000）</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">deploy</span> <span class="hljs-comment">#部署到GitHub</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">help</span> <span class="hljs-comment">#帮助</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">version</span> <span class="hljs-comment">#查看hexo的版本</span><br><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">s</span> <span class="hljs-string">-g</span> <span class="hljs-comment">#生成并本地预览</span><br><span class="hljs-string">$</span> <span class="hljs-string">hexo</span> <span class="hljs-string">d</span> <span class="hljs-string">-g</span> <span class="hljs-comment">#生成并上传</span><br></code></pre></td></tr></table></figure><h1 id="八、主题"><a href="#八、主题" class="headerlink" title="八、主题"></a>八、主题</h1><blockquote><p>Hexo 主题地址：<a href="https://hexo.io/themes">https://hexo.io/themes</a></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">$</span> <span class="hljs-string">git</span> <span class="hljs-string">clon</span> <span class="hljs-string">https://github.com/litten/hexo-theme-yilia.git</span> <span class="hljs-string">themes/yilia</span><br><span class="hljs-comment">#修改_config.yml文件中和theme</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">yilia</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
